[2020-05-29T20:29:33.454136+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-29T20:29:33.456076+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.457345+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.457837+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.458154+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-05-29T20:29:33.458431+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.458948+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.459363+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.459648+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-05-29T20:29:33.459877+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.460293+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.460621+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.460903+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-05-29T20:29:33.461138+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.461553+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.461873+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.462119+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-05-29T20:29:33.462430+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.463124+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.463656+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.464027+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-05-29T20:29:33.464362+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.464993+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.465543+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.465951+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-05-29T20:29:33.466289+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.466999+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.467613+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.468069+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-05-29T20:29:33.468427+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order_item' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.469149+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order_item' */ WHERE k.table_name = 'order_item' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.469721+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order_item' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.470184+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order_item' [] []
[2020-05-29T20:29:33.470530+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.471417+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.472155+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.472712+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-05-29T20:29:33.473048+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.473679+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.474157+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.474521+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-05-29T20:29:33.474865+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.475539+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.476083+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.476519+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-05-29T20:29:33.476973+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'test_table' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.477713+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'test_table' */ WHERE k.table_name = 'test_table' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.478244+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'test_table' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.478601+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'test_table' [] []
[2020-05-29T20:29:33.478911+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.479536+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.480108+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.480465+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-05-29T20:29:33.480715+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:29:33.481188+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:29:33.481483+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:29:33.481768+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-29T20:31:43.085769+02:00] console.DEBUG: Command "make:crud attribute" exited with code "1" {"command":"make:crud attribute","code":1} []
[2020-05-29T20:34:07.747796+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-29T20:34:07.749851+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.751014+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.751547+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.751922+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-05-29T20:34:07.752198+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.752654+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.753102+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.753454+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-05-29T20:34:07.753703+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.754203+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.754564+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.754863+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-05-29T20:34:07.755134+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.755569+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.755929+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.756176+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-05-29T20:34:07.756413+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.756862+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.757204+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.757490+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-05-29T20:34:07.757733+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.758170+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.758595+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.758907+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-05-29T20:34:07.759170+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.759667+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.760104+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.760421+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-05-29T20:34:07.760662+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order_item' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.761149+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order_item' */ WHERE k.table_name = 'order_item' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.761573+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order_item' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.761885+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order_item' [] []
[2020-05-29T20:34:07.762123+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.762677+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.763156+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.763520+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-05-29T20:34:07.763762+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.764185+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.764559+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.764819+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-05-29T20:34:07.765045+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.765473+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.765800+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.766036+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-05-29T20:34:07.766261+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.766667+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.767047+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.767382+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-05-29T20:34:07.767628+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-29T20:34:07.768121+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-29T20:34:07.768489+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-29T20:34:07.768746+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-29T20:35:17.283248+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/department/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"department_index"},"request_uri":"http://localhost:8000/department","method":"GET"} []
[2020-05-29T20:35:17.285704+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:35:17.285772+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:17.285810+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:17.292519+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:35:17.298135+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:35:17.306738+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:35:17.332705+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-29T20:35:17.334336+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:35:17.334400+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:17.334439+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:17.342247+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-29T20:35:17.353326+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:35:17.354183+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:35:17.355647+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:35:17.448441+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0cb0ec"},"request_uri":"http://localhost:8000/_wdt/0cb0ec","method":"GET"} []
[2020-05-29T20:35:19.457869+02:00] request.INFO: Matched route "department_new". {"route":"department_new","route_parameters":{"_route":"department_new","_controller":"App\\Controller\\DepartmentController::new"},"request_uri":"http://localhost:8000/department/new","method":"GET"} []
[2020-05-29T20:35:19.459774+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:35:19.459849+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:19.459895+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:19.501085+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-29T20:35:19.573421+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:35:19.574313+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:35:19.575436+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:35:19.651714+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c8f40"},"request_uri":"http://localhost:8000/_wdt/7c8f40","method":"GET"} []
[2020-05-29T20:35:35.376345+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/college/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"college_index"},"request_uri":"http://localhost:8000/college","method":"GET"} []
[2020-05-29T20:35:35.380039+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:35:35.380261+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:35.380313+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:35.383610+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:35:35.386189+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:35:35.387547+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:35:35.403125+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-29T20:35:35.404697+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:35:35.404760+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:35.404798+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:35.408035+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-29T20:35:35.416867+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:35:35.417432+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:35:35.418381+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:35:35.509105+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8abd17"},"request_uri":"http://localhost:8000/_wdt/8abd17","method":"GET"} []
[2020-05-29T20:35:37.052138+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-29T20:35:37.054265+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:35:37.054377+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:37.054442+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:37.098699+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:35:37.099694+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:35:37.100807+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:35:37.186454+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"66ff6c"},"request_uri":"http://localhost:8000/_wdt/66ff6c","method":"GET"} []
[2020-05-29T20:35:46.550863+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"POST"} []
[2020-05-29T20:35:46.554161+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:35:46.556801+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:35:46.557892+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:35:46.557967+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:35:46.558010+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:46.558050+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:46.645265+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:35:46.645598+02:00] doctrine.DEBUG: INSERT INTO college (name, description) VALUES (?, ?) {"1":"Natural Science","2":null} []
[2020-05-29T20:35:46.645880+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:35:46.756933+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:35:46.784717+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-29T20:35:46.786872+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:35:46.786945+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:46.786986+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:46.790047+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-29T20:35:46.794558+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:35:46.795133+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:35:46.795923+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:35:46.883182+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"259caa"},"request_uri":"http://localhost:8000/_wdt/259caa","method":"GET"} []
[2020-05-29T20:35:54.436202+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/department/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"department_index"},"request_uri":"http://localhost:8000/department","method":"GET"} []
[2020-05-29T20:35:54.439230+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:35:54.439310+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:54.439351+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:54.442539+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:35:54.445032+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:35:54.446091+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:35:54.460998+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-29T20:35:54.462680+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:35:54.462745+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:54.462784+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:54.466207+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-29T20:35:54.471038+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:35:54.471639+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:35:54.472476+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:35:54.549737+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b50a9f"},"request_uri":"http://localhost:8000/_wdt/b50a9f","method":"GET"} []
[2020-05-29T20:35:56.092161+02:00] request.INFO: Matched route "department_new". {"route":"department_new","route_parameters":{"_route":"department_new","_controller":"App\\Controller\\DepartmentController::new"},"request_uri":"http://localhost:8000/department/new","method":"GET"} []
[2020-05-29T20:35:56.094650+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:35:56.094738+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:56.094805+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:35:56.104902+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-29T20:35:56.107280+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\College could not be converted to string" at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php line 57 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\College could not be converted to string at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php:57)"} []
[2020-05-29T20:35:56.145083+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:35:56.145879+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:35:56.146754+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:35:56.148174+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:35:56.245946+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"05fb98"},"request_uri":"http://localhost:8000/_wdt/05fb98","method":"GET"} []
[2020-05-29T20:36:48.827503+02:00] request.INFO: Matched route "department_new". {"route":"department_new","route_parameters":{"_route":"department_new","_controller":"App\\Controller\\DepartmentController::new"},"request_uri":"http://localhost:8000/department/new","method":"GET"} []
[2020-05-29T20:36:48.831206+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:36:48.831281+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:36:48.831334+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:36:48.844359+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-29T20:36:48.853906+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:36:48.854797+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:36:48.855799+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:36:48.930272+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b7ab90"},"request_uri":"http://localhost:8000/_wdt/b7ab90","method":"GET"} []
[2020-05-29T20:37:00.966691+02:00] request.INFO: Matched route "department_new". {"route":"department_new","route_parameters":{"_route":"department_new","_controller":"App\\Controller\\DepartmentController::new"},"request_uri":"http://localhost:8000/department/new","method":"POST"} []
[2020-05-29T20:37:00.969891+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:37:00.973408+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:37:00.974904+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:37:00.975009+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:37:00.975107+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:00.975183+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:00.985897+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-05-29T20:37:00.997795+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:37:00.998252+02:00] doctrine.DEBUG: INSERT INTO department (name, college_id) VALUES (?, ?) {"1":"Biology","2":1} []
[2020-05-29T20:37:00.998722+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:37:01.060895+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:37:01.150909+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-29T20:37:01.153787+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:37:01.153880+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:01.153952+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:01.158304+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-29T20:37:01.164663+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:37:01.165399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:37:01.166452+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:37:01.252049+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"33bd79"},"request_uri":"http://localhost:8000/_wdt/33bd79","method":"GET"} []
[2020-05-29T20:37:02.517094+02:00] request.INFO: Matched route "department_new". {"route":"department_new","route_parameters":{"_route":"department_new","_controller":"App\\Controller\\DepartmentController::new"},"request_uri":"http://localhost:8000/department/new","method":"GET"} []
[2020-05-29T20:37:02.519595+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:37:02.519739+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:02.519834+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:02.528022+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-29T20:37:02.534798+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:37:02.535557+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:37:02.536594+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:37:02.620798+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"41bf16"},"request_uri":"http://localhost:8000/_wdt/41bf16","method":"GET"} []
[2020-05-29T20:37:07.328572+02:00] request.INFO: Matched route "department_new". {"route":"department_new","route_parameters":{"_route":"department_new","_controller":"App\\Controller\\DepartmentController::new"},"request_uri":"http://localhost:8000/department/new","method":"POST"} []
[2020-05-29T20:37:07.331917+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:37:07.335176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:37:07.336464+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:37:07.336559+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:37:07.336610+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:07.336649+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:07.342961+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-05-29T20:37:07.351747+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:37:07.352128+02:00] doctrine.DEBUG: INSERT INTO department (name, college_id) VALUES (?, ?) {"1":"Chemistry","2":1} []
[2020-05-29T20:37:07.352542+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:37:07.492252+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:37:07.513972+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-29T20:37:07.515537+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:37:07.515595+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:07.515633+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:07.519177+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-29T20:37:07.527714+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:37:07.528320+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:37:07.529069+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:37:07.606920+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc6757"},"request_uri":"http://localhost:8000/_wdt/bc6757","method":"GET"} []
[2020-05-29T20:37:36.567726+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /category"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /category\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/category/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-05-29T20:37:36.693523+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"daa6e2"},"request_uri":"http://localhost:8000/_wdt/daa6e2","method":"GET"} []
[2020-05-29T20:37:44.808891+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/categories/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"categories_index"},"request_uri":"http://localhost:8000/categories","method":"GET"} []
[2020-05-29T20:37:44.811110+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:37:44.811199+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:44.811259+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:44.815378+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:37:44.818835+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:37:44.820058+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:37:44.840538+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-29T20:37:44.843159+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:37:44.843239+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:44.843277+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:44.848033+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-29T20:37:44.855305+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:37:44.856124+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:37:44.857742+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:37:44.945662+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"859882"},"request_uri":"http://localhost:8000/_wdt/859882","method":"GET"} []
[2020-05-29T20:37:46.494826+02:00] request.INFO: Matched route "categories_new". {"route":"categories_new","route_parameters":{"_route":"categories_new","_controller":"App\\Controller\\CategoriesController::new"},"request_uri":"http://localhost:8000/categories/new","method":"GET"} []
[2020-05-29T20:37:46.497630+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:37:46.497721+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:46.497787+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:37:46.522929+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:37:46.523710+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:37:46.524789+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:37:46.619220+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"460f29"},"request_uri":"http://localhost:8000/_wdt/460f29","method":"GET"} []
[2020-05-29T20:38:01.109148+02:00] request.INFO: Matched route "categories_new". {"route":"categories_new","route_parameters":{"_route":"categories_new","_controller":"App\\Controller\\CategoriesController::new"},"request_uri":"http://localhost:8000/categories/new","method":"POST"} []
[2020-05-29T20:38:01.112625+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:38:01.116413+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:38:01.117612+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:38:01.117700+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:38:01.117758+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:01.117811+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:01.130950+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:38:01.131288+02:00] doctrine.DEBUG: INSERT INTO categories (name, description) VALUES (?, ?) {"1":"Electronics","2":"des"} []
[2020-05-29T20:38:01.131625+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:38:01.176821+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:38:01.204982+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-29T20:38:01.206774+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:38:01.206840+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:01.206898+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:01.210343+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-29T20:38:01.216123+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:38:01.216929+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:38:01.217906+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:38:01.297544+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4db1b3"},"request_uri":"http://localhost:8000/_wdt/4db1b3","method":"GET"} []
[2020-05-29T20:38:02.563932+02:00] request.INFO: Matched route "categories_new". {"route":"categories_new","route_parameters":{"_route":"categories_new","_controller":"App\\Controller\\CategoriesController::new"},"request_uri":"http://localhost:8000/categories/new","method":"GET"} []
[2020-05-29T20:38:02.566211+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:38:02.566287+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:02.566340+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:02.579108+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:38:02.579875+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:38:02.580861+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:38:02.654767+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5ef7a4"},"request_uri":"http://localhost:8000/_wdt/5ef7a4","method":"GET"} []
[2020-05-29T20:38:09.368050+02:00] request.INFO: Matched route "categories_new". {"route":"categories_new","route_parameters":{"_route":"categories_new","_controller":"App\\Controller\\CategoriesController::new"},"request_uri":"http://localhost:8000/categories/new","method":"POST"} []
[2020-05-29T20:38:09.370512+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:38:09.373012+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:38:09.374100+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:38:09.374177+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:38:09.374220+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:09.374262+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:09.388398+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:38:09.388839+02:00] doctrine.DEBUG: INSERT INTO categories (name, description) VALUES (?, ?) {"1":"Stationary","2":"rt"} []
[2020-05-29T20:38:09.389221+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:38:09.534117+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:38:09.569542+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-29T20:38:09.571789+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:38:09.571889+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:09.571955+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:09.575752+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-29T20:38:09.582031+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:38:09.582870+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:38:09.584082+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:38:09.689833+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a817e1"},"request_uri":"http://localhost:8000/_wdt/a817e1","method":"GET"} []
[2020-05-29T20:38:19.539943+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/product/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"product_index"},"request_uri":"http://localhost:8000/product","method":"GET"} []
[2020-05-29T20:38:19.542389+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:38:19.542466+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:19.542518+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:19.546214+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:38:19.548808+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:38:19.549955+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:38:19.567229+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-29T20:38:19.568928+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:38:19.568991+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:19.569049+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:19.574528+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 [] []
[2020-05-29T20:38:19.582836+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:38:19.583582+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:38:19.584657+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:38:19.666631+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8c6c1a"},"request_uri":"http://localhost:8000/_wdt/8c6c1a","method":"GET"} []
[2020-05-29T20:38:22.016698+02:00] request.INFO: Matched route "product_new". {"route":"product_new","route_parameters":{"_route":"product_new","_controller":"App\\Controller\\ProductController::new"},"request_uri":"http://localhost:8000/product/new","method":"GET"} []
[2020-05-29T20:38:22.019568+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:38:22.019664+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:22.019707+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:22.051829+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-29T20:38:22.052561+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-29T20:38:22.054483+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\Categories could not be converted to string" at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php line 57 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\Categories could not be converted to string at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php:57)"} []
[2020-05-29T20:38:22.088263+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:38:22.089128+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:38:22.089969+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:38:22.091519+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:38:22.206237+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ef35d2"},"request_uri":"http://localhost:8000/_wdt/ef35d2","method":"GET"} []
[2020-05-29T20:38:49.643226+02:00] request.INFO: Matched route "product_new". {"route":"product_new","route_parameters":{"_route":"product_new","_controller":"App\\Controller\\ProductController::new"},"request_uri":"http://localhost:8000/product/new","method":"GET"} []
[2020-05-29T20:38:49.647299+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:38:49.647402+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:49.647467+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:38:49.669181+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-29T20:38:49.669982+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-29T20:38:49.670808+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-29T20:38:49.671397+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-29T20:38:49.684317+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:38:49.685383+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:38:49.686249+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:38:49.762038+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"74a0b8"},"request_uri":"http://localhost:8000/_wdt/74a0b8","method":"GET"} []
[2020-05-29T20:39:19.891376+02:00] request.INFO: Matched route "product_new". {"route":"product_new","route_parameters":{"_route":"product_new","_controller":"App\\Controller\\ProductController::new"},"request_uri":"http://localhost:8000/product/new","method":"POST"} []
[2020-05-29T20:39:19.894243+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:39:19.897681+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:39:19.899179+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:39:19.899286+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:39:19.899346+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:39:19.899398+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:39:20.256843+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-05-29T20:39:20.279113+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:39:20.279662+02:00] doctrine.DEBUG: INSERT INTO product (name, price, quantity, description, model, serial, isavailable, brand_id, category_id, store_id, product_type_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Computer","2":12.0,"3":12,"4":"desc","5":"12121asd","6":"1234","7":true,"8":null,"9":1,"10":null,"11":null} []
[2020-05-29T20:39:20.282197+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-05-29T20:39:20.283862+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\NotNullConstraintViolationException: "An exception occurred while executing 'INSERT INTO product (name, price, quantity, description, model, serial, isavailable, brand_id, category_id, store_id, product_type_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)' with params ["Computer", 12, 12, "desc", "12121asd", "1234", 1, null, 1, null, null]:  SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'store_id' cannot be null" at /var/www/inventory/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 103 {"exception":"[object] (Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO product (name, price, quantity, description, model, serial, isavailable, brand_id, category_id, store_id, product_type_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [\"Computer\", 12, 12, \"desc\", \"12121asd\", \"1234\", 1, null, 1, null, null]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'store_id' cannot be null at /var/www/inventory/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:103)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'store_id' cannot be null at /var/www/inventory/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'store_id' cannot be null at /var/www/inventory/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-05-29T20:39:20.419894+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:39:20.520065+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9175c3"},"request_uri":"http://localhost:8000/_wdt/9175c3","method":"GET"} []
[2020-05-29T20:39:27.039408+02:00] request.INFO: Matched route "product_new". {"route":"product_new","route_parameters":{"_route":"product_new","_controller":"App\\Controller\\ProductController::new"},"request_uri":"http://localhost:8000/product/new","method":"GET"} []
[2020-05-29T20:39:27.041805+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:39:27.041870+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:39:27.041910+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:39:27.052666+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-29T20:39:27.053243+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-29T20:39:27.053794+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-29T20:39:27.054158+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-29T20:39:27.062547+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:39:27.063366+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:39:27.064230+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:39:27.143566+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"361058"},"request_uri":"http://localhost:8000/_wdt/361058","method":"GET"} []
[2020-05-29T20:39:30.776990+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"361058"},"request_uri":"http://localhost:8000/_wdt/361058","method":"GET"} []
[2020-05-29T20:40:11.605842+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/brand/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"brand_index"},"request_uri":"http://localhost:8000/brand","method":"GET"} []
[2020-05-29T20:40:11.608960+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:40:11.609036+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:11.609090+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:11.612407+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:40:11.614693+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:40:11.615731+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:40:11.631631+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-29T20:40:11.633239+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:40:11.633322+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:11.633377+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:11.636915+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-29T20:40:11.645181+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:40:11.645808+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:40:11.646695+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:40:11.730606+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d6d4f8"},"request_uri":"http://localhost:8000/_wdt/d6d4f8","method":"GET"} []
[2020-05-29T20:40:13.906534+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"GET"} []
[2020-05-29T20:40:13.908387+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:40:13.908457+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:13.908500+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:13.931978+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:40:13.932676+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:40:13.933774+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:40:14.019570+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"60766c"},"request_uri":"http://localhost:8000/_wdt/60766c","method":"GET"} []
[2020-05-29T20:40:20.772342+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"POST"} []
[2020-05-29T20:40:20.775094+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:40:20.778058+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:40:20.779710+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:40:20.779802+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:40:20.779869+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:20.779947+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:20.793028+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:40:20.793420+02:00] doctrine.DEBUG: INSERT INTO brand (name, description) VALUES (?, ?) {"1":"HP","2":"s"} []
[2020-05-29T20:40:20.793748+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:40:20.882182+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:40:20.930992+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-29T20:40:20.932714+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:40:20.932798+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:20.932854+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:20.936269+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-29T20:40:20.941393+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:40:20.942134+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:40:20.942949+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:40:21.022639+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6f3acf"},"request_uri":"http://localhost:8000/_wdt/6f3acf","method":"GET"} []
[2020-05-29T20:40:22.013911+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"GET"} []
[2020-05-29T20:40:22.015983+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:40:22.016054+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:22.016130+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:22.028007+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:40:22.028982+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:40:22.030062+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:40:22.142510+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f794a"},"request_uri":"http://localhost:8000/_wdt/8f794a","method":"GET"} []
[2020-05-29T20:40:29.147460+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"POST"} []
[2020-05-29T20:40:29.150189+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:40:29.152658+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:40:29.153780+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:40:29.153860+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:40:29.153903+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:29.153939+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:29.167478+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:40:29.167775+02:00] doctrine.DEBUG: INSERT INTO brand (name, description) VALUES (?, ?) {"1":"Toshiba","2":"z"} []
[2020-05-29T20:40:29.168109+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:40:29.304707+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:40:29.329852+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-29T20:40:29.331803+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:40:29.331874+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:29.331927+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:29.335277+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-29T20:40:29.340007+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:40:29.340536+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:40:29.341338+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:40:29.432314+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f79f40"},"request_uri":"http://localhost:8000/_wdt/f79f40","method":"GET"} []
[2020-05-29T20:40:30.322067+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"GET"} []
[2020-05-29T20:40:30.324069+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:40:30.324148+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:30.324198+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:30.335680+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:40:30.336471+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:40:30.337468+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:40:30.414195+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d207e2"},"request_uri":"http://localhost:8000/_wdt/d207e2","method":"GET"} []
[2020-05-29T20:40:36.229381+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"POST"} []
[2020-05-29T20:40:36.231833+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:40:36.234478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:40:36.235678+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:40:36.235794+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:40:36.235877+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:36.235957+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:36.249091+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:40:36.249434+02:00] doctrine.DEBUG: INSERT INTO brand (name, description) VALUES (?, ?) {"1":"Lenovo","2":"s"} []
[2020-05-29T20:40:36.249734+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:40:36.333117+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:40:36.382375+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-29T20:40:36.384078+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:40:36.384143+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:36.384198+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:36.387514+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-29T20:40:36.392358+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:40:36.393106+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:40:36.393976+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:40:36.471530+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8886c4"},"request_uri":"http://localhost:8000/_wdt/8886c4","method":"GET"} []
[2020-05-29T20:40:47.078463+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"type"},"request_uri":"http://localhost:8000/product/type","method":"GET"} []
[2020-05-29T20:40:47.081424+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:40:47.081500+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:47.081541+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:40:47.085496+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["type"] []
[2020-05-29T20:40:47.087644+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "App\Entity\Product object not found by the @ParamConverter annotation." at /var/www/inventory/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DoctrineParamConverter.php line 107 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): App\\Entity\\Product object not found by the @ParamConverter annotation. at /var/www/inventory/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DoctrineParamConverter.php:107)"} []
[2020-05-29T20:40:47.104330+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:40:47.104912+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:40:47.105702+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:40:47.107323+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:40:47.199836+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"921321"},"request_uri":"http://localhost:8000/_wdt/921321","method":"GET"} []
[2020-05-29T20:40:54.824463+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /producttype"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /producttype\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/producttype/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-05-29T20:40:54.949109+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"832e14"},"request_uri":"http://localhost:8000/_wdt/832e14","method":"GET"} []
[2020-05-29T20:41:07.376121+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/store/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"store_index"},"request_uri":"http://localhost:8000/store","method":"GET"} []
[2020-05-29T20:41:07.379405+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:41:07.379497+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:07.379561+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:07.383261+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:41:07.385730+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:41:07.386759+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:41:07.405007+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-29T20:41:07.406821+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:41:07.406892+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:07.406947+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:07.410277+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-29T20:41:07.419235+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:41:07.419989+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:41:07.421177+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:41:07.507115+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a53531"},"request_uri":"http://localhost:8000/_wdt/a53531","method":"GET"} []
[2020-05-29T20:41:08.911927+02:00] request.INFO: Matched route "store_new". {"route":"store_new","route_parameters":{"_route":"store_new","_controller":"App\\Controller\\StoreController::new"},"request_uri":"http://localhost:8000/store/new","method":"GET"} []
[2020-05-29T20:41:08.914657+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:41:08.914758+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:08.914851+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:08.945274+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:41:08.945987+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:41:08.946952+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:41:09.033260+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ec267"},"request_uri":"http://localhost:8000/_wdt/2ec267","method":"GET"} []
[2020-05-29T20:41:20.206294+02:00] request.INFO: Matched route "store_new". {"route":"store_new","route_parameters":{"_route":"store_new","_controller":"App\\Controller\\StoreController::new"},"request_uri":"http://localhost:8000/store/new","method":"POST"} []
[2020-05-29T20:41:20.210125+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:41:20.212936+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:41:20.214149+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:41:20.214234+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:41:20.214298+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:20.214355+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:20.227784+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:41:20.228149+02:00] doctrine.DEBUG: INSERT INTO store (name, description, is_active) VALUES (?, ?, ?) {"1":"Main store","2":"s","3":true} []
[2020-05-29T20:41:20.228497+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:41:20.293774+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:41:20.332821+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-29T20:41:20.334474+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:41:20.334549+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:20.334589+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:20.338027+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-29T20:41:20.343294+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:41:20.343927+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:41:20.344820+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:41:20.437090+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"604afc"},"request_uri":"http://localhost:8000/_wdt/604afc","method":"GET"} []
[2020-05-29T20:41:21.999560+02:00] request.INFO: Matched route "store_new". {"route":"store_new","route_parameters":{"_route":"store_new","_controller":"App\\Controller\\StoreController::new"},"request_uri":"http://localhost:8000/store/new","method":"GET"} []
[2020-05-29T20:41:22.001384+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:41:22.001451+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:22.001494+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:22.013483+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:41:22.014282+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:41:22.015249+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:41:22.099650+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0a2603"},"request_uri":"http://localhost:8000/_wdt/0a2603","method":"GET"} []
[2020-05-29T20:41:30.301671+02:00] request.INFO: Matched route "store_new". {"route":"store_new","route_parameters":{"_route":"store_new","_controller":"App\\Controller\\StoreController::new"},"request_uri":"http://localhost:8000/store/new","method":"POST"} []
[2020-05-29T20:41:30.305192+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:41:30.307963+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:41:30.309052+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:41:30.309133+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:41:30.309189+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:30.309229+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:30.322585+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:41:30.322897+02:00] doctrine.DEBUG: INSERT INTO store (name, description, is_active) VALUES (?, ?, ?) {"1":"Salvage","2":"c","3":false} []
[2020-05-29T20:41:30.323274+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:41:30.433993+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:41:30.461061+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-29T20:41:30.462719+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:41:30.462783+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:30.462821+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:30.466298+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-29T20:41:30.470351+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:41:30.470975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:41:30.471779+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:41:30.548249+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cf7a97"},"request_uri":"http://localhost:8000/_wdt/cf7a97","method":"GET"} []
[2020-05-29T20:41:38.256630+02:00] request.INFO: Matched route "product_new". {"route":"product_new","route_parameters":{"_route":"product_new","_controller":"App\\Controller\\ProductController::new"},"request_uri":"http://localhost:8000/product/new","method":"GET"} []
[2020-05-29T20:41:38.259340+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:41:38.259446+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:38.259514+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:41:38.270000+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-29T20:41:38.272116+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\Brand could not be converted to string" at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php line 57 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\Brand could not be converted to string at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php:57)"} []
[2020-05-29T20:41:38.303503+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:41:38.304506+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:41:38.305510+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:41:38.307092+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:41:38.398155+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a9e848"},"request_uri":"http://localhost:8000/_wdt/a9e848","method":"GET"} []
[2020-05-29T20:42:20.274415+02:00] request.INFO: Matched route "product_new". {"route":"product_new","route_parameters":{"_route":"product_new","_controller":"App\\Controller\\ProductController::new"},"request_uri":"http://localhost:8000/product/new","method":"GET"} []
[2020-05-29T20:42:20.282299+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:42:20.282489+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:42:20.282609+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:42:20.314415+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-29T20:42:20.315499+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-29T20:42:20.315985+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-29T20:42:20.318695+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\Store could not be converted to string" at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php line 57 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\Store could not be converted to string at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php:57)"} []
[2020-05-29T20:42:20.348835+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:42:20.349675+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:42:20.350627+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:42:20.352069+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:42:20.449776+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c4d012"},"request_uri":"http://localhost:8000/_wdt/c4d012","method":"GET"} []
[2020-05-29T20:42:36.010382+02:00] request.INFO: Matched route "product_new". {"route":"product_new","route_parameters":{"_route":"product_new","_controller":"App\\Controller\\ProductController::new"},"request_uri":"http://localhost:8000/product/new","method":"GET"} []
[2020-05-29T20:42:36.013347+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:42:36.013429+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:42:36.013491+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:42:36.031819+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-29T20:42:36.032755+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-29T20:42:36.033227+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-29T20:42:36.033758+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-29T20:42:36.041579+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:42:36.042378+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:42:36.043287+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:42:36.133703+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ead22b"},"request_uri":"http://localhost:8000/_wdt/ead22b","method":"GET"} []
[2020-05-29T20:43:26.087397+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ead22b"},"request_uri":"http://localhost:8000/_wdt/ead22b","method":"GET"} []
[2020-05-29T20:43:29.988878+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/producttype/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"product_type_index"},"request_uri":"http://localhost:8000/producttype","method":"GET"} []
[2020-05-29T20:43:29.991765+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:43:29.991839+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:43:29.991923+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:43:29.995209+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:43:29.998151+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:43:29.999804+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:43:30.017658+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-29T20:43:30.019176+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:43:30.019233+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:43:30.019279+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:43:30.023210+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-29T20:43:30.031495+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:43:30.032030+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:43:30.032864+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:43:30.133060+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"029be8"},"request_uri":"http://localhost:8000/_wdt/029be8","method":"GET"} []
[2020-05-29T20:43:40.247686+02:00] request.INFO: Matched route "product_type_new". {"route":"product_type_new","route_parameters":{"_route":"product_type_new","_controller":"App\\Controller\\ProductTypeController::new"},"request_uri":"http://localhost:8000/producttype/new","method":"GET"} []
[2020-05-29T20:43:40.250706+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:43:40.250802+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:43:40.250862+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:43:40.393706+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:43:40.395896+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:43:40.398345+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:43:40.504981+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e1826c"},"request_uri":"http://localhost:8000/_wdt/e1826c","method":"GET"} []
[2020-05-29T20:44:07.925900+02:00] request.INFO: Matched route "product_type_new". {"route":"product_type_new","route_parameters":{"_route":"product_type_new","_controller":"App\\Controller\\ProductTypeController::new"},"request_uri":"http://localhost:8000/producttype/new","method":"POST"} []
[2020-05-29T20:44:07.929210+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:44:07.932176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:44:07.933327+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:44:07.933408+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:44:07.933455+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:07.933513+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:07.952320+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:44:07.952661+02:00] doctrine.DEBUG: INSERT INTO product_type (name, description) VALUES (?, ?) {"1":"Quami","2":"f"} []
[2020-05-29T20:44:07.952989+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:44:07.989951+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:44:08.014566+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-29T20:44:08.016137+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:44:08.016198+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:08.016236+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:08.019331+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-29T20:44:08.024121+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:44:08.024778+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:44:08.025602+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:44:08.111007+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7d9ca3"},"request_uri":"http://localhost:8000/_wdt/7d9ca3","method":"GET"} []
[2020-05-29T20:44:09.237517+02:00] request.INFO: Matched route "product_type_new". {"route":"product_type_new","route_parameters":{"_route":"product_type_new","_controller":"App\\Controller\\ProductTypeController::new"},"request_uri":"http://localhost:8000/producttype/new","method":"GET"} []
[2020-05-29T20:44:09.240075+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:44:09.240191+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:09.240274+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:09.255275+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:44:09.256163+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:44:09.257623+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:44:09.334688+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e9779b"},"request_uri":"http://localhost:8000/_wdt/e9779b","method":"GET"} []
[2020-05-29T20:44:18.756643+02:00] request.INFO: Matched route "product_type_new". {"route":"product_type_new","route_parameters":{"_route":"product_type_new","_controller":"App\\Controller\\ProductTypeController::new"},"request_uri":"http://localhost:8000/producttype/new","method":"POST"} []
[2020-05-29T20:44:18.759540+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:44:18.762396+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:44:18.763593+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:44:18.763679+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:44:18.763742+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:18.763817+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:18.776989+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:44:18.777374+02:00] doctrine.DEBUG: INSERT INTO product_type (name, description) VALUES (?, ?) {"1":"Alaki","2":"f"} []
[2020-05-29T20:44:18.777695+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:44:18.915939+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:44:18.948432+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-29T20:44:18.949883+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:44:18.949938+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:18.949973+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:18.953022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-29T20:44:18.957307+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:44:18.958214+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:44:18.959113+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:44:19.039047+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"660514"},"request_uri":"http://localhost:8000/_wdt/660514","method":"GET"} []
[2020-05-29T20:44:19.967823+02:00] request.INFO: Matched route "product_type_new". {"route":"product_type_new","route_parameters":{"_route":"product_type_new","_controller":"App\\Controller\\ProductTypeController::new"},"request_uri":"http://localhost:8000/producttype/new","method":"GET"} []
[2020-05-29T20:44:19.969376+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:44:19.969437+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:19.969485+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:19.981289+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:44:19.982068+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:44:19.982997+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:44:20.071338+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"44f533"},"request_uri":"http://localhost:8000/_wdt/44f533","method":"GET"} []
[2020-05-29T20:44:25.728414+02:00] request.INFO: Matched route "product_type_new". {"route":"product_type_new","route_parameters":{"_route":"product_type_new","_controller":"App\\Controller\\ProductTypeController::new"},"request_uri":"http://localhost:8000/producttype/new","method":"POST"} []
[2020-05-29T20:44:25.730610+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:44:25.733388+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:44:25.734960+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:44:25.735047+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:44:25.735140+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:25.735177+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:25.747200+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:44:25.747510+02:00] doctrine.DEBUG: INSERT INTO product_type (name, description) VALUES (?, ?) {"1":"Both","2":"d"} []
[2020-05-29T20:44:25.747785+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:44:25.851013+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:44:25.890911+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-29T20:44:25.892676+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:44:25.892742+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:25.892800+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:25.895866+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-29T20:44:25.900327+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:44:25.900998+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:44:25.901817+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:44:25.978237+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2f13bf"},"request_uri":"http://localhost:8000/_wdt/2f13bf","method":"GET"} []
[2020-05-29T20:44:44.091260+02:00] request.INFO: Matched route "product_new". {"route":"product_new","route_parameters":{"_route":"product_new","_controller":"App\\Controller\\ProductController::new"},"request_uri":"http://localhost:8000/product/new","method":"GET"} []
[2020-05-29T20:44:44.093716+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:44:44.093790+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:44.093855+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:44:44.105625+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-29T20:44:44.106573+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-29T20:44:44.107165+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-29T20:44:44.107866+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-29T20:44:44.115344+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:44:44.116161+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:44:44.117056+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:44:44.198173+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8bce87"},"request_uri":"http://localhost:8000/_wdt/8bce87","method":"GET"} []
[2020-05-29T20:45:25.220747+02:00] request.INFO: Matched route "product_new". {"route":"product_new","route_parameters":{"_route":"product_new","_controller":"App\\Controller\\ProductController::new"},"request_uri":"http://localhost:8000/product/new","method":"POST"} []
[2020-05-29T20:45:25.223012+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:45:25.225688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:45:25.226898+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:45:25.226984+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:45:25.227050+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:45:25.227126+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:45:25.236407+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["1"]] []
[2020-05-29T20:45:25.237315+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["2"]] []
[2020-05-29T20:45:25.237945+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-05-29T20:45:25.238550+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["1"]] []
[2020-05-29T20:45:25.248657+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-29T20:45:25.249058+02:00] doctrine.DEBUG: INSERT INTO product (name, price, quantity, description, model, serial, isavailable, brand_id, category_id, store_id, product_type_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Computer","2":1200.0,"3":1,"4":"desc","5":"1203l","6":"ser","7":true,"8":1,"9":2,"10":2,"11":1} []
[2020-05-29T20:45:25.249436+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-29T20:45:25.678194+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2020-05-29T20:45:25.719896+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-29T20:45:25.721634+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:45:25.721703+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:45:25.721757+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:45:25.726495+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 [] []
[2020-05-29T20:45:25.735040+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:45:25.735723+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:45:25.736556+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:45:25.819954+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b708a1"},"request_uri":"http://localhost:8000/_wdt/b708a1","method":"GET"} []
[2020-05-29T20:47:10.443854+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-05-29T20:47:10.446225+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:47:10.446290+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:47:10.446331+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:47:10.450952+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-05-29T20:47:10.466848+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:47:10.467445+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:47:10.468326+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:47:10.550518+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e83cad"},"request_uri":"http://localhost:8000/_wdt/e83cad","method":"GET"} []
[2020-05-29T20:47:51.793061+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-05-29T20:47:51.795880+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-29T20:47:51.795957+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:47:51.796016+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-29T20:47:51.800655+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-05-29T20:47:51.811095+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2020-05-29T20:47:51.811716+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2020-05-29T20:47:51.812502+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"amsaleka"} []
[2020-05-29T20:47:51.886002+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"07b8a0"},"request_uri":"http://localhost:8000/_wdt/07b8a0","method":"GET"} []
[2020-05-31T05:59:02.885773+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-05-31T05:59:04.953583+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"243c09"},"request_uri":"http://localhost:8000/_wdt/243c09","method":"GET"} []
[2020-05-31T05:59:05.886861+02:00] console.ERROR: Error thrown while running command "debug:container --show-private --format=json". Message: "The "--show-private" option does not exist." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): The \"--show-private\" option does not exist. at /var/www/inventory/vendor/symfony/console/Input/ArgvInput.php:200)","command":"debug:container --show-private --format=json","message":"The \"--show-private\" option does not exist."} []
[2020-05-31T05:59:05.895474+02:00] console.DEBUG: Command "debug:container --show-private --format=json" exited with code "1" {"command":"debug:container --show-private --format=json","code":1} []
[2020-05-31T05:59:14.103834+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T05:59:14.356670+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T05:59:14.357141+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T05:59:14.357484+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T05:59:16.441589+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T05:59:16.570762+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ffb865"},"request_uri":"http://localhost:8000/_wdt/ffb865","method":"GET"} []
[2020-05-31T05:59:28.069755+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/department/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"department_index"},"request_uri":"http://localhost:8000/department","method":"GET"} []
[2020-05-31T05:59:28.072672+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T05:59:28.072774+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T05:59:28.072836+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T05:59:28.112987+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T05:59:28.147752+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T05:59:28.149919+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T05:59:28.150020+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T05:59:28.150097+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T05:59:28.652618+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T05:59:29.061278+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T05:59:29.435278+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"226cd4"},"request_uri":"http://localhost:8000/_wdt/226cd4","method":"GET"} []
[2020-05-31T06:25:52.297648+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T06:25:52.302594+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:25:52.303783+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:25:52.304626+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:25:52.310669+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T06:25:52.327086+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:25:53.090318+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"97fb6d"},"request_uri":"http://localhost:8000/_wdt/97fb6d","method":"GET"} []
[2020-05-31T06:25:58.953302+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T06:25:58.955925+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:25:58.955999+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:25:58.956040+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:25:58.959780+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T06:25:58.966384+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:25:59.382760+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e707d6"},"request_uri":"http://localhost:8000/_wdt/e707d6","method":"GET"} []
[2020-05-31T06:26:06.449857+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:26:06.452528+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:26:06.452603+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:06.452644+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:06.457961+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:26:06.894598+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c20776"},"request_uri":"http://localhost:8000/_wdt/c20776","method":"GET"} []
[2020-05-31T06:26:12.313938+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/college/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"college_index"},"request_uri":"http://localhost:8000/college","method":"GET"} []
[2020-05-31T06:26:12.316212+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:26:12.316292+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:12.316353+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:12.319632+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:26:12.338509+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T06:26:12.340726+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:26:12.340825+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:12.340885+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:12.346655+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T06:26:12.432810+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:26:12.849766+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"42291f"},"request_uri":"http://localhost:8000/_wdt/42291f","method":"GET"} []
[2020-05-31T06:26:14.563425+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T06:26:14.565283+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:26:14.565379+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:14.565440+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:14.769715+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:26:15.180190+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8cc935"},"request_uri":"http://localhost:8000/_wdt/8cc935","method":"GET"} []
[2020-05-31T06:26:22.272905+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T06:26:22.276028+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:26:22.276125+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:22.276188+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:22.280918+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T06:26:22.286625+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:26:22.694255+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"771095"},"request_uri":"http://localhost:8000/_wdt/771095","method":"GET"} []
[2020-05-31T06:26:33.867930+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T06:26:33.870247+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:26:33.870329+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:33.870385+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:33.875094+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T06:26:33.880243+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:26:34.296540+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9f7574"},"request_uri":"http://localhost:8000/_wdt/9f7574","method":"GET"} []
[2020-05-31T06:26:40.301402+02:00] request.INFO: Matched route "department_show". {"route":"department_show","route_parameters":{"_route":"department_show","_controller":"App\\Controller\\DepartmentController::show","id":"2"},"request_uri":"http://localhost:8000/department/2","method":"GET"} []
[2020-05-31T06:26:40.305631+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:26:40.305741+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:40.305806+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:40.310508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? ["2"] []
[2020-05-31T06:26:40.414548+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:26:40.842950+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"67b63f"},"request_uri":"http://localhost:8000/_wdt/67b63f","method":"GET"} []
[2020-05-31T06:26:43.278377+02:00] request.INFO: Matched route "department_edit". {"route":"department_edit","route_parameters":{"_route":"department_edit","_controller":"App\\Controller\\DepartmentController::edit","id":"2"},"request_uri":"http://localhost:8000/department/2/edit","method":"GET"} []
[2020-05-31T06:26:43.282659+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:26:43.282790+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:43.282876+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:43.288817+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? ["2"] []
[2020-05-31T06:26:43.565649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? [1] []
[2020-05-31T06:26:43.587085+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T06:26:43.602034+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:26:44.007366+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dfb6a4"},"request_uri":"http://localhost:8000/_wdt/dfb6a4","method":"GET"} []
[2020-05-31T06:26:45.959875+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T06:26:45.962763+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:26:45.962872+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:45.962952+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:26:45.967501+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T06:26:45.972918+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:26:46.397557+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3b93a5"},"request_uri":"http://localhost:8000/_wdt/3b93a5","method":"GET"} []
[2020-05-31T06:31:15.382444+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T06:31:15.384993+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:31:15.385062+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:31:15.385119+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:31:15.389114+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T06:31:15.401993+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:31:15.835346+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4c14a6"},"request_uri":"http://localhost:8000/_wdt/4c14a6","method":"GET"} []
[2020-05-31T06:31:19.992185+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:31:19.995019+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:31:19.995095+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:31:19.995136+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:31:20.002635+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:31:20.521008+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9e1d57"},"request_uri":"http://localhost:8000/_wdt/9e1d57","method":"GET"} []
[2020-05-31T06:32:57.800122+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:32:57.807146+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:32:57.807327+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:32:57.807443+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:32:57.820758+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:32:59.982305+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:32:59.985590+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:32:59.985701+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:32:59.985766+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:32:59.991342+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:33:52.203508+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:33:52.213351+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:33:52.213614+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:33:52.213788+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:33:52.237512+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:33:52.633131+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"518013"},"request_uri":"http://localhost:8000/_wdt/518013","method":"GET"} []
[2020-05-31T06:34:36.914692+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:34:36.917602+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:34:36.917681+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:34:36.917721+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:34:36.922621+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:34:37.185129+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"65db13"},"request_uri":"http://localhost:8000/_wdt/65db13","method":"GET"} []
[2020-05-31T06:34:45.214512+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"65db13"},"request_uri":"http://localhost:8000/_wdt/65db13","method":"GET"} []
[2020-05-31T06:35:16.370332+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:35:16.372448+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:35:16.372511+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:35:16.372550+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:35:16.379234+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:35:16.660327+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f55cff"},"request_uri":"http://localhost:8000/_wdt/f55cff","method":"GET"} []
[2020-05-31T06:35:27.396234+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f55cff"},"request_uri":"http://localhost:8000/_wdt/f55cff","method":"GET"} []
[2020-05-31T06:37:40.299643+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:37:40.323838+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:37:40.323977+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:37:40.324067+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:37:40.454785+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:37:40.723041+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"421fc9"},"request_uri":"http://localhost:8000/_wdt/421fc9","method":"GET"} []
[2020-05-31T06:40:03.101642+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"421fc9"},"request_uri":"http://localhost:8000/_wdt/421fc9","method":"GET"} []
[2020-05-31T06:43:21.555161+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:43:21.558807+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:43:21.558907+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:43:21.558970+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:43:21.664960+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:43:21.946028+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b484d8"},"request_uri":"http://localhost:8000/_wdt/b484d8","method":"GET"} []
[2020-05-31T06:44:34.842111+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:44:34.844685+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:44:34.844754+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:44:34.844822+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:44:34.851420+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:44:35.083117+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"adb73f"},"request_uri":"http://localhost:8000/_wdt/adb73f","method":"GET"} []
[2020-05-31T06:44:52.973712+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:44:52.976119+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:44:52.976184+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:44:52.976222+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:44:52.980056+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:44:53.219291+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b02fce"},"request_uri":"http://localhost:8000/_wdt/b02fce","method":"GET"} []
[2020-05-31T06:44:55.776030+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:44:55.778236+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:44:55.778303+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:44:55.778341+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:44:55.782019+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:44:56.034700+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e69adc"},"request_uri":"http://localhost:8000/_wdt/e69adc","method":"GET"} []
[2020-05-31T06:45:04.371326+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e69adc"},"request_uri":"http://localhost:8000/_wdt/e69adc","method":"GET"} []
[2020-05-31T06:45:47.718098+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:45:47.725339+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:45:47.725535+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:45:47.725655+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:45:47.742077+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:45:48.011661+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bd9a46"},"request_uri":"http://localhost:8000/_wdt/bd9a46","method":"GET"} []
[2020-05-31T06:45:55.189964+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bd9a46"},"request_uri":"http://localhost:8000/_wdt/bd9a46","method":"GET"} []
[2020-05-31T06:48:35.845945+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:48:35.848390+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:48:35.848455+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:48:35.848495+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:48:35.856274+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:48:36.220036+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a27aa5"},"request_uri":"http://localhost:8000/_wdt/a27aa5","method":"GET"} []
[2020-05-31T06:49:26.478393+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:49:26.481893+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:49:26.481970+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:49:26.482011+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:49:26.488295+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:49:26.926786+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b4b9ef"},"request_uri":"http://localhost:8000/_wdt/b4b9ef","method":"GET"} []
[2020-05-31T06:49:38.658853+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:49:38.661527+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:49:38.661604+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:49:38.661677+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:49:38.668901+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:49:39.048740+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"23b57c"},"request_uri":"http://localhost:8000/_wdt/23b57c","method":"GET"} []
[2020-05-31T06:50:55.986873+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:50:55.989226+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:50:55.989300+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:50:55.989354+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:50:55.996765+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:50:56.432609+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"664b46"},"request_uri":"http://localhost:8000/_wdt/664b46","method":"GET"} []
[2020-05-31T06:51:20.226069+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:51:20.228247+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:51:20.228310+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:51:20.228349+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:51:20.234651+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:51:20.602932+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cc838d"},"request_uri":"http://localhost:8000/_wdt/cc838d","method":"GET"} []
[2020-05-31T06:52:12.366515+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:52:12.369235+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:52:12.369308+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:52:12.369372+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:52:12.377280+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:52:12.653620+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7e7e0f"},"request_uri":"http://localhost:8000/_wdt/7e7e0f","method":"GET"} []
[2020-05-31T06:52:52.419034+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:52:52.426731+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:52:52.426871+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:52:52.426956+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:52:52.440008+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:52:52.686142+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3537c7"},"request_uri":"http://localhost:8000/_wdt/3537c7","method":"GET"} []
[2020-05-31T06:53:23.575869+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:53:23.581499+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:53:23.581680+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:53:23.581797+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:53:23.596592+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:53:23.908430+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5c19c1"},"request_uri":"http://localhost:8000/_wdt/5c19c1","method":"GET"} []
[2020-05-31T06:57:04.288973+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:57:04.291796+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:57:04.291895+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:57:04.291958+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:57:04.300110+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:57:04.647678+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9a0b51"},"request_uri":"http://localhost:8000/_wdt/9a0b51","method":"GET"} []
[2020-05-31T06:57:39.023204+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:57:39.025996+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:57:39.026068+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:57:39.026108+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:57:39.033091+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:57:39.303545+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9ecfd6"},"request_uri":"http://localhost:8000/_wdt/9ecfd6","method":"GET"} []
[2020-05-31T06:58:31.409227+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:58:31.411938+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:58:31.412041+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:58:31.412086+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:58:31.417214+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:58:31.685009+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"580467"},"request_uri":"http://localhost:8000/_wdt/580467","method":"GET"} []
[2020-05-31T06:59:18.111218+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T06:59:18.114684+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T06:59:18.114792+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:59:18.114851+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T06:59:18.118339+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T06:59:18.377261+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7409ca"},"request_uri":"http://localhost:8000/_wdt/7409ca","method":"GET"} []
[2020-05-31T07:01:25.932450+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:01:25.939931+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:01:25.940122+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:01:25.940242+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:01:25.960226+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:01:26.277489+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5d1fa"},"request_uri":"http://localhost:8000/_wdt/d5d1fa","method":"GET"} []
[2020-05-31T07:01:31.667331+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5d1fa"},"request_uri":"http://localhost:8000/_wdt/d5d1fa","method":"GET"} []
[2020-05-31T07:01:42.493899+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5d1fa"},"request_uri":"http://localhost:8000/_wdt/d5d1fa","method":"GET"} []
[2020-05-31T07:02:33.365031+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:02:33.376727+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:02:33.377099+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:02:33.377417+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:02:33.412511+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:02:33.671987+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"53b9e7"},"request_uri":"http://localhost:8000/_wdt/53b9e7","method":"GET"} []
[2020-05-31T07:02:40.593728+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"53b9e7"},"request_uri":"http://localhost:8000/_wdt/53b9e7","method":"GET"} []
[2020-05-31T07:04:13.454655+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:04:13.457381+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:04:13.457468+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:04:13.457518+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:04:13.464248+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:04:13.711606+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d2a14f"},"request_uri":"http://localhost:8000/_wdt/d2a14f","method":"GET"} []
[2020-05-31T07:09:09.225190+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:09:09.227521+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:09:09.227585+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:09:09.227624+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:09:09.234608+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:09:09.509405+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"17ea94"},"request_uri":"http://localhost:8000/_wdt/17ea94","method":"GET"} []
[2020-05-31T07:09:18.809077+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"17ea94"},"request_uri":"http://localhost:8000/_wdt/17ea94","method":"GET"} []
[2020-05-31T07:09:29.821741+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:09:29.824579+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:09:29.824667+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:09:29.824718+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:09:29.829273+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:09:30.092809+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9d9ffc"},"request_uri":"http://localhost:8000/_wdt/9d9ffc","method":"GET"} []
[2020-05-31T07:09:35.961392+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:09:35.963493+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:09:35.963588+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:09:35.963645+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:09:35.967200+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:09:36.213305+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ac109f"},"request_uri":"http://localhost:8000/_wdt/ac109f","method":"GET"} []
[2020-05-31T07:10:10.303430+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:10:10.305619+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:10:10.305691+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:10:10.305733+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:10:10.313746+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:10:10.556298+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e8775c"},"request_uri":"http://localhost:8000/_wdt/e8775c","method":"GET"} []
[2020-05-31T07:10:21.687490+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:10:21.691804+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:10:21.691940+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:10:21.692011+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:10:21.697026+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:10:21.952628+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8758fb"},"request_uri":"http://localhost:8000/_wdt/8758fb","method":"GET"} []
[2020-05-31T07:13:18.814806+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:13:18.820997+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:13:18.821143+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:13:18.821260+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:13:18.833414+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:13:19.086967+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"42c470"},"request_uri":"http://localhost:8000/_wdt/42c470","method":"GET"} []
[2020-05-31T07:13:21.270343+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /path('college')" (from "http://localhost:8000/home")" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /path('college')\" (from \"http://localhost:8000/home\") at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/path('college')/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-05-31T07:13:21.627200+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e3e806"},"request_uri":"http://localhost:8000/_wdt/e3e806","method":"GET"} []
[2020-05-31T07:14:58.457487+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /path('college')" (from "http://localhost:8000/home")" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /path('college')\" (from \"http://localhost:8000/home\") at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/path('college')/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-05-31T07:14:58.614680+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f58327"},"request_uri":"http://localhost:8000/_wdt/f58327","method":"GET"} []
[2020-05-31T07:15:02.305680+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-05-31T07:15:02.380423+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1b3e85"},"request_uri":"http://localhost:8000/_wdt/1b3e85","method":"GET"} []
[2020-05-31T07:15:05.612461+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:15:05.614441+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:15:05.614509+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:15:05.614561+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:15:05.623467+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "college" as such route does not exist.")." at /var/www/inventory/templates/home/index.html.twig line 166 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"college\" as such route does not exist.\"). at /var/www/inventory/templates/home/index.html.twig:166)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"college\" as such route does not exist. at /var/www/inventory/vendor/symfony/routing/Generator/CompiledUrlGenerator.php:50)"} []
[2020-05-31T07:15:05.682782+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:15:05.803697+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cfa882"},"request_uri":"http://localhost:8000/_wdt/cfa882","method":"GET"} []
[2020-05-31T07:15:32.296584+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:15:32.299081+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:15:32.299188+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:15:32.299230+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:15:32.306787+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "college" as such route does not exist.")." at /var/www/inventory/templates/home/index.html.twig line 166 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"college\" as such route does not exist.\"). at /var/www/inventory/templates/home/index.html.twig:166)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"college\" as such route does not exist. at /var/www/inventory/vendor/symfony/routing/Generator/CompiledUrlGenerator.php:50)"} []
[2020-05-31T07:15:32.366042+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:15:32.469799+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b81403"},"request_uri":"http://localhost:8000/_wdt/b81403","method":"GET"} []
[2020-05-31T07:15:34.914337+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:15:34.916885+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:15:34.916989+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:15:34.917052+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:15:34.922286+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "college" as such route does not exist.")." at /var/www/inventory/templates/home/index.html.twig line 166 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"college\" as such route does not exist.\"). at /var/www/inventory/templates/home/index.html.twig:166)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"college\" as such route does not exist. at /var/www/inventory/vendor/symfony/routing/Generator/CompiledUrlGenerator.php:50)"} []
[2020-05-31T07:15:34.981237+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:15:35.084199+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a71672"},"request_uri":"http://localhost:8000/_wdt/a71672","method":"GET"} []
[2020-05-31T07:15:36.356220+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:15:36.358377+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:15:36.358463+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:15:36.358520+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:15:36.362666+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "college" as such route does not exist.")." at /var/www/inventory/templates/home/index.html.twig line 166 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"college\" as such route does not exist.\"). at /var/www/inventory/templates/home/index.html.twig:166)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"college\" as such route does not exist. at /var/www/inventory/vendor/symfony/routing/Generator/CompiledUrlGenerator.php:50)"} []
[2020-05-31T07:15:36.419946+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:15:36.536508+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ccf562"},"request_uri":"http://localhost:8000/_wdt/ccf562","method":"GET"} []
[2020-05-31T07:16:38.620489+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:16:38.624469+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:16:38.624608+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:16:38.624703+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:16:38.636277+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:16:38.944298+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca48a6"},"request_uri":"http://localhost:8000/_wdt/ca48a6","method":"GET"} []
[2020-05-31T07:16:41.963279+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T07:16:41.967286+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:16:41.967401+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:16:41.967505+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:16:41.988370+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T07:16:42.002398+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:16:42.255204+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6dadf4"},"request_uri":"http://localhost:8000/_wdt/6dadf4","method":"GET"} []
[2020-05-31T07:16:47.701137+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T07:16:47.703881+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:16:47.704099+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:16:47.704188+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:16:47.707450+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T07:16:47.711343+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:16:47.944810+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d0f17e"},"request_uri":"http://localhost:8000/_wdt/d0f17e","method":"GET"} []
[2020-05-31T07:16:49.506048+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T07:16:49.507973+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:16:49.508051+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:16:49.508102+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:16:49.523489+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:16:49.753209+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"373145"},"request_uri":"http://localhost:8000/_wdt/373145","method":"GET"} []
[2020-05-31T07:16:51.076709+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T07:16:51.078986+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:16:51.079061+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:16:51.079105+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:16:51.082478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T07:16:51.086311+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:16:51.333396+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"505103"},"request_uri":"http://localhost:8000/_wdt/505103","method":"GET"} []
[2020-05-31T07:16:53.445658+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"GET"} []
[2020-05-31T07:16:53.447211+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:16:53.447275+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:16:53.447314+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:16:53.450222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T07:16:53.460843+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:16:53.697818+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1d105a"},"request_uri":"http://localhost:8000/_wdt/1d105a","method":"GET"} []
[2020-05-31T07:16:56.291736+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8cc935"},"request_uri":"http://localhost:8000/_wdt/8cc935","method":"GET"} []
[2020-05-31T07:20:19.269352+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:20:19.272263+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:19.272373+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:19.272431+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:19.283718+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:19.706690+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7a2aac"},"request_uri":"http://localhost:8000/_wdt/7a2aac","method":"GET"} []
[2020-05-31T07:20:23.606825+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T07:20:23.609957+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:23.610057+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:23.610118+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:23.616007+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T07:20:23.623622+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:24.146478+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"66f084"},"request_uri":"http://localhost:8000/_wdt/66f084","method":"GET"} []
[2020-05-31T07:20:24.339107+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T07:20:24.342189+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:24.343061+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:24.343240+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:24.347958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T07:20:24.354255+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:24.677695+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"19efc3"},"request_uri":"http://localhost:8000/_wdt/19efc3","method":"GET"} []
[2020-05-31T07:20:25.070835+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-31T07:20:25.074290+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:25.075596+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:25.076929+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:25.131535+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-31T07:20:25.207452+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:25.692275+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T07:20:25.694642+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:25.694747+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:25.694820+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:25.700518+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T07:20:25.723875+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:26.189765+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ea0ab0"},"request_uri":"http://localhost:8000/_wdt/ea0ab0","method":"GET"} []
[2020-05-31T07:20:26.221000+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cf7cca"},"request_uri":"http://localhost:8000/_wdt/cf7cca","method":"GET"} []
[2020-05-31T07:20:26.352515+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-31T07:20:26.360478+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:26.361779+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:26.362759+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:26.369154+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-31T07:20:26.397694+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:26.853460+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"095705"},"request_uri":"http://localhost:8000/_wdt/095705","method":"GET"} []
[2020-05-31T07:20:27.181379+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-31T07:20:27.187699+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:27.188948+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:27.190380+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:27.197457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-31T07:20:27.214864+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:27.759244+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T07:20:27.761777+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:27.761890+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:27.761951+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:27.772006+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 [] []
[2020-05-31T07:20:27.831798+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:27.880843+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b828eb"},"request_uri":"http://localhost:8000/_wdt/b828eb","method":"GET"} []
[2020-05-31T07:20:28.452002+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-05-31T07:20:28.455195+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:28.455307+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:28.455367+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:28.571024+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gross_amount AS gross_amount_2, t0.customer_id AS customer_id_3, t0.user_id AS user_id_4 FROM `order` t0 [] []
[2020-05-31T07:20:28.622101+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:28.822289+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"530fec"},"request_uri":"http://localhost:8000/_wdt/530fec","method":"GET"} []
[2020-05-31T07:20:29.051508+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d2cf99"},"request_uri":"http://localhost:8000/_wdt/d2cf99","method":"GET"} []
[2020-05-31T07:20:29.348462+02:00] request.INFO: Matched route "transfer_index". {"route":"transfer_index","route_parameters":{"_route":"transfer_index","_controller":"App\\Controller\\TransferController::index"},"request_uri":"http://localhost:8000/transfer/","method":"GET"} []
[2020-05-31T07:20:29.350939+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:29.351021+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:29.351076+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:29.357146+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.status AS status_2, t0.to_id_id AS to_id_id_3 FROM transfer t0 [] []
[2020-05-31T07:20:29.678963+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:29.956343+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"856578"},"request_uri":"http://localhost:8000/_wdt/856578","method":"GET"} []
[2020-05-31T07:20:31.479792+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-05-31T07:20:31.482283+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:31.482389+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:31.482452+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:31.488976+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gross_amount AS gross_amount_2, t0.customer_id AS customer_id_3, t0.user_id AS user_id_4 FROM `order` t0 [] []
[2020-05-31T07:20:31.493260+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:31.897285+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f7891b"},"request_uri":"http://localhost:8000/_wdt/f7891b","method":"GET"} []
[2020-05-31T07:20:32.073467+02:00] request.INFO: Matched route "transfer_index". {"route":"transfer_index","route_parameters":{"_route":"transfer_index","_controller":"App\\Controller\\TransferController::index"},"request_uri":"http://localhost:8000/transfer/","method":"GET"} []
[2020-05-31T07:20:32.076240+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:32.076323+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:32.076377+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:32.080789+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.status AS status_2, t0.to_id_id AS to_id_id_3 FROM transfer t0 [] []
[2020-05-31T07:20:32.086417+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:32.480205+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"13a842"},"request_uri":"http://localhost:8000/_wdt/13a842","method":"GET"} []
[2020-05-31T07:20:32.761494+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:20:32.763045+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:32.763108+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:32.763147+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:32.768392+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:33.180918+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"25a317"},"request_uri":"http://localhost:8000/_wdt/25a317","method":"GET"} []
[2020-05-31T07:20:33.497479+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:20:33.500780+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:33.501849+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:33.502948+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:33.511953+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:33.929845+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bb51ee"},"request_uri":"http://localhost:8000/_wdt/bb51ee","method":"GET"} []
[2020-05-31T07:20:49.023818+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:20:49.026595+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:49.026679+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:49.026739+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:49.030677+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:49.273441+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6bb532"},"request_uri":"http://localhost:8000/_wdt/6bb532","method":"GET"} []
[2020-05-31T07:20:54.781602+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:20:54.783634+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:20:54.783698+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:54.783735+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:20:54.789580+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:20:55.248273+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"de9519"},"request_uri":"http://localhost:8000/_wdt/de9519","method":"GET"} []
[2020-05-31T07:21:46.296187+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:21:46.302103+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:21:46.302376+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:21:46.302565+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:21:46.319746+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:21:46.576643+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"426977"},"request_uri":"http://localhost:8000/_wdt/426977","method":"GET"} []
[2020-05-31T07:21:48.971012+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T07:21:48.973784+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:21:48.973885+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:21:48.973948+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:21:48.979979+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 [] []
[2020-05-31T07:21:49.083486+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:21:49.360794+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5b8031"},"request_uri":"http://localhost:8000/_wdt/5b8031","method":"GET"} []
[2020-05-31T07:24:50.104073+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-31T07:24:50.124117+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.129999+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.170687+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.173023+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-05-31T07:24:50.174955+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.178888+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.207715+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.209176+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-05-31T07:24:50.210417+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.212039+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.213152+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.214117+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-05-31T07:24:50.215039+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.216722+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.217944+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.218871+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-05-31T07:24:50.219751+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.221188+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.222233+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.222998+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-05-31T07:24:50.223890+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.225245+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.226530+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.227426+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-05-31T07:24:50.228207+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.229692+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.230960+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.231639+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-05-31T07:24:50.232196+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order_item' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.233234+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order_item' */ WHERE k.table_name = 'order_item' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.264630+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order_item' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.265556+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order_item' [] []
[2020-05-31T07:24:50.266209+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.267523+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.268626+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.269652+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-05-31T07:24:50.270238+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.271204+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.271998+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.272547+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-05-31T07:24:50.273077+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.274039+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.274755+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.275279+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-05-31T07:24:50.275807+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.276695+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.277535+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.278149+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-05-31T07:24:50.278653+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.279603+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.280379+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.280993+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-31T07:24:50.290303+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-31T07:24:50.292020+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.293260+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.294051+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.294660+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-05-31T07:24:50.295367+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.297143+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.298511+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.299311+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-05-31T07:24:50.301120+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.302098+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.302746+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.303275+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-05-31T07:24:50.303807+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.304757+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.305621+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.306338+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-05-31T07:24:50.307510+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.308502+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.309229+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.309791+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-05-31T07:24:50.310338+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.311308+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.312214+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.312946+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-05-31T07:24:50.313660+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.314876+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.317400+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.318478+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-05-31T07:24:50.319626+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order_item' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.321165+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order_item' */ WHERE k.table_name = 'order_item' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.322232+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order_item' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.323100+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order_item' [] []
[2020-05-31T07:24:50.323745+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.326696+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.328018+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.328986+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-05-31T07:24:50.329568+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.330578+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.331236+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.331858+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-05-31T07:24:50.332400+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.333394+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.334056+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.334648+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-05-31T07:24:50.335191+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.336148+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.337016+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.337636+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-05-31T07:24:50.338169+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:24:50.339206+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:24:50.339892+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:24:50.340502+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-31T07:24:50.343382+02:00] doctrine.DEBUG: ALTER TABLE user ADD department_id INT DEFAULT NULL, ADD first_name VARCHAR(255) NOT NULL, ADD middle_name VARCHAR(255) DEFAULT NULL, ADD last_name VARCHAR(255) DEFAULT NULL [] []
[2020-05-31T07:24:51.312152+02:00] doctrine.DEBUG: ALTER TABLE user ADD CONSTRAINT FK_8D93D649AE80F5DF FOREIGN KEY (department_id) REFERENCES department (id) [] []
[2020-05-31T07:24:52.136841+02:00] doctrine.DEBUG: CREATE INDEX IDX_8D93D649AE80F5DF ON user (department_id) [] []
[2020-05-31T07:26:18.805462+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-31T07:26:18.807262+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.808471+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.809028+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.809370+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-05-31T07:26:18.809654+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.810192+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.810691+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.811065+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-05-31T07:26:18.811333+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.811850+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.812285+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.812540+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-05-31T07:26:18.812797+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.813263+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.813664+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.813923+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-05-31T07:26:18.814166+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.814633+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.815062+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.815336+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-05-31T07:26:18.815573+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.816063+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.816549+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.816907+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-05-31T07:26:18.817186+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.817763+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.818250+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.818595+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-05-31T07:26:18.818867+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order_item' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.819436+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order_item' */ WHERE k.table_name = 'order_item' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.820120+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order_item' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.820623+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order_item' [] []
[2020-05-31T07:26:18.820937+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.821674+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.822250+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.822671+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-05-31T07:26:18.822922+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.823426+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.823885+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.824161+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-05-31T07:26:18.824416+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.824896+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.825297+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.825556+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-05-31T07:26:18.825810+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.826259+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.826749+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.827065+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-05-31T07:26:18.827333+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.827950+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.828611+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.829010+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-31T07:26:18.832203+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-31T07:26:18.832987+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.833473+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.833864+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.834157+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-05-31T07:26:18.834415+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.834880+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.835383+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.835679+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-05-31T07:26:18.835986+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.836478+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.836844+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.837109+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-05-31T07:26:18.837393+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.837849+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.838204+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.838495+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-05-31T07:26:18.838790+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.839251+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.839626+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.839923+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-05-31T07:26:18.840174+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.840630+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.841070+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.841346+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-05-31T07:26:18.841623+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.842123+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.842827+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.843350+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-05-31T07:26:18.843668+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order_item' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.844267+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order_item' */ WHERE k.table_name = 'order_item' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.844826+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order_item' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.845906+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order_item' [] []
[2020-05-31T07:26:18.847240+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.847965+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.848467+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.848848+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-05-31T07:26:18.849112+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.849573+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.849922+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.850178+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-05-31T07:26:18.850417+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.850921+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.851281+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.851540+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-05-31T07:26:18.851800+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.852266+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.852658+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.852951+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-05-31T07:26:18.853197+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:26:18.853712+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:26:18.854115+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:26:18.854538+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-31T07:26:18.855818+02:00] doctrine.DEBUG: ALTER TABLE user ADD user_type SMALLINT DEFAULT NULL [] []
[2020-05-31T07:34:53.255440+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-31T07:34:53.257251+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.258396+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.258868+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.259183+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-05-31T07:34:53.259460+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.259978+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.260460+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.260805+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-05-31T07:34:53.261064+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.261574+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.261963+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.262256+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-05-31T07:34:53.262525+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.262992+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.263381+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.263659+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-05-31T07:34:53.263927+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.264412+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.264792+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.265046+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-05-31T07:34:53.265290+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.265813+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.266342+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.266700+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-05-31T07:34:53.266962+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.267532+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.268066+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.268453+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-05-31T07:34:53.268716+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order_item' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.269235+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order_item' */ WHERE k.table_name = 'order_item' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.269697+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order_item' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.270064+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order_item' [] []
[2020-05-31T07:34:53.270362+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.270953+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.271508+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.271960+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-05-31T07:34:53.272233+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.272737+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.273097+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.273372+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-05-31T07:34:53.273613+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.274087+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.274464+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.274736+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-05-31T07:34:53.274984+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.275422+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.275896+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.276258+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-05-31T07:34:53.276513+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.277092+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.277564+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.277933+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-31T07:34:53.281208+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-31T07:34:53.281852+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.282412+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.282782+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.283061+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-05-31T07:34:53.283307+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.283750+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.284199+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.284567+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-05-31T07:34:53.284820+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.285318+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.285685+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.285968+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-05-31T07:34:53.286212+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.286668+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.287005+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.287283+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-05-31T07:34:53.287523+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.287983+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.288325+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.288605+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-05-31T07:34:53.288847+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.289297+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.289713+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.290063+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-05-31T07:34:53.290316+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.290894+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.291484+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.292329+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-05-31T07:34:53.292656+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order_item' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.293268+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order_item' */ WHERE k.table_name = 'order_item' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.293784+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order_item' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.294275+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order_item' [] []
[2020-05-31T07:34:53.294679+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.297135+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.297796+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.298277+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-05-31T07:34:53.298575+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.299100+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.299481+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.299824+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-05-31T07:34:53.300113+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.300667+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.301070+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.301375+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-05-31T07:34:53.301644+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.302130+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.302596+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.302927+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-05-31T07:34:53.303195+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:34:53.303795+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:34:53.304293+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:34:53.304691+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-31T07:34:53.305878+02:00] doctrine.DEBUG: CREATE TABLE user_type (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-05-31T07:34:53.577554+02:00] doctrine.DEBUG: ALTER TABLE user ADD user_type_id INT DEFAULT NULL, DROP user_type [] []
[2020-05-31T07:34:54.335962+02:00] doctrine.DEBUG: ALTER TABLE user ADD CONSTRAINT FK_8D93D6499D419299 FOREIGN KEY (user_type_id) REFERENCES user_type (id) [] []
[2020-05-31T07:34:55.405016+02:00] doctrine.DEBUG: CREATE INDEX IDX_8D93D6499D419299 ON user (user_type_id) [] []
[2020-05-31T07:35:10.852629+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T07:35:10.855039+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:35:10.855110+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:35:10.855164+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:35:10.867139+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T07:35:10.876560+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:35:11.133788+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"54427b"},"request_uri":"http://localhost:8000/_wdt/54427b","method":"GET"} []
[2020-05-31T07:35:13.370146+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T07:35:13.372516+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:35:13.372586+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:35:13.372626+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:35:13.377187+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T07:35:13.382428+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:35:13.621827+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"13f2de"},"request_uri":"http://localhost:8000/_wdt/13f2de","method":"GET"} []
[2020-05-31T07:35:16.962965+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:35:16.965561+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:35:16.965636+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:35:16.965677+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:35:16.971098+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:35:17.215938+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3ec9c4"},"request_uri":"http://localhost:8000/_wdt/3ec9c4","method":"GET"} []
[2020-05-31T07:35:19.222725+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T07:35:19.228310+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:35:19.228446+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:35:19.228528+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:35:19.236807+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T07:35:19.243615+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:35:19.477174+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"586e0e"},"request_uri":"http://localhost:8000/_wdt/586e0e","method":"GET"} []
[2020-05-31T07:37:26.587016+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T07:37:26.589825+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:37:26.589903+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:37:26.589954+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:37:26.594574+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T07:37:26.603421+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:37:26.841691+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9e3021"},"request_uri":"http://localhost:8000/_wdt/9e3021","method":"GET"} []
[2020-05-31T07:37:48.795363+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T07:37:48.809437+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:37:48.809784+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:37:48.810001+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:37:48.823030+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T07:37:48.838009+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:37:49.074079+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a2ac56"},"request_uri":"http://localhost:8000/_wdt/a2ac56","method":"GET"} []
[2020-05-31T07:38:04.610198+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T07:38:04.613751+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:38:04.613849+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:38:04.613912+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:38:04.620980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T07:38:04.633600+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:38:04.877911+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6e574f"},"request_uri":"http://localhost:8000/_wdt/6e574f","method":"GET"} []
[2020-05-31T07:38:09.820140+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"1"},"request_uri":"http://localhost:8000/user/1/edit","method":"GET"} []
[2020-05-31T07:38:09.823091+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:38:09.823177+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:38:09.823235+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:38:09.827538+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["1"] []
[2020-05-31T07:38:09.878240+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T07:38:09.882307+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\Department could not be converted to string" at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php line 57 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\Department could not be converted to string at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php:57)"} []
[2020-05-31T07:38:09.932089+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:38:10.054013+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4a9aaa"},"request_uri":"http://localhost:8000/_wdt/4a9aaa","method":"GET"} []
[2020-05-31T07:39:52.014379+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-31T07:39:52.017222+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.018960+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.021210+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.022190+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-05-31T07:39:52.023022+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.024007+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.024558+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.024918+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-05-31T07:39:52.025201+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.025734+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.026142+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.026431+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-05-31T07:39:52.026696+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.027180+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.027583+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.027889+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-05-31T07:39:52.028155+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.028636+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.029049+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.029322+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-05-31T07:39:52.029582+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.030069+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.030498+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.030815+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-05-31T07:39:52.031089+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.031711+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.032335+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.033600+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-05-31T07:39:52.034185+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order_item' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.035020+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order_item' */ WHERE k.table_name = 'order_item' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.035690+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order_item' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.036830+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order_item' [] []
[2020-05-31T07:39:52.038576+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.039593+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.040396+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.041487+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-05-31T07:39:52.042025+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.042606+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.043025+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.043327+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-05-31T07:39:52.043607+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.044182+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.044599+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.044892+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-05-31T07:39:52.045171+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.045687+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.046284+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.046625+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-05-31T07:39:52.046891+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.047516+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.047992+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.048368+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-31T07:39:52.048682+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T07:39:52.050013+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T07:39:52.050882+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T07:39:52.051899+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-05-31T07:39:55.032428+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"1"},"request_uri":"http://localhost:8000/user/1/edit","method":"GET"} []
[2020-05-31T07:39:55.035398+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:39:55.035478+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:39:55.035522+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:39:55.049944+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["1"] []
[2020-05-31T07:39:55.072465+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T07:39:55.076280+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\Department could not be converted to string" at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php line 57 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\Department could not be converted to string at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php:57)"} []
[2020-05-31T07:39:55.110600+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:39:55.209567+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"91acd3"},"request_uri":"http://localhost:8000/_wdt/91acd3","method":"GET"} []
[2020-05-31T07:40:45.698179+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"1"},"request_uri":"http://localhost:8000/user/1/edit","method":"GET"} []
[2020-05-31T07:40:45.701133+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:40:45.701214+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:40:45.701267+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:40:45.713314+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["1"] []
[2020-05-31T07:40:45.727207+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T07:40:45.729576+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-05-31T07:40:45.756181+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:40:46.022114+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8ec5c3"},"request_uri":"http://localhost:8000/_wdt/8ec5c3","method":"GET"} []
[2020-05-31T07:41:08.263559+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"1"},"request_uri":"http://localhost:8000/user/1/edit","method":"POST"} []
[2020-05-31T07:41:08.266126+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:41:08.266189+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:41:08.266227+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:41:08.266362+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:41:08.270572+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["1"] []
[2020-05-31T07:41:08.282328+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ WHERE d0_.id IN (?) [["1"]] []
[2020-05-31T07:41:08.616010+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T07:41:08.616306+02:00] doctrine.DEBUG: UPDATE user SET first_name = ?, middle_name = ?, last_name = ?, department_id = ? WHERE id = ? ["Amsalu","Tadesse","Desta",1,1] []
[2020-05-31T07:41:08.634500+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T07:41:08.784946+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T07:41:08.786931+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:41:08.787008+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:41:08.787051+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:41:08.791255+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T07:41:08.795454+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T07:41:08.802854+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:41:09.064476+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dd9284"},"request_uri":"http://localhost:8000/_wdt/dd9284","method":"GET"} []
[2020-05-31T07:41:19.993033+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /usertype"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /usertype\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/usertype/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-05-31T07:41:20.111641+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7d6764"},"request_uri":"http://localhost:8000/_wdt/7d6764","method":"GET"} []
[2020-05-31T07:42:09.064363+02:00] request.INFO: Matched route "user_type_index". {"route":"user_type_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/usertype/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"user_type_index"},"request_uri":"http://localhost:8000/usertype","method":"GET"} []
[2020-05-31T07:42:09.068279+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:42:09.068382+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:09.068443+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:09.074261+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:42:09.118710+02:00] request.INFO: Matched route "user_type_index". {"route":"user_type_index","route_parameters":{"_route":"user_type_index","_controller":"App\\Controller\\UserTypeController::index"},"request_uri":"http://localhost:8000/usertype/","method":"GET"} []
[2020-05-31T07:42:09.120367+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:42:09.120455+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:09.120511+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:09.127286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 [] []
[2020-05-31T07:42:09.139298+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:42:09.783551+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3c2c01"},"request_uri":"http://localhost:8000/_wdt/3c2c01","method":"GET"} []
[2020-05-31T07:42:11.014769+02:00] request.INFO: Matched route "user_type_new". {"route":"user_type_new","route_parameters":{"_route":"user_type_new","_controller":"App\\Controller\\UserTypeController::new"},"request_uri":"http://localhost:8000/usertype/new","method":"GET"} []
[2020-05-31T07:42:11.016349+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:42:11.016413+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:11.016462+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:11.038702+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:42:11.316653+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1e8a7b"},"request_uri":"http://localhost:8000/_wdt/1e8a7b","method":"GET"} []
[2020-05-31T07:42:21.295831+02:00] request.INFO: Matched route "user_type_new". {"route":"user_type_new","route_parameters":{"_route":"user_type_new","_controller":"App\\Controller\\UserTypeController::new"},"request_uri":"http://localhost:8000/usertype/new","method":"POST"} []
[2020-05-31T07:42:21.298193+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:42:21.298262+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:21.298305+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:21.298474+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:42:21.320400+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T07:42:21.321712+02:00] doctrine.DEBUG: INSERT INTO user_type (name, description) VALUES (?, ?) {"1":"Administration","2":null} []
[2020-05-31T07:42:21.322150+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T07:42:21.509890+02:00] request.INFO: Matched route "user_type_index". {"route":"user_type_index","route_parameters":{"_route":"user_type_index","_controller":"App\\Controller\\UserTypeController::index"},"request_uri":"http://localhost:8000/usertype/","method":"GET"} []
[2020-05-31T07:42:21.513020+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:42:21.513145+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:21.513229+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:21.518518+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 [] []
[2020-05-31T07:42:21.525816+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:42:21.778604+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"592e2b"},"request_uri":"http://localhost:8000/_wdt/592e2b","method":"GET"} []
[2020-05-31T07:42:23.188169+02:00] request.INFO: Matched route "user_type_new". {"route":"user_type_new","route_parameters":{"_route":"user_type_new","_controller":"App\\Controller\\UserTypeController::new"},"request_uri":"http://localhost:8000/usertype/new","method":"GET"} []
[2020-05-31T07:42:23.191490+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:42:23.191663+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:23.191807+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:23.209286+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:42:23.445901+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c91af8"},"request_uri":"http://localhost:8000/_wdt/c91af8","method":"GET"} []
[2020-05-31T07:42:36.185749+02:00] request.INFO: Matched route "user_type_new". {"route":"user_type_new","route_parameters":{"_route":"user_type_new","_controller":"App\\Controller\\UserTypeController::new"},"request_uri":"http://localhost:8000/usertype/new","method":"POST"} []
[2020-05-31T07:42:36.188550+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:42:36.188636+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:36.188687+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:36.188866+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:42:36.206908+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T07:42:36.207422+02:00] doctrine.DEBUG: INSERT INTO user_type (name, description) VALUES (?, ?) {"1":"Academic","2":null} []
[2020-05-31T07:42:36.207867+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T07:42:36.336831+02:00] request.INFO: Matched route "user_type_index". {"route":"user_type_index","route_parameters":{"_route":"user_type_index","_controller":"App\\Controller\\UserTypeController::index"},"request_uri":"http://localhost:8000/usertype/","method":"GET"} []
[2020-05-31T07:42:36.338677+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:42:36.338749+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:36.338788+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:36.341672+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 [] []
[2020-05-31T07:42:36.345584+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:42:36.580494+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2a03cb"},"request_uri":"http://localhost:8000/_wdt/2a03cb","method":"GET"} []
[2020-05-31T07:42:42.471692+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"2"},"request_uri":"http://localhost:8000/user/2/edit","method":"GET"} []
[2020-05-31T07:42:42.473905+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:42:42.474000+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:42.474044+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:42:42.478591+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["2"] []
[2020-05-31T07:42:42.488402+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T07:42:42.490161+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-05-31T07:42:42.492476+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\UserType could not be converted to string" at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php line 57 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\UserType could not be converted to string at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php:57)"} []
[2020-05-31T07:42:42.522908+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:42:42.625802+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"83a0c4"},"request_uri":"http://localhost:8000/_wdt/83a0c4","method":"GET"} []
[2020-05-31T07:43:02.381101+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"2"},"request_uri":"http://localhost:8000/user/2/edit","method":"GET"} []
[2020-05-31T07:43:02.386113+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:43:02.386279+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:02.386413+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:02.402314+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["2"] []
[2020-05-31T07:43:02.413319+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T07:43:02.415115+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-05-31T07:43:02.424396+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:43:02.669093+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8db7cb"},"request_uri":"http://localhost:8000/_wdt/8db7cb","method":"GET"} []
[2020-05-31T07:43:20.156411+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"2"},"request_uri":"http://localhost:8000/user/2/edit","method":"POST"} []
[2020-05-31T07:43:20.160013+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:43:20.160093+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:20.160151+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:20.160374+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:43:20.164967+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["2"] []
[2020-05-31T07:43:20.173424+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ WHERE d0_.id IN (?) [["2"]] []
[2020-05-31T07:43:20.175518+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ WHERE u0_.id IN (?) [["2"]] []
[2020-05-31T07:43:20.184537+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T07:43:20.184811+02:00] doctrine.DEBUG: UPDATE user SET first_name = ?, middle_name = ?, last_name = ?, department_id = ?, user_type_id = ? WHERE id = ? ["Solomon","Samson","Bible",2,2,2] []
[2020-05-31T07:43:20.185261+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T07:43:20.325830+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T07:43:20.327583+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:43:20.327652+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:20.327690+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:20.332312+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T07:43:20.336237+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T07:43:20.338143+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T07:43:20.338679+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T07:43:20.340890+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:43:20.577429+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d99ab3"},"request_uri":"http://localhost:8000/_wdt/d99ab3","method":"GET"} []
[2020-05-31T07:43:23.047728+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"1"},"request_uri":"http://localhost:8000/user/1/edit","method":"GET"} []
[2020-05-31T07:43:23.050569+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:43:23.050640+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:23.050695+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:23.054664+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["1"] []
[2020-05-31T07:43:23.064657+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T07:43:23.066879+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T07:43:23.067710+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-05-31T07:43:23.074290+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:43:23.346155+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1b051a"},"request_uri":"http://localhost:8000/_wdt/1b051a","method":"GET"} []
[2020-05-31T07:43:26.472213+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"1"},"request_uri":"http://localhost:8000/user/1/edit","method":"POST"} []
[2020-05-31T07:43:26.477430+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:43:26.477588+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:26.477706+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:26.478112+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:43:26.486572+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["1"] []
[2020-05-31T07:43:26.498346+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T07:43:26.501386+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ WHERE d0_.id IN (?) [["1"]] []
[2020-05-31T07:43:26.502012+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ WHERE u0_.id IN (?) [["1"]] []
[2020-05-31T07:43:26.510697+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T07:43:26.510995+02:00] doctrine.DEBUG: UPDATE user SET user_type_id = ? WHERE id = ? [1,1] []
[2020-05-31T07:43:26.511390+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T07:43:26.687574+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T07:43:26.689914+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:43:26.690003+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:26.690077+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:26.694557+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T07:43:26.698844+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T07:43:26.699826+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T07:43:26.701905+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T07:43:26.702338+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T07:43:26.704928+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:43:26.970839+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"78fce5"},"request_uri":"http://localhost:8000/_wdt/78fce5","method":"GET"} []
[2020-05-31T07:43:38.930874+02:00] request.INFO: Matched route "user_show". {"route":"user_show","route_parameters":{"_route":"user_show","_controller":"App\\Controller\\UserController::show","id":"2"},"request_uri":"http://localhost:8000/user/2","method":"GET"} []
[2020-05-31T07:43:38.933731+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:43:38.933802+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:38.933840+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:43:38.937736+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["2"] []
[2020-05-31T07:43:38.947514+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "first_name" nor one of the methods "first_name()", "getfirst_name()"/"isfirst_name()"/"hasfirst_name()" or "__call()" exist and have public access in class "App\Entity\User"." at /var/www/inventory/templates/user/show.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"first_name\" nor one of the methods \"first_name()\", \"getfirst_name()\"/\"isfirst_name()\"/\"hasfirst_name()\" or \"__call()\" exist and have public access in class \"App\\Entity\\User\". at /var/www/inventory/templates/user/show.html.twig:16)"} []
[2020-05-31T07:43:38.975058+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:43:39.082912+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c77eb1"},"request_uri":"http://localhost:8000/_wdt/c77eb1","method":"GET"} []
[2020-05-31T07:44:08.388147+02:00] request.INFO: Matched route "user_show". {"route":"user_show","route_parameters":{"_route":"user_show","_controller":"App\\Controller\\UserController::show","id":"2"},"request_uri":"http://localhost:8000/user/2","method":"GET"} []
[2020-05-31T07:44:08.391464+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:44:08.391545+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:44:08.391596+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:44:08.396356+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["2"] []
[2020-05-31T07:44:08.406247+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T07:44:08.407562+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T07:44:08.411048+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:44:08.627836+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e53fdd"},"request_uri":"http://localhost:8000/_wdt/e53fdd","method":"GET"} []
[2020-05-31T07:45:00.975163+02:00] request.INFO: Matched route "user_show". {"route":"user_show","route_parameters":{"_route":"user_show","_controller":"App\\Controller\\UserController::show","id":"2"},"request_uri":"http://localhost:8000/user/2","method":"GET"} []
[2020-05-31T07:45:00.978390+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:45:00.978489+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:00.978550+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:00.984222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["2"] []
[2020-05-31T07:45:00.997203+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T07:45:00.998337+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T07:45:01.001774+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:45:01.239691+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2597af"},"request_uri":"http://localhost:8000/_wdt/2597af","method":"GET"} []
[2020-05-31T07:45:16.775052+02:00] request.INFO: Matched route "user_show". {"route":"user_show","route_parameters":{"_route":"user_show","_controller":"App\\Controller\\UserController::show","id":"2"},"request_uri":"http://localhost:8000/user/2","method":"GET"} []
[2020-05-31T07:45:16.778574+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:45:16.778672+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:16.778734+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:16.784732+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["2"] []
[2020-05-31T07:45:16.794927+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T07:45:16.796284+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T07:45:16.799910+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:45:17.027668+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0262cf"},"request_uri":"http://localhost:8000/_wdt/0262cf","method":"GET"} []
[2020-05-31T07:45:25.797243+02:00] request.INFO: Matched route "user_type_index". {"route":"user_type_index","route_parameters":{"_route":"user_type_index","_controller":"App\\Controller\\UserTypeController::index"},"request_uri":"http://localhost:8000/usertype/","method":"GET"} []
[2020-05-31T07:45:25.800510+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:45:25.800623+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:25.800686+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:25.805395+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 [] []
[2020-05-31T07:45:25.809635+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:45:26.047355+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b9d459"},"request_uri":"http://localhost:8000/_wdt/b9d459","method":"GET"} []
[2020-05-31T07:45:27.264608+02:00] request.INFO: Matched route "user_type_new". {"route":"user_type_new","route_parameters":{"_route":"user_type_new","_controller":"App\\Controller\\UserTypeController::new"},"request_uri":"http://localhost:8000/usertype/new","method":"GET"} []
[2020-05-31T07:45:27.267016+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:45:27.267128+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:27.267191+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:27.289844+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:45:27.516109+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bfafc5"},"request_uri":"http://localhost:8000/_wdt/bfafc5","method":"GET"} []
[2020-05-31T07:45:31.097670+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:45:31.100431+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:45:31.100675+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:31.100780+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:31.105183+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:45:31.377568+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c80326"},"request_uri":"http://localhost:8000/_wdt/c80326","method":"GET"} []
[2020-05-31T07:45:34.459261+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T07:45:34.461370+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:45:34.461438+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:34.461494+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:34.466769+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T07:45:34.472913+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:45:34.765892+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"047106"},"request_uri":"http://localhost:8000/_wdt/047106","method":"GET"} []
[2020-05-31T07:45:36.886037+02:00] request.INFO: Matched route "categories_edit". {"route":"categories_edit","route_parameters":{"_route":"categories_edit","_controller":"App\\Controller\\CategoriesController::edit","id":"1"},"request_uri":"http://localhost:8000/categories/1/edit","method":"GET"} []
[2020-05-31T07:45:36.888438+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:45:36.888535+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:36.888597+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:36.892570+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? ["1"] []
[2020-05-31T07:45:37.042667+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:45:37.275926+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4af7f9"},"request_uri":"http://localhost:8000/_wdt/4af7f9","method":"GET"} []
[2020-05-31T07:45:39.437968+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T07:45:39.439631+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:45:39.439692+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:39.439730+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:39.444142+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T07:45:39.449631+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:45:39.709866+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0801d3"},"request_uri":"http://localhost:8000/_wdt/0801d3","method":"GET"} []
[2020-05-31T07:45:45.103347+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4af7f9"},"request_uri":"http://localhost:8000/_wdt/4af7f9","method":"GET"} []
[2020-05-31T07:45:50.280442+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T07:45:50.282640+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:45:50.282715+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:50.282757+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:50.286715+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:45:50.567419+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eab18f"},"request_uri":"http://localhost:8000/_wdt/eab18f","method":"GET"} []
[2020-05-31T07:45:59.853896+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T07:45:59.855986+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:45:59.856056+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:59.856095+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:45:59.859242+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T07:45:59.863153+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:46:00.107520+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"46b7df"},"request_uri":"http://localhost:8000/_wdt/46b7df","method":"GET"} []
[2020-05-31T07:49:20.948381+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T07:49:20.950947+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:49:20.951017+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:49:20.951060+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:49:20.964443+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:49:21.267532+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"51f213"},"request_uri":"http://localhost:8000/_wdt/51f213","method":"GET"} []
[2020-05-31T07:56:44.094697+02:00] console.ERROR: Error thrown while running command "debug:container --show-private --format=json". Message: "The "--show-private" option does not exist." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): The \"--show-private\" option does not exist. at /var/www/inventory/vendor/symfony/console/Input/ArgvInput.php:200)","command":"debug:container --show-private --format=json","message":"The \"--show-private\" option does not exist."} []
[2020-05-31T07:56:44.096845+02:00] console.DEBUG: Command "debug:container --show-private --format=json" exited with code "1" {"command":"debug:container --show-private --format=json","code":1} []
[2020-05-31T07:59:47.693952+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T07:59:47.740714+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T07:59:47.740787+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:59:47.740835+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T07:59:47.985050+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "capacity" nor one of the methods "capacity()", "getcapacity()"/"iscapacity()"/"hascapacity()" or "__call()" exist and have public access in class "Symfony\Component\Form\FormView"." at /var/www/inventory/templates/college/_form.html.twig line 7 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"capacity\" nor one of the methods \"capacity()\", \"getcapacity()\"/\"iscapacity()\"/\"hascapacity()\" or \"__call()\" exist and have public access in class \"Symfony\\Component\\Form\\FormView\". at /var/www/inventory/templates/college/_form.html.twig:7)"} []
[2020-05-31T07:59:48.057617+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T07:59:48.168111+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2400a3"},"request_uri":"http://localhost:8000/_wdt/2400a3","method":"GET"} []
[2020-05-31T08:00:04.268696+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:00:04.273946+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:00:04.274077+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:00:04.274158+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:00:04.296978+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:00:04.538679+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"51a918"},"request_uri":"http://localhost:8000/_wdt/51a918","method":"GET"} []
[2020-05-31T08:01:11.076369+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:01:11.080235+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:01:11.080351+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:01:11.080402+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:01:11.098531+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:01:11.338447+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4f9a15"},"request_uri":"http://localhost:8000/_wdt/4f9a15","method":"GET"} []
[2020-05-31T08:01:56.749851+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:01:56.758871+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:01:56.759074+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:01:56.759274+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:01:56.785759+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:01:57.027425+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"47470f"},"request_uri":"http://localhost:8000/_wdt/47470f","method":"GET"} []
[2020-05-31T08:03:12.955122+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:03:12.962580+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:03:12.962721+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:03:12.962805+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:03:12.986617+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:03:13.241340+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1624fe"},"request_uri":"http://localhost:8000/_wdt/1624fe","method":"GET"} []
[2020-05-31T08:03:19.375112+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"POST"} []
[2020-05-31T08:03:19.378012+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:03:19.378085+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:03:19.378128+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:03:19.378278+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:03:19.686911+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"63c9f8"},"request_uri":"http://localhost:8000/_wdt/63c9f8","method":"GET"} []
[2020-05-31T08:03:21.227531+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"POST"} []
[2020-05-31T08:03:21.231017+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:03:21.231833+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:03:21.231920+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:03:21.232111+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:03:21.518228+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"33308b"},"request_uri":"http://localhost:8000/_wdt/33308b","method":"GET"} []
[2020-05-31T08:03:38.042178+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"POST"} []
[2020-05-31T08:03:38.044787+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:03:38.044856+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:03:38.044895+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:03:38.045056+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:03:38.299668+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0e66b8"},"request_uri":"http://localhost:8000/_wdt/0e66b8","method":"GET"} []
[2020-05-31T08:03:39.925388+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"POST"} []
[2020-05-31T08:03:39.927166+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:03:39.927230+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:03:39.927268+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:03:39.927385+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:03:40.181837+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"817d36"},"request_uri":"http://localhost:8000/_wdt/817d36","method":"GET"} []
[2020-05-31T08:04:02.514773+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"POST"} []
[2020-05-31T08:04:02.517155+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:04:02.517224+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:02.517263+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:02.517403+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:04:02.762186+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8afa1b"},"request_uri":"http://localhost:8000/_wdt/8afa1b","method":"GET"} []
[2020-05-31T08:04:04.738036+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"POST"} []
[2020-05-31T08:04:04.741597+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:04:04.741688+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:04.741739+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:04.741908+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:04:04.760123+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T08:04:04.769405+02:00] doctrine.DEBUG: INSERT INTO college (name, description) VALUES (?, ?) {"1":"Social Science","2":"more ..."} []
[2020-05-31T08:04:04.769820+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T08:04:04.965099+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:04:04.968698+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:04:04.968811+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:04.968905+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:04.977308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:04:04.990686+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:04:05.248948+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aab1fb"},"request_uri":"http://localhost:8000/_wdt/aab1fb","method":"GET"} []
[2020-05-31T08:04:09.493829+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:04:09.495976+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:04:09.496044+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:09.496082+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:09.508461+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:04:09.748915+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c09f55"},"request_uri":"http://localhost:8000/_wdt/c09f55","method":"GET"} []
[2020-05-31T08:04:19.493469+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"POST"} []
[2020-05-31T08:04:19.498695+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:04:19.498829+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:19.498910+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:19.499198+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:04:19.523739+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T08:04:19.524323+02:00] doctrine.DEBUG: INSERT INTO college (name, description) VALUES (?, ?) {"1":"JIT","2":"descs"} []
[2020-05-31T08:04:19.524719+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T08:04:19.636848+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:04:19.638300+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:04:19.638354+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:19.638390+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:19.641665+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:04:19.658884+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:04:19.914282+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"48e5a1"},"request_uri":"http://localhost:8000/_wdt/48e5a1","method":"GET"} []
[2020-05-31T08:04:22.915735+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"3"},"request_uri":"http://localhost:8000/college/3","method":"GET"} []
[2020-05-31T08:04:22.917837+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:04:22.917904+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:22.917945+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:22.921140+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["3"] []
[2020-05-31T08:04:22.928777+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:04:23.168631+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a1c2fe"},"request_uri":"http://localhost:8000/_wdt/a1c2fe","method":"GET"} []
[2020-05-31T08:04:26.165855+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:04:26.168112+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:04:26.168192+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:26.168246+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:26.172081+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:04:26.176205+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:04:26.402488+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7e19b8"},"request_uri":"http://localhost:8000/_wdt/7e19b8","method":"GET"} []
[2020-05-31T08:04:27.899390+02:00] request.INFO: Matched route "college_edit". {"route":"college_edit","route_parameters":{"_route":"college_edit","_controller":"App\\Controller\\CollegeController::edit","id":"3"},"request_uri":"http://localhost:8000/college/3/edit","method":"GET"} []
[2020-05-31T08:04:27.902404+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:04:27.902547+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:27.902647+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:04:27.906568+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["3"] []
[2020-05-31T08:04:27.921721+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:04:28.175811+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b11963"},"request_uri":"http://localhost:8000/_wdt/b11963","method":"GET"} []
[2020-05-31T08:10:55.869891+02:00] request.INFO: Matched route "user_show". {"route":"user_show","route_parameters":{"_route":"user_show","_controller":"App\\Controller\\UserController::show","id":"2"},"request_uri":"http://localhost:8000/user/2","method":"GET"} []
[2020-05-31T08:10:55.872892+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:10:55.873437+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:10:55.873518+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:10:55.882722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["2"] []
[2020-05-31T08:10:55.894662+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T08:10:55.896767+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T08:10:55.901891+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:10:56.399384+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"24f01f"},"request_uri":"http://localhost:8000/_wdt/24f01f","method":"GET"} []
[2020-05-31T08:10:57.669957+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T08:10:57.672419+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:10:57.672519+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:10:57.672582+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:10:57.679903+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T08:10:57.686652+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T08:10:57.687744+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T08:10:57.690757+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T08:10:57.691284+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T08:10:57.694145+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:10:57.948071+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fe8850"},"request_uri":"http://localhost:8000/_wdt/fe8850","method":"GET"} []
[2020-05-31T08:10:59.480306+02:00] request.INFO: Matched route "user_new". {"route":"user_new","route_parameters":{"_route":"user_new","_controller":"App\\Controller\\UserController::new"},"request_uri":"http://localhost:8000/user/new","method":"GET"} []
[2020-05-31T08:10:59.484157+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:10:59.484279+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:10:59.484371+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:10:59.548100+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T08:10:59.553513+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-05-31T08:10:59.563359+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:10:59.807743+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"56625f"},"request_uri":"http://localhost:8000/_wdt/56625f","method":"GET"} []
[2020-05-31T08:11:04.589146+02:00] request.INFO: Matched route "college_edit". {"route":"college_edit","route_parameters":{"_route":"college_edit","_controller":"App\\Controller\\CollegeController::edit","id":"3"},"request_uri":"http://localhost:8000/college/3/edit","method":"GET"} []
[2020-05-31T08:11:04.593510+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:11:04.593615+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:11:04.593704+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:11:04.599607+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["3"] []
[2020-05-31T08:11:04.623379+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:11:04.876522+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3cd399"},"request_uri":"http://localhost:8000/_wdt/3cd399","method":"GET"} []
[2020-05-31T08:11:07.479934+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:11:07.483811+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:11:07.483902+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:11:07.483944+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:11:07.487658+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:11:07.492043+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:11:07.738589+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc34e9"},"request_uri":"http://localhost:8000/_wdt/fc34e9","method":"GET"} []
[2020-05-31T08:11:09.625846+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:11:09.628855+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:11:09.628966+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:11:09.629060+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:11:09.644022+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:11:09.876225+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e381bc"},"request_uri":"http://localhost:8000/_wdt/e381bc","method":"GET"} []
[2020-05-31T08:11:58.327327+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:11:58.330600+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:11:58.330709+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:11:58.330773+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:11:58.355518+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:11:58.573873+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a23717"},"request_uri":"http://localhost:8000/_wdt/a23717","method":"GET"} []
[2020-05-31T08:12:23.453971+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:12:23.457336+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:12:23.457416+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:12:23.457459+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:12:23.473344+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:12:23.682971+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"98f2ff"},"request_uri":"http://localhost:8000/_wdt/98f2ff","method":"GET"} []
[2020-05-31T08:12:51.977890+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:12:51.981492+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:12:51.981577+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:12:51.981623+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:12:51.997236+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:12:52.209689+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a86e1a"},"request_uri":"http://localhost:8000/_wdt/a86e1a","method":"GET"} []
[2020-05-31T08:13:08.804397+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:13:08.807147+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:13:08.807215+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:13:08.807281+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:13:08.824021+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:13:09.054848+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ef0983"},"request_uri":"http://localhost:8000/_wdt/ef0983","method":"GET"} []
[2020-05-31T08:13:20.533055+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:13:20.536965+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:13:20.537098+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:13:20.537160+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:13:20.556798+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:13:20.761143+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"00265e"},"request_uri":"http://localhost:8000/_wdt/00265e","method":"GET"} []
[2020-05-31T08:13:49.313992+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:13:49.317130+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:13:49.317237+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:13:49.317297+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:13:49.332721+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\SyntaxError: "A template that extends another one cannot include content outside Twig blocks. Did you forget to put the content inside a {% block %} tag?" at /var/www/inventory/templates/college/_form.html.twig line 3 {"exception":"[object] (Twig\\Error\\SyntaxError(code: 0): A template that extends another one cannot include content outside Twig blocks. Did you forget to put the content inside a {% block %} tag? at /var/www/inventory/templates/college/_form.html.twig:3)"} []
[2020-05-31T08:13:49.395142+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:13:49.524823+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"177f06"},"request_uri":"http://localhost:8000/_wdt/177f06","method":"GET"} []
[2020-05-31T08:14:09.807176+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:14:09.818158+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:14:09.818503+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:14:09.818819+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:14:09.858423+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:14:10.313879+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"74d031"},"request_uri":"http://localhost:8000/_wdt/74d031","method":"GET"} []
[2020-05-31T08:14:13.574649+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:14:13.577919+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:14:13.578018+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:14:13.578077+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:14:13.591091+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:14:14.032201+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4fd10c"},"request_uri":"http://localhost:8000/_wdt/4fd10c","method":"GET"} []
[2020-05-31T08:15:05.623415+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc34e9"},"request_uri":"http://localhost:8000/_wdt/fc34e9","method":"GET"} []
[2020-05-31T08:15:08.884276+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3cd399"},"request_uri":"http://localhost:8000/_wdt/3cd399","method":"GET"} []
[2020-05-31T08:15:15.575324+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:15:15.577493+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:15:15.577562+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:15:15.577599+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:15:15.582853+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:15:15.852430+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"714ca2"},"request_uri":"http://localhost:8000/_wdt/714ca2","method":"GET"} []
[2020-05-31T08:15:19.520383+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:15:19.522850+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:15:19.522932+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:15:19.522975+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:15:19.528081+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:15:19.532191+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:15:19.956065+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"836282"},"request_uri":"http://localhost:8000/_wdt/836282","method":"GET"} []
[2020-05-31T08:17:10.522294+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:17:10.525529+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:17:10.525628+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:17:10.525684+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:17:10.545746+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:17:11.001722+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"13d7a5"},"request_uri":"http://localhost:8000/_wdt/13d7a5","method":"GET"} []
[2020-05-31T08:19:17.918417+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:19:17.923102+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:19:17.923224+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:19:17.923322+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:19:17.938172+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:19:18.182035+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1cf368"},"request_uri":"http://localhost:8000/_wdt/1cf368","method":"GET"} []
[2020-05-31T08:19:19.571459+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:19:19.573405+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:19:19.573609+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:19:19.573757+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:19:19.578422+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:19:19.802184+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1c524e"},"request_uri":"http://localhost:8000/_wdt/1c524e","method":"GET"} []
[2020-05-31T08:19:28.358265+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:19:28.360865+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:19:28.360938+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:19:28.360978+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:19:28.373259+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:19:28.629110+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e3e3a1"},"request_uri":"http://localhost:8000/_wdt/e3e3a1","method":"GET"} []
[2020-05-31T08:19:51.370129+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:19:51.377938+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:19:51.378251+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:19:51.378395+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:19:51.392013+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:19:51.637428+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3ff953"},"request_uri":"http://localhost:8000/_wdt/3ff953","method":"GET"} []
[2020-05-31T08:20:04.806791+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:20:04.810266+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:20:04.810370+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:20:04.810431+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:20:04.822566+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:20:05.293240+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ab7480"},"request_uri":"http://localhost:8000/_wdt/ab7480","method":"GET"} []
[2020-05-31T08:20:08.093657+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:20:08.096961+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:20:08.097051+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:20:08.097102+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:20:08.101118+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:20:08.105507+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:20:08.434297+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a0da57"},"request_uri":"http://localhost:8000/_wdt/a0da57","method":"GET"} []
[2020-05-31T08:20:11.691990+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:20:11.695000+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:20:11.695083+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:20:11.695157+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:20:11.709223+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:20:12.145494+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"92921e"},"request_uri":"http://localhost:8000/_wdt/92921e","method":"GET"} []
[2020-05-31T08:20:35.522721+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:20:35.524804+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:20:35.524876+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:20:35.524915+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:20:35.552281+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:20:36.015125+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0621fc"},"request_uri":"http://localhost:8000/_wdt/0621fc","method":"GET"} []
[2020-05-31T08:20:38.677602+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:20:38.680067+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:20:38.680138+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:20:38.680194+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:20:38.683683+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:20:38.687863+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:20:38.936229+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1e8f8d"},"request_uri":"http://localhost:8000/_wdt/1e8f8d","method":"GET"} []
[2020-05-31T08:20:40.405430+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:20:40.407249+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:20:40.407325+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:20:40.407374+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:20:40.420989+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:20:40.891478+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4dcba2"},"request_uri":"http://localhost:8000/_wdt/4dcba2","method":"GET"} []
[2020-05-31T08:39:19.097250+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:39:19.101716+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:39:19.101850+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:39:19.101947+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:39:19.135264+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:39:19.664418+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f3568b"},"request_uri":"http://localhost:8000/_wdt/f3568b","method":"GET"} []
[2020-05-31T08:39:29.616458+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:39:29.618950+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:39:29.619020+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:39:29.619060+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:39:29.626773+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:39:29.893315+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"817c4d"},"request_uri":"http://localhost:8000/_wdt/817c4d","method":"GET"} []
[2020-05-31T08:39:33.310499+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:39:33.313227+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:39:33.313297+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:39:33.313340+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:39:33.317129+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:39:33.321399+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:39:33.552646+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"30be81"},"request_uri":"http://localhost:8000/_wdt/30be81","method":"GET"} []
[2020-05-31T08:39:35.765041+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:39:35.766622+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:39:35.766684+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:39:35.766723+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:39:35.769774+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:39:35.774489+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:39:36.016279+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b4ab0e"},"request_uri":"http://localhost:8000/_wdt/b4ab0e","method":"GET"} []
[2020-05-31T08:39:37.722669+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:39:37.725077+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:39:37.725165+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:39:37.725209+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:39:37.736289+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:39:38.180120+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2f94d7"},"request_uri":"http://localhost:8000/_wdt/2f94d7","method":"GET"} []
[2020-05-31T08:41:06.522271+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:41:06.524898+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:41:06.524983+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:06.525034+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:06.545614+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:41:07.145561+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"52bffa"},"request_uri":"http://localhost:8000/_wdt/52bffa","method":"GET"} []
[2020-05-31T08:41:11.536012+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:41:11.539549+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:41:11.539628+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:11.539672+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:11.543910+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:41:11.549019+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:41:11.800905+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9f0fac"},"request_uri":"http://localhost:8000/_wdt/9f0fac","method":"GET"} []
[2020-05-31T08:41:13.495631+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:41:13.497337+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:41:13.497408+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:13.497451+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:13.508760+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:41:13.969866+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0fe7bd"},"request_uri":"http://localhost:8000/_wdt/0fe7bd","method":"GET"} []
[2020-05-31T08:41:23.272283+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:41:23.275559+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:41:23.275660+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:23.275721+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:23.283252+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:41:23.533284+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eb0e2d"},"request_uri":"http://localhost:8000/_wdt/eb0e2d","method":"GET"} []
[2020-05-31T08:41:27.123627+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:41:27.126820+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:41:27.126897+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:27.126940+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:27.131399+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:41:27.381060+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"67c4b0"},"request_uri":"http://localhost:8000/_wdt/67c4b0","method":"GET"} []
[2020-05-31T08:41:29.887240+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:41:29.891635+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:41:29.891843+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:29.891981+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:29.900396+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:41:29.908944+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:41:30.178255+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"390431"},"request_uri":"http://localhost:8000/_wdt/390431","method":"GET"} []
[2020-05-31T08:41:31.749558+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:41:31.751989+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:41:31.752093+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:31.752154+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:31.765838+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:41:32.220426+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"92aef6"},"request_uri":"http://localhost:8000/_wdt/92aef6","method":"GET"} []
[2020-05-31T08:41:36.496538+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:41:36.498574+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:41:36.498639+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:36.498677+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:36.502227+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:41:36.506587+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:41:36.775096+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1b9dd3"},"request_uri":"http://localhost:8000/_wdt/1b9dd3","method":"GET"} []
[2020-05-31T08:41:38.934705+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"92aef6"},"request_uri":"http://localhost:8000/_wdt/92aef6","method":"GET"} []
[2020-05-31T08:41:43.560342+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:41:43.562776+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:41:43.562853+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:43.562916+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:43.567275+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:41:43.809461+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ddb809"},"request_uri":"http://localhost:8000/_wdt/ddb809","method":"GET"} []
[2020-05-31T08:41:53.911778+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:41:53.913843+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:41:53.913908+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:53.913958+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:53.917349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:41:53.921530+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:41:54.175558+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7a923a"},"request_uri":"http://localhost:8000/_wdt/7a923a","method":"GET"} []
[2020-05-31T08:41:55.607900+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:41:55.609536+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:41:55.609600+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:55.609640+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:41:55.620085+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:41:56.065925+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"132e33"},"request_uri":"http://localhost:8000/_wdt/132e33","method":"GET"} []
[2020-05-31T08:43:20.218692+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:43:20.221229+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:43:20.221308+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:43:20.221371+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:43:20.240888+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:43:20.708535+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dc0b7c"},"request_uri":"http://localhost:8000/_wdt/dc0b7c","method":"GET"} []
[2020-05-31T08:43:23.599027+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:43:23.601709+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:43:23.601793+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:43:23.601853+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:43:23.615125+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:43:24.068312+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fec6a2"},"request_uri":"http://localhost:8000/_wdt/fec6a2","method":"GET"} []
[2020-05-31T08:43:28.907934+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:43:28.910103+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:43:28.910168+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:43:28.910224+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:43:28.918871+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:43:29.170130+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"849a3a"},"request_uri":"http://localhost:8000/_wdt/849a3a","method":"GET"} []
[2020-05-31T08:43:43.188191+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:43:43.190497+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:43:43.190563+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:43:43.190601+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:43:43.198437+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:43:43.450435+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"719199"},"request_uri":"http://localhost:8000/_wdt/719199","method":"GET"} []
[2020-05-31T08:44:25.408641+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:44:25.411866+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:44:25.411962+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:44:25.412021+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:44:25.422023+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:44:25.751268+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"94f1c5"},"request_uri":"http://localhost:8000/_wdt/94f1c5","method":"GET"} []
[2020-05-31T08:44:44.639666+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:44:44.642192+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:44:44.642283+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:44:44.642333+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:44:44.649317+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:44:44.894485+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9af469"},"request_uri":"http://localhost:8000/_wdt/9af469","method":"GET"} []
[2020-05-31T08:44:58.179950+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:44:58.186186+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:44:58.186359+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:44:58.186482+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:44:58.198935+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:44:58.452263+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8364ae"},"request_uri":"http://localhost:8000/_wdt/8364ae","method":"GET"} []
[2020-05-31T08:46:48.105341+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:46:48.119749+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:46:48.120227+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:46:48.120543+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:46:48.160739+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:46:48.532153+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a05522"},"request_uri":"http://localhost:8000/_wdt/a05522","method":"GET"} []
[2020-05-31T08:46:50.925899+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:46:50.929080+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:46:50.929219+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:46:50.929338+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:46:50.938369+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:46:51.236241+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b9cffd"},"request_uri":"http://localhost:8000/_wdt/b9cffd","method":"GET"} []
[2020-05-31T08:46:57.003708+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:46:57.006477+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:46:57.006572+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:46:57.006623+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:46:57.011487+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:46:57.257928+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9f8dc4"},"request_uri":"http://localhost:8000/_wdt/9f8dc4","method":"GET"} []
[2020-05-31T08:47:06.602793+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:47:06.606292+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:47:06.606401+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:47:06.606464+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:47:06.611423+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:47:06.616468+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:47:06.870024+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4bd20b"},"request_uri":"http://localhost:8000/_wdt/4bd20b","method":"GET"} []
[2020-05-31T08:47:08.989809+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:47:08.993165+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:47:08.993275+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:47:08.993339+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:47:09.007752+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:47:09.453039+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a9db0c"},"request_uri":"http://localhost:8000/_wdt/a9db0c","method":"GET"} []
[2020-05-31T08:47:26.309259+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:47:26.311711+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:47:26.311831+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:47:26.311883+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:47:26.315659+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:47:26.554680+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1542e8"},"request_uri":"http://localhost:8000/_wdt/1542e8","method":"GET"} []
[2020-05-31T08:47:44.795178+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:47:44.797157+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:47:44.797222+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:47:44.797261+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:47:44.804276+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:47:45.062012+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3b0df8"},"request_uri":"http://localhost:8000/_wdt/3b0df8","method":"GET"} []
[2020-05-31T08:48:00.077789+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:48:00.081397+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:48:00.081498+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:48:00.081561+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:48:00.090387+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:48:00.314547+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"064897"},"request_uri":"http://localhost:8000/_wdt/064897","method":"GET"} []
[2020-05-31T08:48:22.317749+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:48:22.320826+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:48:22.320912+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:48:22.320961+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:48:22.332760+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:48:22.564213+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"71a1d3"},"request_uri":"http://localhost:8000/_wdt/71a1d3","method":"GET"} []
[2020-05-31T08:48:37.655088+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:48:37.658325+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:48:37.658424+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:48:37.658515+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:48:37.663637+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:48:37.900126+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0fae27"},"request_uri":"http://localhost:8000/_wdt/0fae27","method":"GET"} []
[2020-05-31T08:49:17.922159+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:49:17.933356+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:49:17.933717+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:49:17.934032+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:49:17.955125+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:49:18.215546+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"323028"},"request_uri":"http://localhost:8000/_wdt/323028","method":"GET"} []
[2020-05-31T08:50:17.907041+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:50:17.915182+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:50:17.915373+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:50:17.915496+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:50:17.929232+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:50:18.163910+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f44f4d"},"request_uri":"http://localhost:8000/_wdt/f44f4d","method":"GET"} []
[2020-05-31T08:50:40.342758+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:50:40.345564+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:50:40.345642+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:50:40.345689+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:50:40.350319+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:50:40.356132+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:50:40.620540+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"632021"},"request_uri":"http://localhost:8000/_wdt/632021","method":"GET"} []
[2020-05-31T08:50:41.655192+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:50:41.660720+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:50:41.660916+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:50:41.661035+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:50:41.680052+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:50:42.146991+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be71de"},"request_uri":"http://localhost:8000/_wdt/be71de","method":"GET"} []
[2020-05-31T08:50:48.182571+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:50:48.185051+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:50:48.185145+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:50:48.185211+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:50:48.190834+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:50:48.461979+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"36193b"},"request_uri":"http://localhost:8000/_wdt/36193b","method":"GET"} []
[2020-05-31T08:52:08.977934+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:52:08.983461+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:52:08.983604+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:52:08.983687+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:52:08.996292+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:52:09.263104+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"671407"},"request_uri":"http://localhost:8000/_wdt/671407","method":"GET"} []
[2020-05-31T08:52:37.503489+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:52:37.506685+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:52:37.506770+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:52:37.506847+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:52:37.515135+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:52:37.761995+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7a1dbf"},"request_uri":"http://localhost:8000/_wdt/7a1dbf","method":"GET"} []
[2020-05-31T08:52:44.990295+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:52:44.993170+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:52:44.993250+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:52:44.993300+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:52:44.998921+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:52:45.244237+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9860c5"},"request_uri":"http://localhost:8000/_wdt/9860c5","method":"GET"} []
[2020-05-31T08:53:00.139977+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:53:00.143386+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:53:00.143493+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:53:00.143585+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:53:00.151584+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:53:00.415902+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"774ab0"},"request_uri":"http://localhost:8000/_wdt/774ab0","method":"GET"} []
[2020-05-31T08:53:48.720096+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:53:48.724837+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:53:48.724975+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:53:48.725057+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:53:48.735121+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:53:48.951320+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b090d0"},"request_uri":"http://localhost:8000/_wdt/b090d0","method":"GET"} []
[2020-05-31T08:53:58.387820+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:53:58.392416+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:53:58.392532+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:53:58.392598+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:53:58.404817+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:53:58.692266+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b95d2c"},"request_uri":"http://localhost:8000/_wdt/b95d2c","method":"GET"} []
[2020-05-31T08:54:15.409930+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:54:15.413206+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:54:15.413287+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:15.413336+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:15.418759+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:54:15.644784+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"84c259"},"request_uri":"http://localhost:8000/_wdt/84c259","method":"GET"} []
[2020-05-31T08:54:17.069855+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:54:17.072035+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:54:17.072136+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:17.072197+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:17.077553+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:54:17.338711+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e6c4fb"},"request_uri":"http://localhost:8000/_wdt/e6c4fb","method":"GET"} []
[2020-05-31T08:54:18.748504+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:54:18.750481+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:54:18.750571+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:18.750630+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:18.755784+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:54:19.001505+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"37faa9"},"request_uri":"http://localhost:8000/_wdt/37faa9","method":"GET"} []
[2020-05-31T08:54:21.308413+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:54:21.310602+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:54:21.310671+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:21.310713+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:21.314956+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:54:21.580071+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"015508"},"request_uri":"http://localhost:8000/_wdt/015508","method":"GET"} []
[2020-05-31T08:54:24.856641+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:54:24.859012+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:54:24.859109+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:24.859169+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:24.863710+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:54:25.117015+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"11f9c0"},"request_uri":"http://localhost:8000/_wdt/11f9c0","method":"GET"} []
[2020-05-31T08:54:28.388802+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:54:28.391051+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:54:28.391143+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:28.391202+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:28.396379+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:54:28.651101+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b95979"},"request_uri":"http://localhost:8000/_wdt/b95979","method":"GET"} []
[2020-05-31T08:54:33.308903+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:54:33.316211+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:54:33.316422+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:33.316676+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:33.328767+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:54:33.607058+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1d46fe"},"request_uri":"http://localhost:8000/_wdt/1d46fe","method":"GET"} []
[2020-05-31T08:54:53.843504+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:54:53.847301+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:54:53.847407+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:53.847470+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:54:53.858412+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:54:54.141733+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f41e0d"},"request_uri":"http://localhost:8000/_wdt/f41e0d","method":"GET"} []
[2020-05-31T08:55:42.533019+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:55:42.538173+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:55:42.538357+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:55:42.538490+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:55:42.557724+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:55:42.866548+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f6dc0b"},"request_uri":"http://localhost:8000/_wdt/f6dc0b","method":"GET"} []
[2020-05-31T08:55:44.403440+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:55:44.407717+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:55:44.407915+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:55:44.408032+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:55:44.418797+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:55:44.690947+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"869e23"},"request_uri":"http://localhost:8000/_wdt/869e23","method":"GET"} []
[2020-05-31T08:56:08.450073+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:56:08.452669+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:56:08.452779+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:56:08.452837+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:56:08.464697+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:56:08.711812+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2a17d0"},"request_uri":"http://localhost:8000/_wdt/2a17d0","method":"GET"} []
[2020-05-31T08:56:14.205946+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:56:14.208566+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:56:14.208649+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:56:14.208692+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:56:14.214324+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:56:14.453895+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"363954"},"request_uri":"http://localhost:8000/_wdt/363954","method":"GET"} []
[2020-05-31T08:57:00.584805+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:57:00.589261+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:57:00.589386+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:57:00.589482+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:57:00.605949+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:57:00.836796+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d7a93e"},"request_uri":"http://localhost:8000/_wdt/d7a93e","method":"GET"} []
[2020-05-31T08:57:25.927916+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:57:25.932977+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:57:25.933112+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:57:25.933195+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:57:25.951123+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:57:26.281786+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"20b88f"},"request_uri":"http://localhost:8000/_wdt/20b88f","method":"GET"} []
[2020-05-31T08:58:17.085108+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:58:17.087741+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:58:17.087860+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:58:17.087926+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:58:17.100616+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:58:17.337942+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a56f93"},"request_uri":"http://localhost:8000/_wdt/a56f93","method":"GET"} []
[2020-05-31T08:58:22.578459+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:58:22.581471+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:58:22.581559+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:58:22.581617+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:58:22.587135+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:58:22.834484+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c1b239"},"request_uri":"http://localhost:8000/_wdt/c1b239","method":"GET"} []
[2020-05-31T08:59:25.494152+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:59:25.498744+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:59:25.498880+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:59:25.498971+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:59:25.516378+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:59:25.772219+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d994dd"},"request_uri":"http://localhost:8000/_wdt/d994dd","method":"GET"} []
[2020-05-31T08:59:31.824923+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T08:59:31.830648+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:59:31.830784+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:59:31.830869+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:59:31.836949+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T08:59:31.844137+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:59:32.105034+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba9910"},"request_uri":"http://localhost:8000/_wdt/ba9910","method":"GET"} []
[2020-05-31T08:59:33.792018+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T08:59:33.796405+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:59:33.796592+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:59:33.796729+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:59:33.816342+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:59:34.278620+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3c6f10"},"request_uri":"http://localhost:8000/_wdt/3c6f10","method":"GET"} []
[2020-05-31T08:59:46.574320+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T08:59:46.576684+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T08:59:46.576754+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:59:46.576794+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T08:59:46.580661+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T08:59:46.828736+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f3c8b"},"request_uri":"http://localhost:8000/_wdt/8f3c8b","method":"GET"} []
[2020-05-31T09:00:12.981104+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:00:12.983650+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:00:12.983733+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:00:12.983805+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:00:12.996968+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:00:13.246508+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd4f8e"},"request_uri":"http://localhost:8000/_wdt/fd4f8e","method":"GET"} []
[2020-05-31T09:01:07.604589+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:01:07.608142+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:01:07.608258+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:01:07.608321+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:01:07.627627+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:01:07.961906+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6b3212"},"request_uri":"http://localhost:8000/_wdt/6b3212","method":"GET"} []
[2020-05-31T09:01:42.133546+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:01:42.137198+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:01:42.137301+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:01:42.137371+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:01:42.157884+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:01:42.434587+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"99cd0c"},"request_uri":"http://localhost:8000/_wdt/99cd0c","method":"GET"} []
[2020-05-31T09:02:32.719906+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:02:32.724574+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:02:32.724674+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:02:32.724760+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:02:32.737212+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:02:33.013939+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4765e7"},"request_uri":"http://localhost:8000/_wdt/4765e7","method":"GET"} []
[2020-05-31T09:02:35.883028+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:02:35.885756+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:02:35.885825+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:02:35.885880+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:02:35.890377+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:02:36.131448+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d6a7d8"},"request_uri":"http://localhost:8000/_wdt/d6a7d8","method":"GET"} []
[2020-05-31T09:02:42.358821+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:02:42.360767+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:02:42.360832+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:02:42.360870+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:02:42.364769+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:02:42.620675+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"715b31"},"request_uri":"http://localhost:8000/_wdt/715b31","method":"GET"} []
[2020-05-31T09:05:07.078470+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:05:07.083933+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:05:07.084067+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:05:07.084190+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:05:07.096293+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:05:07.349973+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"01283d"},"request_uri":"http://localhost:8000/_wdt/01283d","method":"GET"} []
[2020-05-31T09:05:42.282585+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:05:42.292898+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:05:42.293095+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:05:42.293271+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:05:42.307510+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:05:42.551541+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"17105f"},"request_uri":"http://localhost:8000/_wdt/17105f","method":"GET"} []
[2020-05-31T09:06:08.030651+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:06:08.045310+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:06:08.045700+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:06:08.046061+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:06:08.085327+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:06:08.323898+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"244efa"},"request_uri":"http://localhost:8000/_wdt/244efa","method":"GET"} []
[2020-05-31T09:06:27.934971+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:06:27.938407+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:06:27.938623+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:06:27.938716+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:06:27.952954+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:06:28.203948+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eaf28b"},"request_uri":"http://localhost:8000/_wdt/eaf28b","method":"GET"} []
[2020-05-31T09:06:30.543491+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:06:30.546122+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:06:30.546201+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:06:30.546256+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:06:30.551661+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:06:30.783611+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"88302b"},"request_uri":"http://localhost:8000/_wdt/88302b","method":"GET"} []
[2020-05-31T09:07:38.409356+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:07:38.411881+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:07:38.411965+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:07:38.412015+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:07:38.425881+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:07:38.661736+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d22973"},"request_uri":"http://localhost:8000/_wdt/d22973","method":"GET"} []
[2020-05-31T09:08:09.593302+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:08:09.596276+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:08:09.596364+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:08:09.596416+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:08:09.602951+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:08:09.848811+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca36ef"},"request_uri":"http://localhost:8000/_wdt/ca36ef","method":"GET"} []
[2020-05-31T09:12:43.465726+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:12:43.469182+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:12:43.469279+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:12:43.469339+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:12:43.487358+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:12:43.739460+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0dfc09"},"request_uri":"http://localhost:8000/_wdt/0dfc09","method":"GET"} []
[2020-05-31T09:13:13.870024+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:13:13.876225+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:13:13.876367+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:13:13.876449+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:13:13.892146+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:13:14.130110+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"35647b"},"request_uri":"http://localhost:8000/_wdt/35647b","method":"GET"} []
[2020-05-31T09:13:31.910744+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:13:31.913262+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:13:31.913330+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:13:31.913389+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:13:31.923362+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:13:32.194758+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8fe5bf"},"request_uri":"http://localhost:8000/_wdt/8fe5bf","method":"GET"} []
[2020-05-31T09:13:47.514897+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:13:47.517682+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:13:47.517770+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:13:47.517827+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:13:47.522843+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:13:47.776584+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c7eb87"},"request_uri":"http://localhost:8000/_wdt/c7eb87","method":"GET"} []
[2020-05-31T09:14:01.859175+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c7eb87"},"request_uri":"http://localhost:8000/_wdt/c7eb87","method":"GET"} []
[2020-05-31T09:14:06.022248+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:14:06.024748+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:14:06.024823+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:14:06.024864+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:14:06.029484+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:14:06.288127+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5edf9"},"request_uri":"http://localhost:8000/_wdt/d5edf9","method":"GET"} []
[2020-05-31T09:14:21.565014+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:14:21.567517+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:14:21.567604+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:14:21.567662+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:14:21.572190+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:14:21.807979+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0d655d"},"request_uri":"http://localhost:8000/_wdt/0d655d","method":"GET"} []
[2020-05-31T09:14:59.288653+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:14:59.290760+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:14:59.290825+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:14:59.290864+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:14:59.297756+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:14:59.531889+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e4b3cf"},"request_uri":"http://localhost:8000/_wdt/e4b3cf","method":"GET"} []
[2020-05-31T09:15:53.489180+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:15:53.494092+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:15:53.494237+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:15:53.494340+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:15:53.501715+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:15:53.768074+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e93e5f"},"request_uri":"http://localhost:8000/_wdt/e93e5f","method":"GET"} []
[2020-05-31T09:17:44.202060+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:17:44.204292+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:17:44.204368+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:17:44.204409+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:17:44.217384+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:17:44.508244+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ad070e"},"request_uri":"http://localhost:8000/_wdt/ad070e","method":"GET"} []
[2020-05-31T09:17:49.122767+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:17:49.125232+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:17:49.125305+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:17:49.125345+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:17:49.131495+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:17:49.389867+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ea84ca"},"request_uri":"http://localhost:8000/_wdt/ea84ca","method":"GET"} []
[2020-05-31T09:17:55.428688+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:17:55.433162+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:17:55.433301+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:17:55.433421+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:17:55.451599+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:17:55.695587+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"38bdef"},"request_uri":"http://localhost:8000/_wdt/38bdef","method":"GET"} []
[2020-05-31T09:34:55.083945+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:34:55.087684+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:34:55.087800+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:34:55.087865+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:34:55.096712+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:34:55.469388+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ad676"},"request_uri":"http://localhost:8000/_wdt/2ad676","method":"GET"} []
[2020-05-31T09:43:37.671301+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:43:37.674869+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:43:37.674972+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:43:37.675061+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:43:37.689633+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\LoaderError: "Unable to find template "menus/topnav.html.twig" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form) in "base.html.twig" at line 34." at /var/www/inventory/vendor/twig/twig/src/Loader/FilesystemLoader.php line 227 {"exception":"[object] (Twig\\Error\\LoaderError(code: 0): Unable to find template \"menus/topnav.html.twig\" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form) in \"base.html.twig\" at line 34. at /var/www/inventory/vendor/twig/twig/src/Loader/FilesystemLoader.php:227)"} []
[2020-05-31T09:43:37.730293+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:43:37.872806+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4d38bc"},"request_uri":"http://localhost:8000/_wdt/4d38bc","method":"GET"} []
[2020-05-31T09:43:43.468647+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:43:43.471570+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:43:43.471645+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:43:43.471685+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:43:43.475684+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\LoaderError: "Unable to find template "menus/topnav.html.twig" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form) in "base.html.twig" at line 34." at /var/www/inventory/vendor/twig/twig/src/Loader/FilesystemLoader.php line 227 {"exception":"[object] (Twig\\Error\\LoaderError(code: 0): Unable to find template \"menus/topnav.html.twig\" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form) in \"base.html.twig\" at line 34. at /var/www/inventory/vendor/twig/twig/src/Loader/FilesystemLoader.php:227)"} []
[2020-05-31T09:43:43.510303+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:43:43.620931+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f7b3ee"},"request_uri":"http://localhost:8000/_wdt/f7b3ee","method":"GET"} []
[2020-05-31T09:46:20.069488+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:46:20.072554+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:46:20.072629+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:46:20.072674+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:46:20.082324+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\LoaderError: "Unable to find template "menus/sidebarmenu.html.twig" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form) in "base.html.twig" at line 181." at /var/www/inventory/vendor/twig/twig/src/Loader/FilesystemLoader.php line 227 {"exception":"[object] (Twig\\Error\\LoaderError(code: 0): Unable to find template \"menus/sidebarmenu.html.twig\" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form) in \"base.html.twig\" at line 181. at /var/www/inventory/vendor/twig/twig/src/Loader/FilesystemLoader.php:227)"} []
[2020-05-31T09:46:20.115149+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:46:20.400355+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"805895"},"request_uri":"http://localhost:8000/_wdt/805895","method":"GET"} []
[2020-05-31T09:46:22.691492+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:46:22.694007+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:46:22.694158+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:46:22.694253+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:46:22.702061+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\LoaderError: "Unable to find template "menus/sidebarmenu.html.twig" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form) in "base.html.twig" at line 181." at /var/www/inventory/vendor/twig/twig/src/Loader/FilesystemLoader.php line 227 {"exception":"[object] (Twig\\Error\\LoaderError(code: 0): Unable to find template \"menus/sidebarmenu.html.twig\" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form) in \"base.html.twig\" at line 181. at /var/www/inventory/vendor/twig/twig/src/Loader/FilesystemLoader.php:227)"} []
[2020-05-31T09:46:22.741921+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:46:22.870152+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"235115"},"request_uri":"http://localhost:8000/_wdt/235115","method":"GET"} []
[2020-05-31T09:47:26.878560+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:47:26.884734+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:47:26.884870+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:47:26.885002+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:47:26.896790+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\LoaderError: "Unable to find template "menus/sidebarmenu.html.twig" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form) in "base.html.twig" at line 181." at /var/www/inventory/vendor/twig/twig/src/Loader/FilesystemLoader.php line 227 {"exception":"[object] (Twig\\Error\\LoaderError(code: 0): Unable to find template \"menus/sidebarmenu.html.twig\" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form) in \"base.html.twig\" at line 181. at /var/www/inventory/vendor/twig/twig/src/Loader/FilesystemLoader.php:227)"} []
[2020-05-31T09:47:26.934563+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:47:27.040367+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ea5b2d"},"request_uri":"http://localhost:8000/_wdt/ea5b2d","method":"GET"} []
[2020-05-31T09:47:29.257051+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:47:29.260280+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:47:29.260367+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:47:29.260418+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:47:29.264614+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\LoaderError: "Unable to find template "menus/sidebarmenu.html.twig" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form) in "base.html.twig" at line 181." at /var/www/inventory/vendor/twig/twig/src/Loader/FilesystemLoader.php line 227 {"exception":"[object] (Twig\\Error\\LoaderError(code: 0): Unable to find template \"menus/sidebarmenu.html.twig\" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form) in \"base.html.twig\" at line 181. at /var/www/inventory/vendor/twig/twig/src/Loader/FilesystemLoader.php:227)"} []
[2020-05-31T09:47:29.310444+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:47:29.426458+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aa09aa"},"request_uri":"http://localhost:8000/_wdt/aa09aa","method":"GET"} []
[2020-05-31T09:47:55.099542+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:47:55.104839+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:47:55.105055+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:47:55.105230+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:47:55.121991+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:47:55.576309+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0c8187"},"request_uri":"http://localhost:8000/_wdt/0c8187","method":"GET"} []
[2020-05-31T09:48:03.587120+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:48:03.591047+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:48:03.591150+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:48:03.591215+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:48:03.596876+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:48:03.865589+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"da8454"},"request_uri":"http://localhost:8000/_wdt/da8454","method":"GET"} []
[2020-05-31T09:48:57.276618+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:48:57.279036+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:48:57.279114+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:48:57.279162+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:48:57.332504+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:48:57.715538+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f361cd"},"request_uri":"http://localhost:8000/_wdt/f361cd","method":"GET"} []
[2020-05-31T09:49:06.706881+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:49:06.709489+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:49:06.709559+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:49:06.709618+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:49:06.715473+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:49:07.066434+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c0e416"},"request_uri":"http://localhost:8000/_wdt/c0e416","method":"GET"} []
[2020-05-31T09:49:11.766533+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:49:11.768755+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:49:11.768827+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:49:11.768870+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:49:11.773219+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:49:12.085226+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3b65c8"},"request_uri":"http://localhost:8000/_wdt/3b65c8","method":"GET"} []
[2020-05-31T09:50:11.036863+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:50:11.039848+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:50:11.039932+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:11.039982+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:11.054139+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:50:11.337811+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"efc02e"},"request_uri":"http://localhost:8000/_wdt/efc02e","method":"GET"} []
[2020-05-31T09:50:21.721614+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:50:21.724195+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:50:21.724277+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:21.724318+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:21.729573+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:50:22.018126+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7086ed"},"request_uri":"http://localhost:8000/_wdt/7086ed","method":"GET"} []
[2020-05-31T09:50:24.236207+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:50:24.239268+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:50:24.239350+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:24.239396+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:24.243604+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:50:24.549447+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ce5c7b"},"request_uri":"http://localhost:8000/_wdt/ce5c7b","method":"GET"} []
[2020-05-31T09:50:27.645818+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:50:27.648958+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:50:27.649203+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:27.649292+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:27.654283+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:50:28.009678+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"61d304"},"request_uri":"http://localhost:8000/_wdt/61d304","method":"GET"} []
[2020-05-31T09:50:29.529482+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T09:50:29.531705+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:50:29.531828+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:29.531891+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:29.537722+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:50:29.847915+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0f4423"},"request_uri":"http://localhost:8000/_wdt/0f4423","method":"GET"} []
[2020-05-31T09:50:32.507873+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T09:50:32.514963+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:50:32.515238+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:32.515434+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:32.528583+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T09:50:32.539301+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:50:32.877394+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"235aa0"},"request_uri":"http://localhost:8000/_wdt/235aa0","method":"GET"} []
[2020-05-31T09:50:34.299216+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T09:50:34.300996+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:50:34.301066+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:34.301107+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:50:34.315598+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:50:34.725004+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6d7d99"},"request_uri":"http://localhost:8000/_wdt/6d7d99","method":"GET"} []
[2020-05-31T09:51:20.578630+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T09:51:20.581380+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:51:20.581485+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:51:20.581546+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:51:20.594602+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:51:20.970712+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fe7fc5"},"request_uri":"http://localhost:8000/_wdt/fe7fc5","method":"GET"} []
[2020-05-31T09:51:47.133430+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T09:51:47.135743+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:51:47.135831+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:51:47.135884+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:51:47.147439+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:51:47.521471+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d37d36"},"request_uri":"http://localhost:8000/_wdt/d37d36","method":"GET"} []
[2020-05-31T09:52:15.846689+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T09:52:15.849202+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T09:52:15.849276+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:52:15.849319+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T09:52:15.861388+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T09:52:16.223830+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"22ee5e"},"request_uri":"http://localhost:8000/_wdt/22ee5e","method":"GET"} []
[2020-05-31T10:09:03.060112+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:09:03.064511+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:09:03.064617+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:09:03.064687+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:09:03.081698+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:09:03.529789+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3b7a71"},"request_uri":"http://localhost:8000/_wdt/3b7a71","method":"GET"} []
[2020-05-31T10:09:43.677946+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:09:43.680254+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:09:43.680324+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:09:43.680382+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:09:43.693578+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:09:44.107385+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"99e3d9"},"request_uri":"http://localhost:8000/_wdt/99e3d9","method":"GET"} []
[2020-05-31T10:09:48.649847+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /howm"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /howm\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/howm/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-05-31T10:09:48.786806+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"14eaa2"},"request_uri":"http://localhost:8000/_wdt/14eaa2","method":"GET"} []
[2020-05-31T10:09:57.379476+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T10:09:57.381945+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:09:57.382039+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:09:57.382107+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:09:57.390247+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:09:57.666830+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bf5b0b"},"request_uri":"http://localhost:8000/_wdt/bf5b0b","method":"GET"} []
[2020-05-31T10:10:07.518629+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T10:10:07.522142+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:10:07.522236+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:10:07.522295+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:10:07.533545+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:10:07.829370+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"55a58f"},"request_uri":"http://localhost:8000/_wdt/55a58f","method":"GET"} []
[2020-05-31T10:10:23.681381+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T10:10:23.685884+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:10:23.686025+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:10:23.686125+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:10:23.695129+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T10:10:23.706100+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:10:24.003333+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2c1e29"},"request_uri":"http://localhost:8000/_wdt/2c1e29","method":"GET"} []
[2020-05-31T10:10:27.023357+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T10:10:27.026289+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:10:27.026369+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:10:27.026419+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:10:27.032493+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T10:10:27.038712+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:10:27.331805+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1c30ed"},"request_uri":"http://localhost:8000/_wdt/1c30ed","method":"GET"} []
[2020-05-31T10:10:29.291488+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T10:10:29.293813+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:10:29.293909+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:10:29.293983+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:10:29.302155+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T10:10:29.312648+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:10:29.601613+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bce747"},"request_uri":"http://localhost:8000/_wdt/bce747","method":"GET"} []
[2020-05-31T10:10:31.918747+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-05-31T10:10:31.921634+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:10:31.921715+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:10:31.921759+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:10:31.929527+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gross_amount AS gross_amount_2, t0.customer_id AS customer_id_3, t0.user_id AS user_id_4 FROM `order` t0 [] []
[2020-05-31T10:10:31.935035+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:10:32.270584+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a5984d"},"request_uri":"http://localhost:8000/_wdt/a5984d","method":"GET"} []
[2020-05-31T10:13:47.529505+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-05-31T10:13:47.531914+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:13:47.531981+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:13:47.532021+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:13:47.536510+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gross_amount AS gross_amount_2, t0.customer_id AS customer_id_3, t0.user_id AS user_id_4 FROM `order` t0 [] []
[2020-05-31T10:13:47.549091+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:13:48.155786+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fbc0a8"},"request_uri":"http://localhost:8000/_wdt/fbc0a8","method":"GET"} []
[2020-05-31T10:13:52.592177+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:13:52.596044+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:13:52.596151+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:13:52.596215+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:13:52.600925+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:13:52.608553+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:13:52.929158+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4d5aa4"},"request_uri":"http://localhost:8000/_wdt/4d5aa4","method":"GET"} []
[2020-05-31T10:13:55.128641+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T10:13:55.131388+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:13:55.131475+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:13:55.131527+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:13:55.137169+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T10:13:55.144190+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:13:55.447382+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b1ef81"},"request_uri":"http://localhost:8000/_wdt/b1ef81","method":"GET"} []
[2020-05-31T10:13:57.250399+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T10:13:57.253055+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:13:57.253163+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:13:57.253236+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:13:57.259126+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T10:13:57.264813+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T10:13:57.265554+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T10:13:57.266564+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T10:13:57.266872+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T10:13:57.268707+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:13:57.622180+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4beea9"},"request_uri":"http://localhost:8000/_wdt/4beea9","method":"GET"} []
[2020-05-31T10:13:59.721655+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T10:13:59.725047+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:13:59.725129+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:13:59.725179+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:13:59.730807+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T10:13:59.737602+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:14:00.048748+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6495f9"},"request_uri":"http://localhost:8000/_wdt/6495f9","method":"GET"} []
[2020-05-31T10:14:02.947654+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T10:14:02.950756+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:14:02.950869+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:02.950946+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:02.956111+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T10:14:02.960922+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:14:03.271793+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"10fc66"},"request_uri":"http://localhost:8000/_wdt/10fc66","method":"GET"} []
[2020-05-31T10:14:06.584278+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:14:06.587445+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:14:06.587550+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:06.587615+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:06.591819+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:14:06.597807+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:14:06.958943+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"39ac50"},"request_uri":"http://localhost:8000/_wdt/39ac50","method":"GET"} []
[2020-05-31T10:14:09.091456+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T10:14:09.096046+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:14:09.096181+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:09.096279+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:09.103916+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T10:14:09.116981+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:14:09.448218+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f92515"},"request_uri":"http://localhost:8000/_wdt/f92515","method":"GET"} []
[2020-05-31T10:14:11.751855+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T10:14:11.754170+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:14:11.754262+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:11.754361+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:11.757885+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T10:14:11.763987+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:14:12.114794+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"72cce4"},"request_uri":"http://localhost:8000/_wdt/72cce4","method":"GET"} []
[2020-05-31T10:14:14.326096+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T10:14:14.331043+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:14:14.331155+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:14.331220+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:14.340989+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 [] []
[2020-05-31T10:14:14.354920+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:14:14.661512+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"58884e"},"request_uri":"http://localhost:8000/_wdt/58884e","method":"GET"} []
[2020-05-31T10:14:16.647214+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:14:16.651112+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:14:16.651217+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:16.651300+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:16.655746+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:14:16.662548+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:14:16.956694+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"767122"},"request_uri":"http://localhost:8000/_wdt/767122","method":"GET"} []
[2020-05-31T10:14:19.552060+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-31T10:14:19.554706+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:14:19.554791+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:19.554842+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:19.562552+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-31T10:14:19.568319+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:14:19.870398+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"04b99b"},"request_uri":"http://localhost:8000/_wdt/04b99b","method":"GET"} []
[2020-05-31T10:14:22.352829+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-05-31T10:14:22.359606+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:14:22.359897+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:22.360081+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:22.370431+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gross_amount AS gross_amount_2, t0.customer_id AS customer_id_3, t0.user_id AS user_id_4 FROM `order` t0 [] []
[2020-05-31T10:14:22.379582+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:14:22.705526+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ed3050"},"request_uri":"http://localhost:8000/_wdt/ed3050","method":"GET"} []
[2020-05-31T10:14:25.836753+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:14:25.841750+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:14:25.841904+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:25.842032+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:25.850754+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:14:25.860459+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:14:26.192194+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ccfa1d"},"request_uri":"http://localhost:8000/_wdt/ccfa1d","method":"GET"} []
[2020-05-31T10:14:27.194975+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:14:27.197650+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:14:27.197757+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:27.197820+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:27.216591+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:14:27.633359+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b857dc"},"request_uri":"http://localhost:8000/_wdt/b857dc","method":"GET"} []
[2020-05-31T10:14:49.196883+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /heme"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /heme\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/heme/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-05-31T10:14:49.344969+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b1c3c2"},"request_uri":"http://localhost:8000/_wdt/b1c3c2","method":"GET"} []
[2020-05-31T10:14:52.614522+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T10:14:52.617072+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:14:52.617145+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:52.617186+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:14:52.623746+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:14:52.949692+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5f7d7c"},"request_uri":"http://localhost:8000/_wdt/5f7d7c","method":"GET"} []
[2020-05-31T10:16:36.341279+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T10:16:36.343746+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:16:36.343833+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:16:36.343874+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:16:36.351875+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:16:36.635642+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f56d68"},"request_uri":"http://localhost:8000/_wdt/f56d68","method":"GET"} []
[2020-05-31T10:16:41.758341+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:16:41.767148+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:16:41.767372+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:16:41.767602+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:16:41.776149+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:16:41.783568+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:16:42.071847+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"316e46"},"request_uri":"http://localhost:8000/_wdt/316e46","method":"GET"} []
[2020-05-31T10:16:43.621313+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:16:43.624266+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:16:43.624376+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:16:43.624469+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:16:43.641843+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:16:44.052142+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"29ccd5"},"request_uri":"http://localhost:8000/_wdt/29ccd5","method":"GET"} []
[2020-05-31T10:17:37.457392+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:17:37.459515+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:17:37.459584+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:17:37.459628+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:17:37.475431+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:17:38.050072+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cb9f25"},"request_uri":"http://localhost:8000/_wdt/cb9f25","method":"GET"} []
[2020-05-31T10:17:43.835565+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:17:43.838962+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:17:43.839066+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:17:43.839133+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:17:43.852587+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:17:44.251003+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a38dd6"},"request_uri":"http://localhost:8000/_wdt/a38dd6","method":"GET"} []
[2020-05-31T10:18:39.328000+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:18:39.331353+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:18:39.331459+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:39.331526+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:39.351345+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:18:39.695700+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cb8343"},"request_uri":"http://localhost:8000/_wdt/cb8343","method":"GET"} []
[2020-05-31T10:18:41.660002+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:18:41.661646+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:18:41.661709+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:41.661747+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:41.672704+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:18:41.933626+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"649393"},"request_uri":"http://localhost:8000/_wdt/649393","method":"GET"} []
[2020-05-31T10:18:43.192008+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:18:43.196235+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:18:43.196348+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:43.196441+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:43.214265+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:18:43.497102+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7252d9"},"request_uri":"http://localhost:8000/_wdt/7252d9","method":"GET"} []
[2020-05-31T10:18:46.113284+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:18:46.115880+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:18:46.115961+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:46.116022+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:46.119909+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:18:46.124204+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:18:46.379148+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f3e7a8"},"request_uri":"http://localhost:8000/_wdt/f3e7a8","method":"GET"} []
[2020-05-31T10:18:47.908795+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:18:47.910412+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:18:47.910479+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:47.910518+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:47.922080+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:18:48.199689+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4688a9"},"request_uri":"http://localhost:8000/_wdt/4688a9","method":"GET"} []
[2020-05-31T10:18:53.485623+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"POST"} []
[2020-05-31T10:18:53.488010+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:18:53.488081+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:53.488122+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:53.488296+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:18:53.505038+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T10:18:53.505587+02:00] doctrine.DEBUG: INSERT INTO college (name, description) VALUES (?, ?) {"1":"ss","2":"sss"} []
[2020-05-31T10:18:53.505925+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T10:18:53.694681+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:18:53.697544+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:18:53.697664+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:53.697762+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:53.701569+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:18:53.706585+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:18:53.984333+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"44cbe4"},"request_uri":"http://localhost:8000/_wdt/44cbe4","method":"GET"} []
[2020-05-31T10:18:57.568216+02:00] request.INFO: Matched route "college_edit". {"route":"college_edit","route_parameters":{"_route":"college_edit","_controller":"App\\Controller\\CollegeController::edit","id":"1"},"request_uri":"http://localhost:8000/college/1/edit","method":"GET"} []
[2020-05-31T10:18:57.570568+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:18:57.570644+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:57.570707+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:18:57.574394+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T10:18:57.584480+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:18:57.873396+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b46eb8"},"request_uri":"http://localhost:8000/_wdt/b46eb8","method":"GET"} []
[2020-05-31T10:19:01.287172+02:00] request.INFO: Matched route "college_edit". {"route":"college_edit","route_parameters":{"_route":"college_edit","_controller":"App\\Controller\\CollegeController::edit","id":"1"},"request_uri":"http://localhost:8000/college/1/edit","method":"POST"} []
[2020-05-31T10:19:01.290376+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:19:01.290472+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:01.290532+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:01.290767+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:19:01.294440+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T10:19:01.308637+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T10:19:01.308871+02:00] doctrine.DEBUG: UPDATE college SET description = ? WHERE id = ? ["xxx",1] []
[2020-05-31T10:19:01.309245+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T10:19:01.422005+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:19:01.424689+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:19:01.424804+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:01.424875+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:01.429649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:19:01.439201+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:19:01.760021+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0c83e3"},"request_uri":"http://localhost:8000/_wdt/0c83e3","method":"GET"} []
[2020-05-31T10:19:03.231302+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"4"},"request_uri":"http://localhost:8000/college/4","method":"GET"} []
[2020-05-31T10:19:03.233053+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:19:03.233118+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:03.233158+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:03.235559+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["4"] []
[2020-05-31T10:19:03.240063+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:19:03.530738+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0d3a14"},"request_uri":"http://localhost:8000/_wdt/0d3a14","method":"GET"} []
[2020-05-31T10:19:08.614623+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:19:08.616853+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:19:08.616924+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:08.616966+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:08.620349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:19:08.624496+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:19:08.943736+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c438c0"},"request_uri":"http://localhost:8000/_wdt/c438c0","method":"GET"} []
[2020-05-31T10:19:13.243836+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:19:13.246869+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:19:13.246952+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:13.247036+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:13.251277+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:19:13.256186+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:19:13.547116+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"89e1b0"},"request_uri":"http://localhost:8000/_wdt/89e1b0","method":"GET"} []
[2020-05-31T10:19:16.266739+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:19:16.268939+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:19:16.269042+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:16.269132+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:16.281043+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:19:16.564477+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dec9e1"},"request_uri":"http://localhost:8000/_wdt/dec9e1","method":"GET"} []
[2020-05-31T10:19:21.900105+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"POST"} []
[2020-05-31T10:19:21.902447+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:19:21.902514+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:21.902556+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:21.902717+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:19:21.918287+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T10:19:21.918766+02:00] doctrine.DEBUG: INSERT INTO college (name, description) VALUES (?, ?) {"1":"xxxxxx","2":"xxxxxxxxxxx"} []
[2020-05-31T10:19:21.919180+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T10:19:22.062986+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:19:22.065222+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:19:22.065300+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:22.065340+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:22.068268+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:19:22.072425+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:19:22.317352+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b15f3d"},"request_uri":"http://localhost:8000/_wdt/b15f3d","method":"GET"} []
[2020-05-31T10:19:49.491679+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:19:49.493652+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:19:49.493716+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:49.493755+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:19:49.506323+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:19:49.801268+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e14304"},"request_uri":"http://localhost:8000/_wdt/e14304","method":"GET"} []
[2020-05-31T10:21:39.798741+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:21:39.801186+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:21:39.801256+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:21:39.801297+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:21:39.817457+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "desciption" nor one of the methods "desciption()", "getdesciption()"/"isdesciption()"/"hasdesciption()" or "__call()" exist and have public access in class "Symfony\Component\Form\FormView"." at /var/www/inventory/templates/college/_form.html.twig line 56 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"desciption\" nor one of the methods \"desciption()\", \"getdesciption()\"/\"isdesciption()\"/\"hasdesciption()\" or \"__call()\" exist and have public access in class \"Symfony\\Component\\Form\\FormView\". at /var/www/inventory/templates/college/_form.html.twig:56)"} []
[2020-05-31T10:21:39.858975+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:21:39.957587+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3519a1"},"request_uri":"http://localhost:8000/_wdt/3519a1","method":"GET"} []
[2020-05-31T10:21:52.607168+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:21:52.620353+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:21:52.620681+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:21:52.620893+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:21:52.658828+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:21:52.903991+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0771af"},"request_uri":"http://localhost:8000/_wdt/0771af","method":"GET"} []
[2020-05-31T10:22:03.578543+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:22:03.581283+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:22:03.581356+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:22:03.581396+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:22:03.593872+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:22:03.877447+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6f2ef0"},"request_uri":"http://localhost:8000/_wdt/6f2ef0","method":"GET"} []
[2020-05-31T10:23:24.082167+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:23:24.084877+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:23:24.084972+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:23:24.085054+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:23:24.102679+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:23:24.348175+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"532e7b"},"request_uri":"http://localhost:8000/_wdt/532e7b","method":"GET"} []
[2020-05-31T10:23:29.434828+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:23:29.437430+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:23:29.437525+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:23:29.437585+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:23:29.450480+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:23:29.724069+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c7a49"},"request_uri":"http://localhost:8000/_wdt/7c7a49","method":"GET"} []
[2020-05-31T10:23:45.111676+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:23:45.114547+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:23:45.114624+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:23:45.114664+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:23:45.126626+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:23:45.408881+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"84b01d"},"request_uri":"http://localhost:8000/_wdt/84b01d","method":"GET"} []
[2020-05-31T10:23:47.189580+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:23:47.198544+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:23:47.199009+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:23:47.199369+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:23:47.216459+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:23:47.232440+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:23:47.525615+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5d5865"},"request_uri":"http://localhost:8000/_wdt/5d5865","method":"GET"} []
[2020-05-31T10:23:49.340938+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:23:49.343338+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:23:49.343413+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:23:49.343467+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:23:49.354783+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:23:49.622040+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a43c2d"},"request_uri":"http://localhost:8000/_wdt/a43c2d","method":"GET"} []
[2020-05-31T10:27:15.976291+02:00] request.INFO: Matched route "college_new". {"route":"college_new","route_parameters":{"_route":"college_new","_controller":"App\\Controller\\CollegeController::new"},"request_uri":"http://localhost:8000/college/new","method":"GET"} []
[2020-05-31T10:27:15.979351+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:27:15.979435+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:27:15.979479+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:27:16.000184+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:27:16.313431+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"457553"},"request_uri":"http://localhost:8000/_wdt/457553","method":"GET"} []
[2020-05-31T10:27:18.848787+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:27:18.856400+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:27:18.856606+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:27:18.856778+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:27:18.868346+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 [] []
[2020-05-31T10:27:18.899753+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "edit" does not exist." at /var/www/inventory/templates/college/index.html.twig line 60 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"edit\" does not exist. at /var/www/inventory/templates/college/index.html.twig:60)"} []
[2020-05-31T10:27:18.955980+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:27:19.081258+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e5304d"},"request_uri":"http://localhost:8000/_wdt/e5304d","method":"GET"} []
[2020-05-31T10:48:43.094121+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-05-31T10:48:43.206020+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9ba22d"},"request_uri":"http://localhost:8000/_wdt/9ba22d","method":"GET"} []
[2020-05-31T10:49:06.636562+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T10:49:06.644575+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:49:06.644654+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:49:06.644707+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:49:06.652955+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:49:06.962323+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5b2f9e"},"request_uri":"http://localhost:8000/_wdt/5b2f9e","method":"GET"} []
[2020-05-31T10:49:09.375930+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:49:09.379331+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:49:09.379436+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:49:09.379529+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:49:09.446345+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $paginator of "App\Controller\CollegeController::index()": it references interface "Knp\Component\Pager\PaginatorInterface" but no such service exists. Did you create a class that implements this interface?" at /var/www/inventory/vendor/symfony/dependency-injection/Container.php line 435 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $paginator of \"App\\Controller\\CollegeController::index()\": it references interface \"Knp\\Component\\Pager\\PaginatorInterface\" but no such service exists. Did you create a class that implements this interface? at /var/www/inventory/vendor/symfony/dependency-injection/Container.php:435)"} []
[2020-05-31T10:49:09.490618+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:49:09.605392+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"296d34"},"request_uri":"http://localhost:8000/_wdt/296d34","method":"GET"} []
[2020-05-31T10:50:54.934664+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:50:54.937218+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:50:54.937294+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:50:54.937338+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:50:54.942200+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $paginator of "App\Controller\CollegeController::index()": it references interface "Knp\Component\Pager\PaginatorInterface" but no such service exists. Did you create a class that implements this interface?" at /var/www/inventory/vendor/symfony/dependency-injection/Container.php line 435 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $paginator of \"App\\Controller\\CollegeController::index()\": it references interface \"Knp\\Component\\Pager\\PaginatorInterface\" but no such service exists. Did you create a class that implements this interface? at /var/www/inventory/vendor/symfony/dependency-injection/Container.php:435)"} []
[2020-05-31T10:50:54.954824+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:50:55.053895+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"353318"},"request_uri":"http://localhost:8000/_wdt/353318","method":"GET"} []
[2020-05-31T10:50:56.936913+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:50:56.938736+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:50:56.938833+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:50:56.938900+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:50:56.942820+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $paginator of "App\Controller\CollegeController::index()": it references interface "Knp\Component\Pager\PaginatorInterface" but no such service exists. Did you create a class that implements this interface?" at /var/www/inventory/vendor/symfony/dependency-injection/Container.php line 435 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $paginator of \"App\\Controller\\CollegeController::index()\": it references interface \"Knp\\Component\\Pager\\PaginatorInterface\" but no such service exists. Did you create a class that implements this interface? at /var/www/inventory/vendor/symfony/dependency-injection/Container.php:435)"} []
[2020-05-31T10:50:56.956207+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:50:57.069634+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a975ef"},"request_uri":"http://localhost:8000/_wdt/a975ef","method":"GET"} []
[2020-05-31T10:52:49.100365+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:52:49.103233+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:52:49.103336+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:52:49.103396+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:52:49.108719+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $paginator of "App\Controller\CollegeController::index()": it references interface "Knp\Component\Pager\PaginatorInterface" but no such service exists. Did you create a class that implements this interface?" at /var/www/inventory/vendor/symfony/dependency-injection/Container.php line 435 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $paginator of \"App\\Controller\\CollegeController::index()\": it references interface \"Knp\\Component\\Pager\\PaginatorInterface\" but no such service exists. Did you create a class that implements this interface? at /var/www/inventory/vendor/symfony/dependency-injection/Container.php:435)"} []
[2020-05-31T10:52:49.124407+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:52:49.227729+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9c9f11"},"request_uri":"http://localhost:8000/_wdt/9c9f11","method":"GET"} []
[2020-05-31T10:55:18.345982+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:55:18.348741+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:55:18.348813+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:55:18.348868+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:55:18.369140+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Form\Exception\InvalidArgumentException: "Could not load type "App\Controller\DepartmentType": class does not exist." at /var/www/inventory/vendor/symfony/form/FormRegistry.php line 85 {"exception":"[object] (Symfony\\Component\\Form\\Exception\\InvalidArgumentException(code: 0): Could not load type \"App\\Controller\\DepartmentType\": class does not exist. at /var/www/inventory/vendor/symfony/form/FormRegistry.php:85)"} []
[2020-05-31T10:55:18.386218+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:55:18.503623+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a62681"},"request_uri":"http://localhost:8000/_wdt/a62681","method":"GET"} []
[2020-05-31T10:55:19.992516+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:55:19.994488+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:55:19.994560+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:55:19.994624+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:55:19.999128+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Form\Exception\InvalidArgumentException: "Could not load type "App\Controller\DepartmentType": class does not exist." at /var/www/inventory/vendor/symfony/form/FormRegistry.php line 85 {"exception":"[object] (Symfony\\Component\\Form\\Exception\\InvalidArgumentException(code: 0): Could not load type \"App\\Controller\\DepartmentType\": class does not exist. at /var/www/inventory/vendor/symfony/form/FormRegistry.php:85)"} []
[2020-05-31T10:55:20.012839+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:55:20.104691+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e009cd"},"request_uri":"http://localhost:8000/_wdt/e009cd","method":"GET"} []
[2020-05-31T10:55:41.823932+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:55:41.826417+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:55:41.826488+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:55:41.826545+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:55:41.922346+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T10:55:41.926162+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T10:55:41.930200+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,5]] []
[2020-05-31T10:55:41.952415+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\LoaderError: "Unable to find template "/_form.html.twig" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form)." at /var/www/inventory/templates/college/index.html.twig line 81 {"exception":"[object] (Twig\\Error\\LoaderError(code: 0): Unable to find template \"/_form.html.twig\" (looked into: /var/www/inventory/templates, /var/www/inventory/vendor/symfony/twig-bridge/Resources/views/Form). at /var/www/inventory/templates/college/index.html.twig:81)"} []
[2020-05-31T10:55:42.027040+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:55:42.205194+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0b86a6"},"request_uri":"http://localhost:8000/_wdt/0b86a6","method":"GET"} []
[2020-05-31T10:57:30.043418+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:57:30.045346+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:57:30.045453+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:57:30.045519+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:57:30.202342+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T10:57:30.206594+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T10:57:30.214543+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,5]] []
[2020-05-31T10:57:30.291409+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "desciption" nor one of the methods "desciption()", "getdesciption()"/"isdesciption()"/"hasdesciption()" or "__call()" exist and have public access in class "App\Entity\College"." at /var/www/inventory/templates/college/index.html.twig line 128 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"desciption\" nor one of the methods \"desciption()\", \"getdesciption()\"/\"isdesciption()\"/\"hasdesciption()\" or \"__call()\" exist and have public access in class \"App\\Entity\\College\". at /var/www/inventory/templates/college/index.html.twig:128)"} []
[2020-05-31T10:57:30.372569+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:57:30.742621+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"03b86b"},"request_uri":"http://localhost:8000/_wdt/03b86b","method":"GET"} []
[2020-05-31T10:57:47.053825+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:57:47.057869+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:57:47.057974+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:57:47.058031+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:57:47.072645+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T10:57:47.073575+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T10:57:47.074559+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,5]] []
[2020-05-31T10:57:47.140229+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:57:47.594171+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a14545"},"request_uri":"http://localhost:8000/_wdt/a14545","method":"GET"} []
[2020-05-31T10:58:00.503237+02:00] request.INFO: Matched route "college_delete". {"route":"college_delete","route_parameters":{"_route":"college_delete","_controller":"App\\Controller\\CollegeController::delete","id":"5"},"request_uri":"http://localhost:8000/college/5","method":"DELETE"} []
[2020-05-31T10:58:00.505959+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:58:00.506031+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:58:00.506086+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:58:00.506293+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:58:00.518435+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["5"] []
[2020-05-31T10:58:00.523035+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T10:58:00.523345+02:00] doctrine.DEBUG: DELETE FROM college WHERE id = ? [5] []
[2020-05-31T10:58:00.523761+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T10:58:00.620424+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:58:00.622182+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:58:00.622256+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:58:00.622299+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:58:00.631067+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T10:58:00.632024+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T10:58:00.633113+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T10:58:00.642953+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:58:00.942602+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"026cad"},"request_uri":"http://localhost:8000/_wdt/026cad","method":"GET"} []
[2020-05-31T10:58:02.659003+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: "No route found for "POST /college/": Method Not Allowed (Allow: GET)" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException(code: 0): No route found for \"POST /college/\": Method Not Allowed (Allow: GET) at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:140)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:42)"} []
[2020-05-31T10:58:02.789995+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff489a"},"request_uri":"http://localhost:8000/_wdt/ff489a","method":"GET"} []
[2020-05-31T10:58:31.994620+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T10:58:31.998453+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:58:31.998552+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:58:31.998614+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:58:31.998849+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:58:32.006286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["4"] []
[2020-05-31T10:58:32.019941+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T10:58:32.020793+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T10:58:32.021740+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T10:58:32.037853+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "bed_index" as such route does not exist.")." at /var/www/inventory/templates/college/_form.html.twig line 70 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"bed_index\" as such route does not exist.\"). at /var/www/inventory/templates/college/_form.html.twig:70)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"bed_index\" as such route does not exist. at /var/www/inventory/vendor/symfony/routing/Generator/CompiledUrlGenerator.php:50)"} []
[2020-05-31T10:58:32.455287+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"af195c"},"request_uri":"http://localhost:8000/_wdt/af195c","method":"GET"} []
[2020-05-31T10:59:15.655472+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T10:59:15.657932+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:59:15.657998+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:59:15.658037+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:59:15.658196+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:59:15.661894+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["4"] []
[2020-05-31T10:59:15.667571+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T10:59:15.668111+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T10:59:15.668781+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T10:59:15.947039+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d93b02"},"request_uri":"http://localhost:8000/_wdt/d93b02","method":"GET"} []
[2020-05-31T10:59:27.683614+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T10:59:27.686259+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:59:27.686329+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:59:27.686372+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:59:27.686542+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:59:27.690459+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["4"] []
[2020-05-31T10:59:27.738584+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\College::setUpdatedAt() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\College::setUpdatedAt() at /var/www/inventory/src/Controller/CollegeController.php:34)"} []
[2020-05-31T10:59:27.740169+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setUpdatedAt" of class "App\Entity\College"." at /var/www/inventory/src/Controller/CollegeController.php line 34 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setUpdatedAt\" of class \"App\\Entity\\College\". at /var/www/inventory/src/Controller/CollegeController.php:34)"} []
[2020-05-31T10:59:27.847388+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8d1bbe"},"request_uri":"http://localhost:8000/_wdt/8d1bbe","method":"GET"} []
[2020-05-31T10:59:39.155593+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d93b02"},"request_uri":"http://localhost:8000/_wdt/d93b02","method":"GET"} []
[2020-05-31T10:59:41.827752+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T10:59:41.832904+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T10:59:41.833053+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:59:41.833166+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T10:59:41.847685+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T10:59:41.848763+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T10:59:41.849784+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T10:59:41.863384+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T10:59:42.141523+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"41292e"},"request_uri":"http://localhost:8000/_wdt/41292e","method":"GET"} []
[2020-05-31T11:00:04.797158+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=soc","method":"GET"} []
[2020-05-31T11:00:04.799870+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:00:04.799948+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:04.800017+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:04.810312+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ WHERE c0_.name LIKE '%soc%' [] []
[2020-05-31T11:00:04.811382+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ WHERE c0_.name LIKE '%soc%' ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:00:04.812214+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.name LIKE '%soc%' AND c0_.id IN (?) ORDER BY c0_.id ASC [[2]] []
[2020-05-31T11:00:04.820220+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:00:05.115522+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"85e7b3"},"request_uri":"http://localhost:8000/_wdt/85e7b3","method":"GET"} []
[2020-05-31T11:00:08.084289+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=","method":"GET"} []
[2020-05-31T11:00:08.086619+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:00:08.086692+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:08.086737+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:08.094519+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:00:08.095651+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:00:08.096374+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:00:08.104917+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:00:08.363683+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2cc14b"},"request_uri":"http://localhost:8000/_wdt/2cc14b","method":"GET"} []
[2020-05-31T11:00:10.372729+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=","method":"GET"} []
[2020-05-31T11:00:10.375982+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:00:10.376106+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:10.376172+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:10.386956+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:00:10.387868+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:00:10.388695+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:00:10.400034+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:00:10.683965+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1d0bb7"},"request_uri":"http://localhost:8000/_wdt/1d0bb7","method":"GET"} []
[2020-05-31T11:00:11.289450+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=","method":"GET"} []
[2020-05-31T11:00:11.292369+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:00:11.292460+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:11.292546+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:11.301919+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:00:11.302628+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:00:11.303299+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:00:11.313373+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:00:11.615881+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c0b8e9"},"request_uri":"http://localhost:8000/_wdt/c0b8e9","method":"GET"} []
[2020-05-31T11:00:13.057131+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=v","method":"GET"} []
[2020-05-31T11:00:13.059301+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:00:13.059382+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:13.059424+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:13.068187+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ WHERE c0_.name LIKE '%v%' [] []
[2020-05-31T11:00:13.069383+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ WHERE c0_.name LIKE '%v%' ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:00:13.078119+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:00:13.375268+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a8cc74"},"request_uri":"http://localhost:8000/_wdt/a8cc74","method":"GET"} []
[2020-05-31T11:00:15.453350+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=","method":"GET"} []
[2020-05-31T11:00:15.455846+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:00:15.455922+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:15.455986+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:15.464139+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:00:15.464868+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:00:15.465982+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:00:15.474586+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:00:15.761668+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ee32e0"},"request_uri":"http://localhost:8000/_wdt/ee32e0","method":"GET"} []
[2020-05-31T11:00:19.832688+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=jit","method":"GET"} []
[2020-05-31T11:00:19.835293+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:00:19.835374+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:19.835425+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:19.844885+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ WHERE c0_.name LIKE '%jit%' [] []
[2020-05-31T11:00:19.846561+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ WHERE c0_.name LIKE '%jit%' ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:00:19.847464+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.name LIKE '%jit%' AND c0_.id IN (?) ORDER BY c0_.id ASC [[3]] []
[2020-05-31T11:00:19.855636+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:00:20.166811+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"54a373"},"request_uri":"http://localhost:8000/_wdt/54a373","method":"GET"} []
[2020-05-31T11:00:21.623927+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=","method":"GET"} []
[2020-05-31T11:00:21.626140+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:00:21.626232+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:21.626297+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:21.634546+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:00:21.635310+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:00:21.636041+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:00:21.644396+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:00:21.956331+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"29f992"},"request_uri":"http://localhost:8000/_wdt/29f992","method":"GET"} []
[2020-05-31T11:00:57.009953+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=","method":"GET"} []
[2020-05-31T11:00:57.013546+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:00:57.013654+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:57.013718+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:00:57.023569+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:00:57.024421+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:00:57.025192+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:00:57.041257+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:00:57.289543+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5bd509"},"request_uri":"http://localhost:8000/_wdt/5bd509","method":"GET"} []
[2020-05-31T11:01:02.662210+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:01:02.667126+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:01:02.667266+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:01:02.667381+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:01:02.680702+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:01:02.681764+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:01:02.682949+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:01:02.694351+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:01:02.969421+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"74a8ac"},"request_uri":"http://localhost:8000/_wdt/74a8ac","method":"GET"} []
[2020-05-31T11:01:04.521675+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:01:04.525887+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:01:04.526055+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:01:04.526160+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:01:04.535616+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:01:04.551503+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:01:04.553213+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:01:04.556068+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:01:04.556791+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:01:04.562789+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:01:04.884278+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5f1cc"},"request_uri":"http://localhost:8000/_wdt/d5f1cc","method":"GET"} []
[2020-05-31T11:02:22.741397+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:02:22.744950+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:02:22.745068+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:02:22.745139+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:02:22.752006+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:02:22.765712+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:02:22.766668+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:02:22.768285+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:02:22.768694+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:02:22.771683+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:02:23.231185+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3bf3fc"},"request_uri":"http://localhost:8000/_wdt/3bf3fc","method":"GET"} []
[2020-05-31T11:03:18.014055+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:03:18.016658+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:03:18.016766+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:18.016834+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:18.023473+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:03:18.040336+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:03:18.042159+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:03:18.043787+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:03:18.044182+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:03:18.046529+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:03:18.501345+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"74804f"},"request_uri":"http://localhost:8000/_wdt/74804f","method":"GET"} []
[2020-05-31T11:03:21.121315+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:03:21.124342+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:03:21.124424+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:21.124478+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:21.129223+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:03:21.135807+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:03:21.136647+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:03:21.137949+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:03:21.138274+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:03:21.140453+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:03:21.440846+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"66b1fa"},"request_uri":"http://localhost:8000/_wdt/66b1fa","method":"GET"} []
[2020-05-31T11:03:38.468113+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:03:38.470728+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:03:38.470798+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:38.470856+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:38.475626+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:03:38.488090+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:03:38.488953+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:03:38.490261+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:03:38.490556+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:03:38.492778+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:03:38.864981+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"53a11d"},"request_uri":"http://localhost:8000/_wdt/53a11d","method":"GET"} []
[2020-05-31T11:03:40.342564+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:03:40.344738+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:03:40.344824+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:40.344888+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:40.348967+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:03:40.355131+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:03:40.355941+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:03:40.357776+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:03:40.358081+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:03:40.359907+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:03:40.647285+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8cb966"},"request_uri":"http://localhost:8000/_wdt/8cb966","method":"GET"} []
[2020-05-31T11:03:50.444681+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:03:50.446998+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:03:50.447062+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:50.447100+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:50.455221+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:03:50.455913+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:03:50.456615+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:03:50.464996+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:03:50.774063+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ebbdba"},"request_uri":"http://localhost:8000/_wdt/ebbdba","method":"GET"} []
[2020-05-31T11:03:52.019239+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T11:03:52.021061+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:03:52.021129+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:52.021187+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:52.024526+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T11:03:52.030572+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:03:52.328293+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7a6155"},"request_uri":"http://localhost:8000/_wdt/7a6155","method":"GET"} []
[2020-05-31T11:03:53.778807+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T11:03:53.783986+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:03:53.784183+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:53.784299+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:53.797025+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T11:03:53.816896+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:03:54.127258+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"64318d"},"request_uri":"http://localhost:8000/_wdt/64318d","method":"GET"} []
[2020-05-31T11:03:54.944479+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-31T11:03:54.947661+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:03:54.947811+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:54.947906+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:54.954195+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-31T11:03:54.964503+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:03:55.252142+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9837dc"},"request_uri":"http://localhost:8000/_wdt/9837dc","method":"GET"} []
[2020-05-31T11:03:56.479076+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-31T11:03:56.481737+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:03:56.481815+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:56.481869+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:56.486346+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-31T11:03:56.491922+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:03:56.790158+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8aa8b9"},"request_uri":"http://localhost:8000/_wdt/8aa8b9","method":"GET"} []
[2020-05-31T11:03:58.145279+02:00] request.INFO: Matched route "transfer_index". {"route":"transfer_index","route_parameters":{"_route":"transfer_index","_controller":"App\\Controller\\TransferController::index"},"request_uri":"http://localhost:8000/transfer/","method":"GET"} []
[2020-05-31T11:03:58.150331+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:03:58.150527+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:58.150703+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:58.159100+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.status AS status_2, t0.to_id_id AS to_id_id_3 FROM transfer t0 [] []
[2020-05-31T11:03:58.166862+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:03:58.446799+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a7ea40"},"request_uri":"http://localhost:8000/_wdt/a7ea40","method":"GET"} []
[2020-05-31T11:03:59.640481+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:03:59.642734+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:03:59.642810+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:59.642872+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:03:59.650459+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:03:59.947356+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4874e7"},"request_uri":"http://localhost:8000/_wdt/4874e7","method":"GET"} []
[2020-05-31T11:04:04.004045+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:04:04.006310+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:04:04.006375+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:04.006413+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:04.014392+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:04:04.015030+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:04:04.015637+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:04:04.023553+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:04:04.312680+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"68a14a"},"request_uri":"http://localhost:8000/_wdt/68a14a","method":"GET"} []
[2020-05-31T11:04:05.488111+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:04:05.491104+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:04:05.491237+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:05.491323+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:05.498386+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:04:05.771417+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c1c185"},"request_uri":"http://localhost:8000/_wdt/c1c185","method":"GET"} []
[2020-05-31T11:04:07.314551+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:04:07.316740+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:04:07.316808+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:07.316864+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:07.320934+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:04:07.578037+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"627fd4"},"request_uri":"http://localhost:8000/_wdt/627fd4","method":"GET"} []
[2020-05-31T11:04:10.465982+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:04:10.468816+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:04:10.468925+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:10.468993+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:10.475010+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:04:10.741487+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e309e1"},"request_uri":"http://localhost:8000/_wdt/e309e1","method":"GET"} []
[2020-05-31T11:04:40.971567+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:04:40.975737+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:04:40.975892+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:40.975991+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:40.994353+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:04:41.282884+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dbfa2b"},"request_uri":"http://localhost:8000/_wdt/dbfa2b","method":"GET"} []
[2020-05-31T11:04:43.133780+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:04:43.136582+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:04:43.136665+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:43.136705+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:43.141891+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:04:43.440281+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"28b532"},"request_uri":"http://localhost:8000/_wdt/28b532","method":"GET"} []
[2020-05-31T11:04:45.647121+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:04:45.648751+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:04:45.648816+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:45.648856+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:45.653144+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:04:45.943745+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c5f3d7"},"request_uri":"http://localhost:8000/_wdt/c5f3d7","method":"GET"} []
[2020-05-31T11:04:59.086003+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:04:59.088150+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:04:59.088223+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:59.088263+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:04:59.100141+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:04:59.384800+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0a9133"},"request_uri":"http://localhost:8000/_wdt/0a9133","method":"GET"} []
[2020-05-31T11:05:00.887857+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:05:00.898419+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:05:00.898865+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:05:00.899175+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:05:00.915344+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:05:01.200292+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"968b5f"},"request_uri":"http://localhost:8000/_wdt/968b5f","method":"GET"} []
[2020-05-31T11:05:32.566969+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:05:32.571027+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:05:32.571141+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:05:32.571242+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:05:32.584988+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:05:32.845216+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"431c8a"},"request_uri":"http://localhost:8000/_wdt/431c8a","method":"GET"} []
[2020-05-31T11:05:35.362532+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:05:35.365021+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:05:35.365097+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:05:35.365138+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:05:35.373881+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:05:35.374581+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:05:35.375248+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:05:35.384104+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:05:35.681992+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6d6e0d"},"request_uri":"http://localhost:8000/_wdt/6d6e0d","method":"GET"} []
[2020-05-31T11:05:37.960481+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:05:37.962291+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:05:37.962376+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:05:37.962419+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:05:37.969308+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:05:37.969936+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:05:37.970448+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:05:37.977524+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:05:38.268983+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1e391f"},"request_uri":"http://localhost:8000/_wdt/1e391f","method":"GET"} []
[2020-05-31T11:05:40.177498+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:05:40.180036+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:05:40.180134+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:05:40.180193+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:05:40.188655+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:05:40.189284+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:05:40.189858+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:05:40.198496+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:05:40.490402+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3deeba"},"request_uri":"http://localhost:8000/_wdt/3deeba","method":"GET"} []
[2020-05-31T11:05:42.004724+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T11:05:42.007315+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:05:42.007410+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:05:42.007477+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:05:42.011622+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T11:05:42.016312+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:05:42.319880+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"72c2c6"},"request_uri":"http://localhost:8000/_wdt/72c2c6","method":"GET"} []
[2020-05-31T11:08:03.293815+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T11:08:03.296545+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:08:03.296650+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:08:03.296694+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:08:03.300376+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T11:08:03.313602+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:08:03.619355+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"37e627"},"request_uri":"http://localhost:8000/_wdt/37e627","method":"GET"} []
[2020-05-31T11:08:05.986674+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:08:05.988812+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:08:05.988890+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:08:05.988942+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:08:05.993930+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:08:06.300521+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"87ef35"},"request_uri":"http://localhost:8000/_wdt/87ef35","method":"GET"} []
[2020-05-31T11:08:09.766981+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:08:09.768986+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:08:09.769052+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:08:09.769089+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:08:09.777688+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:08:09.778465+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:08:09.779246+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:08:09.786990+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:08:10.081568+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"abb365"},"request_uri":"http://localhost:8000/_wdt/abb365","method":"GET"} []
[2020-05-31T11:09:46.341608+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:09:46.344104+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:09:46.344190+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:09:46.344254+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:09:46.344463+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:09:46.348885+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["4"] []
[2020-05-31T11:09:46.354069+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:09:46.354633+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:09:46.355213+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:09:46.653198+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"13a8d5"},"request_uri":"http://localhost:8000/_wdt/13a8d5","method":"GET"} []
[2020-05-31T11:09:55.067932+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:09:55.071465+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:09:55.071581+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:09:55.071663+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:09:55.071963+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:09:55.076002+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["4"] []
[2020-05-31T11:09:55.088789+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\College::setUpdatedAt() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\College::setUpdatedAt() at /var/www/inventory/src/Controller/CollegeController.php:34)"} []
[2020-05-31T11:09:55.090261+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setUpdatedAt" of class "App\Entity\College"." at /var/www/inventory/src/Controller/CollegeController.php line 34 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setUpdatedAt\" of class \"App\\Entity\\College\". at /var/www/inventory/src/Controller/CollegeController.php:34)"} []
[2020-05-31T11:09:55.208797+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bbd254"},"request_uri":"http://localhost:8000/_wdt/bbd254","method":"GET"} []
[2020-05-31T11:11:03.710497+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:11:03.713096+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:11:03.713167+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:03.713210+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:03.713368+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:11:03.717215+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["4"] []
[2020-05-31T11:11:03.731424+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:11:03.731700+02:00] doctrine.DEBUG: UPDATE college SET name = ?, description = ? WHERE id = ? ["ddd","xxxxxxxxxx",4] []
[2020-05-31T11:11:03.732141+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:11:03.965011+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:11:03.967927+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:11:03.968083+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:03.968160+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:03.976856+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:11:03.978002+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:11:03.979210+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:11:03.988982+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:11:04.305131+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5367fb"},"request_uri":"http://localhost:8000/_wdt/5367fb","method":"GET"} []
[2020-05-31T11:11:06.378468+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:11:06.381525+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:11:06.381608+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:06.381656+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:06.381834+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:11:06.386984+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["4"] []
[2020-05-31T11:11:06.393902+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:11:06.394724+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:11:06.395509+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:11:06.696498+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"48f5f3"},"request_uri":"http://localhost:8000/_wdt/48f5f3","method":"GET"} []
[2020-05-31T11:11:09.652740+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-31T11:11:09.655321+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:11:09.655431+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:09.655507+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:09.659216+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-31T11:11:09.666214+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:11:10.005669+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b1e6aa"},"request_uri":"http://localhost:8000/_wdt/b1e6aa","method":"GET"} []
[2020-05-31T11:11:14.232489+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:11:14.235625+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:11:14.235727+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:14.235829+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:14.243537+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:11:14.544788+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"97a291"},"request_uri":"http://localhost:8000/_wdt/97a291","method":"GET"} []
[2020-05-31T11:11:16.661238+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:11:16.663049+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:11:16.663117+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:16.663177+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:16.670718+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:11:16.671399+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:11:16.671976+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:11:16.679310+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:11:16.977851+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ab4fd5"},"request_uri":"http://localhost:8000/_wdt/ab4fd5","method":"GET"} []
[2020-05-31T11:11:19.175589+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:11:19.179533+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:11:19.179611+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:19.179675+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:19.179927+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:11:19.183971+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["4"] []
[2020-05-31T11:11:19.189418+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:11:19.190033+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:11:19.190703+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:11:19.506240+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3cef4f"},"request_uri":"http://localhost:8000/_wdt/3cef4f","method":"GET"} []
[2020-05-31T11:11:25.292056+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:11:25.295315+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:11:25.295414+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:25.295477+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:25.295733+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:11:25.300943+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["4"] []
[2020-05-31T11:11:25.321956+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:11:25.322452+02:00] doctrine.DEBUG: UPDATE college SET name = ?, description = ? WHERE id = ? ["zzzzzzzz","ccccc",4] []
[2020-05-31T11:11:25.396754+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:11:25.589936+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:11:25.592315+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:11:25.592413+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:25.592476+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:11:25.602904+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:11:25.604381+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:11:25.605403+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:11:25.615525+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:11:25.886016+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e87aa9"},"request_uri":"http://localhost:8000/_wdt/e87aa9","method":"GET"} []
[2020-05-31T11:12:18.004444+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:12:18.006610+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:12:18.006682+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:12:18.006720+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:12:18.014947+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:12:18.015602+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:12:18.016227+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:12:18.025632+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:12:18.332850+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8217e7"},"request_uri":"http://localhost:8000/_wdt/8217e7","method":"GET"} []
[2020-05-31T11:12:26.593245+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:12:26.596358+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:12:26.596443+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:12:26.596499+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:12:26.596691+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:12:26.617524+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\College::setIsActive() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\College::setIsActive() at /var/www/inventory/src/Controller/CollegeController.php:58)"} []
[2020-05-31T11:12:26.619368+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setIsActive" of class "App\Entity\College"." at /var/www/inventory/src/Controller/CollegeController.php line 58 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setIsActive\" of class \"App\\Entity\\College\". at /var/www/inventory/src/Controller/CollegeController.php:58)"} []
[2020-05-31T11:12:26.735633+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e141a6"},"request_uri":"http://localhost:8000/_wdt/e141a6","method":"GET"} []
[2020-05-31T11:12:40.947195+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:12:40.949809+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:12:40.949910+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:12:40.949971+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:12:40.950196+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:12:40.965001+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\College::setIsActive() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\College::setIsActive() at /var/www/inventory/src/Controller/CollegeController.php:58)"} []
[2020-05-31T11:12:40.966676+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setIsActive" of class "App\Entity\College"." at /var/www/inventory/src/Controller/CollegeController.php line 58 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setIsActive\" of class \"App\\Entity\\College\". at /var/www/inventory/src/Controller/CollegeController.php:58)"} []
[2020-05-31T11:12:41.077340+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a6b425"},"request_uri":"http://localhost:8000/_wdt/a6b425","method":"GET"} []
[2020-05-31T11:12:42.661020+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:12:42.662634+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:12:42.662699+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:12:42.662738+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:12:42.669905+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:12:42.670651+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:12:42.671371+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:12:42.679670+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:12:42.930965+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c65fdc"},"request_uri":"http://localhost:8000/_wdt/c65fdc","method":"GET"} []
[2020-05-31T11:12:46.795192+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:12:46.800461+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:12:46.800570+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:12:46.800659+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:12:46.800982+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:12:46.821331+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\College::setIsActive() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\College::setIsActive() at /var/www/inventory/src/Controller/CollegeController.php:58)"} []
[2020-05-31T11:12:46.823521+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setIsActive" of class "App\Entity\College"." at /var/www/inventory/src/Controller/CollegeController.php line 58 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setIsActive\" of class \"App\\Entity\\College\". at /var/www/inventory/src/Controller/CollegeController.php:58)"} []
[2020-05-31T11:12:46.947134+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b96243"},"request_uri":"http://localhost:8000/_wdt/b96243","method":"GET"} []
[2020-05-31T11:13:38.059746+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:13:38.062372+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:13:38.062442+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:13:38.062495+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:13:38.062700+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:13:38.082767+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:13:38.084022+02:00] doctrine.DEBUG: INSERT INTO college (name, description) VALUES (?, ?) {"1":"rrr","2":"rrr"} []
[2020-05-31T11:13:38.084381+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:13:38.272009+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T11:13:38.274222+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:13:38.274302+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:13:38.274357+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:13:38.278813+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T11:13:38.284837+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:13:38.603282+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a6ded5"},"request_uri":"http://localhost:8000/_wdt/a6ded5","method":"GET"} []
[2020-05-31T11:13:45.830123+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:13:45.832636+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:13:45.832709+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:13:45.832763+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:13:45.838052+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:13:46.107129+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c1092b"},"request_uri":"http://localhost:8000/_wdt/c1092b","method":"GET"} []
[2020-05-31T11:13:47.161165+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:13:47.163727+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:13:47.163836+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:13:47.163890+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:13:47.175191+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:13:47.176103+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:13:47.176960+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6]] []
[2020-05-31T11:13:47.184955+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:13:47.498738+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0488da"},"request_uri":"http://localhost:8000/_wdt/0488da","method":"GET"} []
[2020-05-31T11:14:01.109519+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:14:01.111825+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:14:01.111894+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:01.111933+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:01.121763+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:14:01.122427+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:14:01.123057+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6]] []
[2020-05-31T11:14:01.134689+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:14:01.407288+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1a2015"},"request_uri":"http://localhost:8000/_wdt/1a2015","method":"GET"} []
[2020-05-31T11:14:31.107709+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:14:31.111595+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:14:31.111694+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:31.111756+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:31.112025+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:14:31.139983+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:14:31.140792+02:00] doctrine.DEBUG: INSERT INTO college (name, description) VALUES (?, ?) {"1":"mama","2":"mamas desc"} []
[2020-05-31T11:14:31.141250+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:14:31.287616+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:14:31.289520+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:14:31.289619+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:31.289673+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:31.297387+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:14:31.298277+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:14:31.299078+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:14:31.307871+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:14:31.594308+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c96713"},"request_uri":"http://localhost:8000/_wdt/c96713","method":"GET"} []
[2020-05-31T11:14:34.810334+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=","method":"GET"} []
[2020-05-31T11:14:34.812581+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:14:34.812661+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:34.812717+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:34.820606+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:14:34.821463+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:14:34.822632+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:14:34.831815+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:14:35.097832+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"697e07"},"request_uri":"http://localhost:8000/_wdt/697e07","method":"GET"} []
[2020-05-31T11:14:39.951586+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=cc","method":"GET"} []
[2020-05-31T11:14:39.954155+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:14:39.954236+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:39.954285+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:39.962773+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ WHERE c0_.name LIKE '%cc%' [] []
[2020-05-31T11:14:39.963833+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ WHERE c0_.name LIKE '%cc%' ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:14:39.970803+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:14:40.261082+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"affc66"},"request_uri":"http://localhost:8000/_wdt/affc66","method":"GET"} []
[2020-05-31T11:14:42.915816+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=","method":"GET"} []
[2020-05-31T11:14:42.917830+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:14:42.917896+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:42.917937+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:42.925601+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:14:42.926356+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:14:42.927016+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:14:42.934580+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:14:43.232100+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e42b19"},"request_uri":"http://localhost:8000/_wdt/e42b19","method":"GET"} []
[2020-05-31T11:14:46.035212+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=mama","method":"GET"} []
[2020-05-31T11:14:46.037287+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:14:46.037357+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:46.037398+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:46.045013+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ WHERE c0_.name LIKE '%mama%' [] []
[2020-05-31T11:14:46.046069+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ WHERE c0_.name LIKE '%mama%' ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:14:46.047026+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.name LIKE '%mama%' AND c0_.id IN (?) ORDER BY c0_.id ASC [[7]] []
[2020-05-31T11:14:46.054840+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:14:46.310188+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d86990"},"request_uri":"http://localhost:8000/_wdt/d86990","method":"GET"} []
[2020-05-31T11:14:48.513635+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=","method":"GET"} []
[2020-05-31T11:14:48.515898+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:14:48.515998+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:48.516061+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:14:48.523783+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:14:48.524456+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:14:48.524977+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:14:48.532479+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:14:48.833698+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d99b26"},"request_uri":"http://localhost:8000/_wdt/d99b26","method":"GET"} []
[2020-05-31T11:15:11.569438+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/college/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"college_index"},"request_uri":"http://localhost:8000/college","method":"GET"} []
[2020-05-31T11:15:11.572760+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:15:11.572866+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:11.572935+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:11.579462+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:15:11.596322+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:15:11.598173+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:15:11.598250+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:11.598318+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:11.607609+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:15:11.608392+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:15:11.609082+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:15:11.617198+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:15:11.908540+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3804d1"},"request_uri":"http://localhost:8000/_wdt/3804d1","method":"GET"} []
[2020-05-31T11:15:24.289467+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:15:24.291857+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:15:24.291943+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:24.291991+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:24.300773+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:15:24.301492+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:15:24.302179+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:15:24.312609+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:15:24.576554+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"271894"},"request_uri":"http://localhost:8000/_wdt/271894","method":"GET"} []
[2020-05-31T11:15:29.546142+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:15:29.549724+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:15:29.549808+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:29.549860+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:29.550057+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:15:29.568649+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:15:29.569271+02:00] doctrine.DEBUG: INSERT INTO college (name, description) VALUES (?, ?) {"1":"qqqqq","2":"qqqq"} []
[2020-05-31T11:15:29.569926+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:15:29.759286+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:15:29.761385+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:15:29.761493+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:29.761545+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:29.768711+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:15:29.778363+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:15:29.779506+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7,8]] []
[2020-05-31T11:15:29.787891+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:15:30.046494+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e30530"},"request_uri":"http://localhost:8000/_wdt/e30530","method":"GET"} []
[2020-05-31T11:15:34.637544+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:15:34.642777+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:15:34.642915+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:34.643033+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:34.643439+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:15:34.650848+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["8"] []
[2020-05-31T11:15:34.663592+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:15:34.664619+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:15:34.665756+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7,8]] []
[2020-05-31T11:15:34.980198+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0beba5"},"request_uri":"http://localhost:8000/_wdt/0beba5","method":"GET"} []
[2020-05-31T11:15:40.462833+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:15:40.466799+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:15:40.466896+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:40.466946+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:40.467147+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:15:40.471714+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["8"] []
[2020-05-31T11:15:40.485182+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:15:40.485531+02:00] doctrine.DEBUG: UPDATE college SET description = ? WHERE id = ? ["111111111",8] []
[2020-05-31T11:15:40.485932+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:15:40.633370+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:15:40.636077+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:15:40.636187+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:40.636266+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:40.644191+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:15:40.645265+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:15:40.646561+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7,8]] []
[2020-05-31T11:15:40.654721+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:15:40.905103+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7ef0a4"},"request_uri":"http://localhost:8000/_wdt/7ef0a4","method":"GET"} []
[2020-05-31T11:15:44.325724+02:00] request.INFO: Matched route "college_delete". {"route":"college_delete","route_parameters":{"_route":"college_delete","_controller":"App\\Controller\\CollegeController::delete","id":"8"},"request_uri":"http://localhost:8000/college/8","method":"DELETE"} []
[2020-05-31T11:15:44.329500+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:15:44.329612+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:44.329677+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:44.329860+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:15:44.332804+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["8"] []
[2020-05-31T11:15:44.334523+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:15:44.334758+02:00] doctrine.DEBUG: DELETE FROM college WHERE id = ? [8] []
[2020-05-31T11:15:44.335090+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:15:44.457946+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:15:44.460909+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:15:44.461028+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:44.461111+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:15:44.473327+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:15:44.474770+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:15:44.476030+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:15:44.488100+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:15:44.784031+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d1eab9"},"request_uri":"http://localhost:8000/_wdt/d1eab9","method":"GET"} []
[2020-05-31T11:18:24.055752+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:18:24.058499+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:18:24.058568+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:18:24.058626+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:18:24.067239+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:18:24.068119+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:18:24.068918+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:18:24.078960+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:18:24.327225+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2621df"},"request_uri":"http://localhost:8000/_wdt/2621df","method":"GET"} []
[2020-05-31T11:18:25.848309+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:18:25.851070+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:18:25.851165+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:18:25.851224+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:18:25.851420+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:18:25.855290+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T11:18:25.860340+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:18:25.861049+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:18:25.861803+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:18:26.162695+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5190e8"},"request_uri":"http://localhost:8000/_wdt/5190e8","method":"GET"} []
[2020-05-31T11:18:30.983232+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:18:30.986279+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:18:30.986353+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:18:30.986392+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:18:30.986554+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:18:30.990070+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T11:18:31.002782+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:18:31.003062+02:00] doctrine.DEBUG: UPDATE college SET description = ? WHERE id = ? ["2222222222",1] []
[2020-05-31T11:18:31.003433+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:18:31.148174+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:18:31.150884+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:18:31.150969+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:18:31.151019+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:18:31.160393+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:18:31.161672+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:18:31.162988+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:18:31.173196+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:18:31.462061+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c43774"},"request_uri":"http://localhost:8000/_wdt/c43774","method":"GET"} []
[2020-05-31T11:18:34.332132+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"GET"} []
[2020-05-31T11:18:34.334912+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:18:34.334991+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:18:34.335033+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:18:34.338575+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:19:04.603780+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"GET"} []
[2020-05-31T11:19:04.604367+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:19:04.604428+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:19:04.604469+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:19:04.607802+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:19:04.616124+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "college_edit" as such route does not exist.")." at /var/www/inventory/templates/college/show.html.twig line 27 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"college_edit\" as such route does not exist.\"). at /var/www/inventory/templates/college/show.html.twig:27)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"college_edit\" as such route does not exist. at /var/www/inventory/vendor/symfony/routing/Generator/CompiledUrlGenerator.php:50)"} []
[2020-05-31T11:19:04.691168+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:19:04.817108+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9fb274"},"request_uri":"http://localhost:8000/_wdt/9fb274","method":"GET"} []
[2020-05-31T11:19:24.152988+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"GET"} []
[2020-05-31T11:19:24.155551+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:19:24.155616+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:19:24.155673+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:19:24.159211+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:19:24.169742+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:19:24.491182+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ba57e"},"request_uri":"http://localhost:8000/_wdt/2ba57e","method":"GET"} []
[2020-05-31T11:19:33.531603+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:19:33.558159+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:19:33.558232+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:19:33.558271+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:19:33.684582+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:19:34.138464+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"318c15"},"request_uri":"http://localhost:8000/_wdt/318c15","method":"GET"} []
[2020-05-31T11:19:36.055404+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:19:36.058283+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:19:36.058384+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:19:36.058445+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:19:36.063110+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:19:36.355637+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"01c4bc"},"request_uri":"http://localhost:8000/_wdt/01c4bc","method":"GET"} []
[2020-05-31T11:19:36.610689+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:19:36.612569+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:19:36.612659+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:19:36.612721+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:19:36.623086+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:19:36.623734+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:19:36.624410+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:19:36.633197+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:19:36.940710+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"646062"},"request_uri":"http://localhost:8000/_wdt/646062","method":"GET"} []
[2020-05-31T11:19:38.795613+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"GET"} []
[2020-05-31T11:19:38.797538+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:19:38.797644+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:19:38.797703+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:19:38.801286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:19:38.805830+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:19:39.066818+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"67d3b0"},"request_uri":"http://localhost:8000/_wdt/67d3b0","method":"GET"} []
[2020-05-31T11:20:39.717607+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"GET"} []
[2020-05-31T11:20:39.719694+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:20:39.719760+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:20:39.719821+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:20:39.722605+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:20:39.732447+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:20:39.988338+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fadc47"},"request_uri":"http://localhost:8000/_wdt/fadc47","method":"GET"} []
[2020-05-31T11:20:41.954004+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:20:41.956251+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:20:41.956380+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:20:41.956424+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:20:41.963844+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:20:41.964546+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:20:41.965248+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:20:41.972925+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:20:42.237400+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd992a"},"request_uri":"http://localhost:8000/_wdt/fd992a","method":"GET"} []
[2020-05-31T11:20:43.978561+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"GET"} []
[2020-05-31T11:20:43.980514+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:20:43.980585+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:20:43.980628+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:20:43.983876+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:20:43.990078+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:20:44.269808+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"534675"},"request_uri":"http://localhost:8000/_wdt/534675","method":"GET"} []
[2020-05-31T11:20:46.975333+02:00] request.INFO: Matched route "college_delete". {"route":"college_delete","route_parameters":{"_route":"college_delete","_controller":"App\\Controller\\CollegeController::delete","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"DELETE"} []
[2020-05-31T11:20:46.977487+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:20:46.977552+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:20:46.977591+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:20:46.977747+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:20:46.980619+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:20:46.982265+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:20:46.982503+02:00] doctrine.DEBUG: DELETE FROM college WHERE id = ? [1] []
[2020-05-31T11:20:46.984752+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-05-31T11:20:47.067349+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException: "An exception occurred while executing 'DELETE FROM college WHERE id = ?' with params [1]:  SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`inventory`.`department`, CONSTRAINT `FK_CD1DE18A770124B2` FOREIGN KEY (`college_id`) REFERENCES `college` (`id`))" at /var/www/inventory/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 49 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException(code: 0): An exception occurred while executing 'DELETE FROM college WHERE id = ?' with params [1]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`inventory`.`department`, CONSTRAINT `FK_CD1DE18A770124B2` FOREIGN KEY (`college_id`) REFERENCES `college` (`id`)) at /var/www/inventory/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:49)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`inventory`.`department`, CONSTRAINT `FK_CD1DE18A770124B2` FOREIGN KEY (`college_id`) REFERENCES `college` (`id`)) at /var/www/inventory/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1451 Cannot delete or update a parent row: a foreign key constraint fails (`inventory`.`department`, CONSTRAINT `FK_CD1DE18A770124B2` FOREIGN KEY (`college_id`) REFERENCES `college` (`id`)) at /var/www/inventory/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-05-31T11:20:47.348328+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"70e5b3"},"request_uri":"http://localhost:8000/_wdt/70e5b3","method":"GET"} []
[2020-05-31T11:20:52.406983+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"GET"} []
[2020-05-31T11:20:52.410161+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:20:52.410266+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:20:52.410329+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:20:52.414031+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:20:52.420690+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:20:52.723857+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"09e06f"},"request_uri":"http://localhost:8000/_wdt/09e06f","method":"GET"} []
[2020-05-31T11:20:54.458527+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:20:54.462166+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:20:54.462295+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:20:54.462377+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:20:54.475285+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:20:54.476276+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:20:54.477185+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:20:54.489704+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:20:54.818699+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cc9866"},"request_uri":"http://localhost:8000/_wdt/cc9866","method":"GET"} []
[2020-05-31T11:21:31.909723+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:21:31.912094+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:21:31.912173+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:31.912216+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:31.924348+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:21:31.925062+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:21:31.925771+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:21:31.937563+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:21:32.253630+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ed288b"},"request_uri":"http://localhost:8000/_wdt/ed288b","method":"GET"} []
[2020-05-31T11:21:34.286269+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:21:34.291317+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:21:34.291433+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:34.291535+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:34.306608+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:21:34.307521+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:21:34.308513+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:21:34.318363+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:21:34.614718+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd0eca"},"request_uri":"http://localhost:8000/_wdt/fd0eca","method":"GET"} []
[2020-05-31T11:21:35.968071+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:21:35.970588+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:21:35.970673+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:35.970722+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:35.970919+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:21:35.974660+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T11:21:35.980887+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:21:35.981684+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:21:35.982667+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:21:36.292367+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6bcee6"},"request_uri":"http://localhost:8000/_wdt/6bcee6","method":"GET"} []
[2020-05-31T11:21:37.581571+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:21:37.584839+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:21:37.584930+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:37.584994+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:37.585209+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:21:37.589648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T11:21:37.630924+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:21:37.632974+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:21:37.633050+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:37.633089+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:37.640695+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:21:37.641287+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:21:37.641941+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6,7]] []
[2020-05-31T11:21:37.649641+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:21:38.037191+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"322e7e"},"request_uri":"http://localhost:8000/_wdt/322e7e","method":"GET"} []
[2020-05-31T11:21:42.062809+02:00] request.INFO: Matched route "college_delete". {"route":"college_delete","route_parameters":{"_route":"college_delete","_controller":"App\\Controller\\CollegeController::delete","id":"7"},"request_uri":"http://localhost:8000/college/7","method":"DELETE"} []
[2020-05-31T11:21:42.065196+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:21:42.065264+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:42.065322+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:42.065529+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:21:42.069972+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["7"] []
[2020-05-31T11:21:42.071734+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:21:42.071974+02:00] doctrine.DEBUG: DELETE FROM college WHERE id = ? [7] []
[2020-05-31T11:21:42.072272+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:21:42.215030+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:21:42.216552+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:21:42.216612+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:42.216656+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:42.224397+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:21:42.225369+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:21:42.226145+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6]] []
[2020-05-31T11:21:42.234222+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:21:42.522553+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"99109e"},"request_uri":"http://localhost:8000/_wdt/99109e","method":"GET"} []
[2020-05-31T11:21:43.751497+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"6"},"request_uri":"http://localhost:8000/college/6","method":"GET"} []
[2020-05-31T11:21:43.754842+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:21:43.754942+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:43.755000+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:43.758248+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["6"] []
[2020-05-31T11:21:43.765965+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:21:44.050620+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4eecfb"},"request_uri":"http://localhost:8000/_wdt/4eecfb","method":"GET"} []
[2020-05-31T11:21:46.535652+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:21:46.538064+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:21:46.538129+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:46.538167+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:46.546658+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:21:46.547414+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:21:46.548242+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,6]] []
[2020-05-31T11:21:46.556527+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:21:46.813609+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b863d2"},"request_uri":"http://localhost:8000/_wdt/b863d2","method":"GET"} []
[2020-05-31T11:21:49.238719+02:00] request.INFO: Matched route "college_delete". {"route":"college_delete","route_parameters":{"_route":"college_delete","_controller":"App\\Controller\\CollegeController::delete","id":"6"},"request_uri":"http://localhost:8000/college/6","method":"DELETE"} []
[2020-05-31T11:21:49.242757+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:21:49.242829+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:49.242870+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:49.243018+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:21:49.247253+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["6"] []
[2020-05-31T11:21:49.248948+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:21:49.249186+02:00] doctrine.DEBUG: DELETE FROM college WHERE id = ? [6] []
[2020-05-31T11:21:49.249561+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:21:49.374839+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:21:49.378381+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:21:49.378489+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:49.378556+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:21:49.392026+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:21:49.393167+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:21:49.394196+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:21:49.403207+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:21:49.657869+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"85d781"},"request_uri":"http://localhost:8000/_wdt/85d781","method":"GET"} []
[2020-05-31T11:23:09.995948+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:23:09.999097+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:09.999174+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:09.999232+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:10.007946+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:23:10.008686+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:23:10.009303+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:23:10.019261+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:10.295462+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"851d6a"},"request_uri":"http://localhost:8000/_wdt/851d6a","method":"GET"} []
[2020-05-31T11:23:11.152400+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:23:11.154242+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:11.154315+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:11.154358+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:11.161232+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:23:11.161881+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:23:11.162438+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:23:11.172107+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:11.490197+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba9b22"},"request_uri":"http://localhost:8000/_wdt/ba9b22","method":"GET"} []
[2020-05-31T11:23:12.125138+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:23:12.128329+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:12.128412+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:12.128463+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:12.128650+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:12.134419+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T11:23:12.141129+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:23:12.141749+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:23:12.142479+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:23:12.413030+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"449449"},"request_uri":"http://localhost:8000/_wdt/449449","method":"GET"} []
[2020-05-31T11:23:13.572393+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:23:13.574502+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:13.574599+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:13.574690+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:13.574842+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:13.577874+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T11:23:13.618530+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:23:13.621006+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:13.621084+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:13.621138+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:13.627444+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:23:13.628208+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:23:13.628898+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:23:13.638307+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:13.891435+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6cdc59"},"request_uri":"http://localhost:8000/_wdt/6cdc59","method":"GET"} []
[2020-05-31T11:23:16.430088+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"GET"} []
[2020-05-31T11:23:16.437152+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:16.437412+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:16.437599+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:16.444885+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:23:16.455735+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:16.766501+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e69480"},"request_uri":"http://localhost:8000/_wdt/e69480","method":"GET"} []
[2020-05-31T11:23:18.129999+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:23:18.132745+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:18.132873+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:18.132961+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:18.142486+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:23:18.143261+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:23:18.143979+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:23:18.152882+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:18.468939+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"394447"},"request_uri":"http://localhost:8000/_wdt/394447","method":"GET"} []
[2020-05-31T11:23:19.279785+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"4"},"request_uri":"http://localhost:8000/college/4","method":"GET"} []
[2020-05-31T11:23:19.282683+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:19.282768+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:19.282824+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:19.286623+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["4"] []
[2020-05-31T11:23:19.291651+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:19.589615+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"55329c"},"request_uri":"http://localhost:8000/_wdt/55329c","method":"GET"} []
[2020-05-31T11:23:21.220846+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:23:21.223380+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:21.223459+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:21.223516+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:21.230623+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:23:21.231205+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:23:21.231814+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4]] []
[2020-05-31T11:23:21.239673+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:21.539879+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"969e8d"},"request_uri":"http://localhost:8000/_wdt/969e8d","method":"GET"} []
[2020-05-31T11:23:23.508767+02:00] request.INFO: Matched route "college_delete". {"route":"college_delete","route_parameters":{"_route":"college_delete","_controller":"App\\Controller\\CollegeController::delete","id":"4"},"request_uri":"http://localhost:8000/college/4","method":"DELETE"} []
[2020-05-31T11:23:23.511107+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:23.511177+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:23.511216+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:23.511383+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:23.514588+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["4"] []
[2020-05-31T11:23:23.516188+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:23:23.516533+02:00] doctrine.DEBUG: DELETE FROM college WHERE id = ? [4] []
[2020-05-31T11:23:23.517037+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:23:23.645040+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:23:23.646788+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:23.646882+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:23.646938+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:23.656595+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:23:23.657718+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:23:23.658759+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3]] []
[2020-05-31T11:23:23.668980+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:23.951670+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3d5055"},"request_uri":"http://localhost:8000/_wdt/3d5055","method":"GET"} []
[2020-05-31T11:23:40.813150+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:23:40.817069+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:40.817197+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:40.817279+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:40.833229+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:23:40.834643+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:23:40.835974+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3]] []
[2020-05-31T11:23:40.852190+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:41.121832+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4c07b2"},"request_uri":"http://localhost:8000/_wdt/4c07b2","method":"GET"} []
[2020-05-31T11:23:42.800480+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:23:42.802927+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:42.803002+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:42.803045+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:42.803166+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:42.806374+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T11:23:42.811896+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:23:42.812613+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:23:42.813434+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3]] []
[2020-05-31T11:23:43.103658+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b646d3"},"request_uri":"http://localhost:8000/_wdt/b646d3","method":"GET"} []
[2020-05-31T11:23:44.609420+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:23:44.611707+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:44.611800+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:44.611852+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:44.612051+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:44.615733+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T11:23:44.660103+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:23:44.662442+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:44.662526+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:44.662584+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:44.670980+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:23:44.671729+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:23:44.672634+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3]] []
[2020-05-31T11:23:44.680305+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:44.933962+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e65150"},"request_uri":"http://localhost:8000/_wdt/e65150","method":"GET"} []
[2020-05-31T11:23:46.242084+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"GET"} []
[2020-05-31T11:23:46.246883+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:23:46.246999+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:46.247090+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:23:46.251314+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:23:46.257764+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:23:46.509526+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"32acb7"},"request_uri":"http://localhost:8000/_wdt/32acb7","method":"GET"} []
[2020-05-31T11:24:17.159711+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"GET"} []
[2020-05-31T11:24:17.163607+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:24:17.163733+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:17.163846+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:17.169503+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:24:17.182592+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:24:17.503142+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b4a729"},"request_uri":"http://localhost:8000/_wdt/b4a729","method":"GET"} []
[2020-05-31T11:24:25.722609+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:24:25.726440+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:24:25.726541+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:25.726603+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:25.726841+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:24:25.752625+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:24:25.753468+02:00] doctrine.DEBUG: INSERT INTO college (name, description) VALUES (?, ?) {"1":"xxxxx","2":null} []
[2020-05-31T11:24:25.754103+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:24:25.911791+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:24:25.914592+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:24:25.914727+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:25.914806+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:25.924348+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:24:25.925424+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:24:25.926634+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:24:25.936248+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:24:26.194878+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0fbb4c"},"request_uri":"http://localhost:8000/_wdt/0fbb4c","method":"GET"} []
[2020-05-31T11:24:33.967300+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=xx","method":"GET"} []
[2020-05-31T11:24:33.970316+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:24:33.970411+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:33.970462+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:33.980899+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ WHERE c0_.name LIKE '%xx%' [] []
[2020-05-31T11:24:33.982694+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ WHERE c0_.name LIKE '%xx%' ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:24:33.983749+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.name LIKE '%xx%' AND c0_.id IN (?) ORDER BY c0_.id ASC [[9]] []
[2020-05-31T11:24:33.993192+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:24:34.264446+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"85230b"},"request_uri":"http://localhost:8000/_wdt/85230b","method":"GET"} []
[2020-05-31T11:24:36.657298+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/?search=xx","method":"GET"} []
[2020-05-31T11:24:36.663694+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:24:36.663932+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:36.664057+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:36.679792+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ WHERE c0_.name LIKE '%xx%' [] []
[2020-05-31T11:24:36.681424+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ WHERE c0_.name LIKE '%xx%' ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:24:36.682859+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.name LIKE '%xx%' AND c0_.id IN (?) ORDER BY c0_.id ASC [[9]] []
[2020-05-31T11:24:36.698839+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:24:37.010495+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca8271"},"request_uri":"http://localhost:8000/_wdt/ca8271","method":"GET"} []
[2020-05-31T11:24:39.471561+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:24:39.474080+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:24:39.474156+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:39.474214+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:39.482671+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:24:39.483443+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:24:39.484259+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:24:39.491852+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:24:39.758769+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8ef2ad"},"request_uri":"http://localhost:8000/_wdt/8ef2ad","method":"GET"} []
[2020-05-31T11:24:56.674488+02:00] request.INFO: Matched route "college_show". {"route":"college_show","route_parameters":{"_route":"college_show","_controller":"App\\Controller\\CollegeController::show","id":"1"},"request_uri":"http://localhost:8000/college/1","method":"GET"} []
[2020-05-31T11:24:56.677213+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:24:56.677301+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:56.677367+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:24:56.680377+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:24:56.685799+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:24:56.941799+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8d8403"},"request_uri":"http://localhost:8000/_wdt/8d8403","method":"GET"} []
[2020-05-31T11:25:03.569366+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T11:25:03.571604+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:25:03.571673+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:25:03.571732+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:25:03.575427+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T11:25:03.581601+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:25:03.874001+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ddfaa4"},"request_uri":"http://localhost:8000/_wdt/ddfaa4","method":"GET"} []
[2020-05-31T11:25:06.832622+02:00] request.INFO: Matched route "department_new". {"route":"department_new","route_parameters":{"_route":"department_new","_controller":"App\\Controller\\DepartmentController::new"},"request_uri":"http://localhost:8000/department/new","method":"GET"} []
[2020-05-31T11:25:06.835428+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:25:06.835500+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:25:06.835544+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:25:06.853457+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T11:25:06.864461+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:25:07.129947+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cdc953"},"request_uri":"http://localhost:8000/_wdt/cdc953","method":"GET"} []
[2020-05-31T11:25:34.003054+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:25:34.005480+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:25:34.005549+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:25:34.005590+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:25:34.009889+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:25:34.014551+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:25:34.015284+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:25:34.016333+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:25:34.016635+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:25:34.018706+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:25:34.290643+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"89cf43"},"request_uri":"http://localhost:8000/_wdt/89cf43","method":"GET"} []
[2020-05-31T11:25:47.243587+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"1"},"request_uri":"http://localhost:8000/user/1/edit","method":"GET"} []
[2020-05-31T11:25:47.246845+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:25:47.246945+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:25:47.247010+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:25:47.251529+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["1"] []
[2020-05-31T11:25:47.280041+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:25:47.281396+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:25:47.282773+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T11:25:47.283537+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-05-31T11:25:47.293185+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:25:47.617229+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6abad0"},"request_uri":"http://localhost:8000/_wdt/6abad0","method":"GET"} []
[2020-05-31T11:25:50.438904+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:25:50.442096+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:25:50.442175+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:25:50.442237+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:25:50.446862+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:25:50.451168+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:25:50.451893+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:25:50.452898+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:25:50.453286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:25:50.455739+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:25:50.739398+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"801f6a"},"request_uri":"http://localhost:8000/_wdt/801f6a","method":"GET"} []
[2020-05-31T11:25:52.980289+02:00] request.INFO: Matched route "user_new". {"route":"user_new","route_parameters":{"_route":"user_new","_controller":"App\\Controller\\UserController::new"},"request_uri":"http://localhost:8000/user/new","method":"GET"} []
[2020-05-31T11:25:52.981920+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:25:52.981985+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:25:52.982025+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:25:52.991955+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T11:25:52.993968+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-05-31T11:25:53.001262+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:25:53.275516+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6864c4"},"request_uri":"http://localhost:8000/_wdt/6864c4","method":"GET"} []
[2020-05-31T11:27:16.620172+02:00] request.INFO: Matched route "user_new". {"route":"user_new","route_parameters":{"_route":"user_new","_controller":"App\\Controller\\UserController::new"},"request_uri":"http://localhost:8000/user/new","method":"GET"} []
[2020-05-31T11:27:16.624636+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:27:16.624773+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:16.624858+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:16.645752+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T11:27:16.649975+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-05-31T11:27:16.658929+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:27:16.962324+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7531a5"},"request_uri":"http://localhost:8000/_wdt/7531a5","method":"GET"} []
[2020-05-31T11:27:37.154035+02:00] request.INFO: Matched route "user_new". {"route":"user_new","route_parameters":{"_route":"user_new","_controller":"App\\Controller\\UserController::new"},"request_uri":"http://localhost:8000/user/new","method":"POST"} []
[2020-05-31T11:27:37.157209+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:27:37.157303+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:37.157355+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:37.157555+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:27:37.172665+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ WHERE d0_.id IN (?) [["1"]] []
[2020-05-31T11:27:37.174786+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ WHERE u0_.id IN (?) [["2"]] []
[2020-05-31T11:27:37.433733+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:27:37.434131+02:00] doctrine.DEBUG: INSERT INTO user (username, roles, password, first_name, middle_name, last_name, department_id, user_type_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"asm","2":[],"3":"$argon2id$v=19$m=65536,t=4 [...]","4":"xx","5":"xx","6":"xx","7":1,"8":2} []
[2020-05-31T11:27:37.434838+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:27:37.529799+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:27:37.531875+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:27:37.531987+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:37.532027+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:37.536299+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:27:37.542943+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:27:37.543907+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:27:37.545748+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:27:37.546215+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:27:37.548471+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:27:37.846075+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d737ba"},"request_uri":"http://localhost:8000/_wdt/d737ba","method":"GET"} []
[2020-05-31T11:27:43.302636+02:00] request.INFO: Matched route "user_show". {"route":"user_show","route_parameters":{"_route":"user_show","_controller":"App\\Controller\\UserController::show","id":"3"},"request_uri":"http://localhost:8000/user/3","method":"GET"} []
[2020-05-31T11:27:43.305390+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:27:43.305465+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:43.305508+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:43.309896+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["3"] []
[2020-05-31T11:27:43.316350+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:27:43.317413+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:27:43.319847+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:27:43.617298+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a37864"},"request_uri":"http://localhost:8000/_wdt/a37864","method":"GET"} []
[2020-05-31T11:27:50.290924+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"3"},"request_uri":"http://localhost:8000/user/3/edit","method":"GET"} []
[2020-05-31T11:27:50.293496+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:27:50.293570+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:50.293611+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:50.297984+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["3"] []
[2020-05-31T11:27:50.307943+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:27:50.309103+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:27:50.310540+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T11:27:50.311330+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-05-31T11:27:50.319188+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:27:50.584259+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1995d4"},"request_uri":"http://localhost:8000/_wdt/1995d4","method":"GET"} []
[2020-05-31T11:27:58.743409+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"3"},"request_uri":"http://localhost:8000/user/3/edit","method":"POST"} []
[2020-05-31T11:27:58.746239+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:27:58.746327+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:58.746398+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:58.746645+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:27:58.751014+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["3"] []
[2020-05-31T11:27:58.761691+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:27:58.763184+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:27:58.765587+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ WHERE d0_.id IN (?) [["1"]] []
[2020-05-31T11:27:58.766434+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ WHERE u0_.id IN (?) [["2"]] []
[2020-05-31T11:27:58.804372+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:27:58.806044+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:27:58.806136+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:58.806175+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:27:58.811036+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:27:58.815641+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:27:58.816475+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:27:58.817825+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:27:58.818142+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:27:58.820094+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:27:59.084116+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b729e5"},"request_uri":"http://localhost:8000/_wdt/b729e5","method":"GET"} []
[2020-05-31T11:28:01.152773+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"3"},"request_uri":"http://localhost:8000/user/3/edit","method":"GET"} []
[2020-05-31T11:28:01.156036+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:28:01.156139+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:01.156205+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:01.160903+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["3"] []
[2020-05-31T11:28:01.170062+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:01.171212+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:01.172728+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T11:28:01.173404+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-05-31T11:28:01.181245+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:28:01.490870+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c40fcb"},"request_uri":"http://localhost:8000/_wdt/c40fcb","method":"GET"} []
[2020-05-31T11:28:15.123867+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"3"},"request_uri":"http://localhost:8000/user/3/edit","method":"POST"} []
[2020-05-31T11:28:15.126676+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:28:15.126745+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:15.126803+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:15.127005+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:28:15.131382+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["3"] []
[2020-05-31T11:28:15.141045+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:15.142146+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:15.143798+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ WHERE d0_.id IN (?) [["1"]] []
[2020-05-31T11:28:15.144351+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ WHERE u0_.id IN (?) [["2"]] []
[2020-05-31T11:28:15.152408+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:28:15.152666+02:00] doctrine.DEBUG: UPDATE user SET password = ? WHERE id = ? ["as",3] []
[2020-05-31T11:28:15.153007+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:28:15.262243+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:28:15.263846+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:28:15.263920+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:15.263968+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:15.268206+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:28:15.273944+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:15.275166+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:15.276555+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:15.276873+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:15.278889+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:28:15.578156+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"840ecd"},"request_uri":"http://localhost:8000/_wdt/840ecd","method":"GET"} []
[2020-05-31T11:28:17.164193+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"3"},"request_uri":"http://localhost:8000/user/3/edit","method":"GET"} []
[2020-05-31T11:28:17.166870+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:28:17.167020+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:17.167162+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:17.170791+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["3"] []
[2020-05-31T11:28:17.178848+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:17.180428+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:17.181696+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T11:28:17.182310+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-05-31T11:28:17.189328+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:28:17.450997+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b5e004"},"request_uri":"http://localhost:8000/_wdt/b5e004","method":"GET"} []
[2020-05-31T11:28:19.284243+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"3"},"request_uri":"http://localhost:8000/user/3/edit","method":"POST"} []
[2020-05-31T11:28:19.286601+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:28:19.286664+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:19.286713+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:19.286864+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:28:19.290617+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["3"] []
[2020-05-31T11:28:19.300405+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:19.301510+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:19.303314+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ WHERE d0_.id IN (?) [["1"]] []
[2020-05-31T11:28:19.303933+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ WHERE u0_.id IN (?) [["2"]] []
[2020-05-31T11:28:19.338950+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:28:19.340539+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:28:19.340602+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:19.340641+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:19.345197+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:28:19.349427+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:19.350075+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:19.351030+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:19.351276+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:19.353080+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:28:19.660214+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f14204"},"request_uri":"http://localhost:8000/_wdt/f14204","method":"GET"} []
[2020-05-31T11:28:20.956612+02:00] request.INFO: Matched route "user_edit". {"route":"user_edit","route_parameters":{"_route":"user_edit","_controller":"App\\Controller\\UserController::edit","id":"3"},"request_uri":"http://localhost:8000/user/3/edit","method":"GET"} []
[2020-05-31T11:28:20.958447+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:28:20.958682+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:20.958769+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:20.963128+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["3"] []
[2020-05-31T11:28:20.970672+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:20.971804+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:20.972980+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ [] []
[2020-05-31T11:28:20.973632+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-05-31T11:28:20.981442+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:28:21.273327+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c2a69b"},"request_uri":"http://localhost:8000/_wdt/c2a69b","method":"GET"} []
[2020-05-31T11:28:30.249647+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:28:30.252826+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:28:30.252912+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:30.252965+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:30.258369+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:28:30.264377+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:30.265139+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:30.266173+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:30.266461+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:30.268636+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:28:30.554459+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a91fe8"},"request_uri":"http://localhost:8000/_wdt/a91fe8","method":"GET"} []
[2020-05-31T11:28:32.708561+02:00] request.INFO: Matched route "user_show". {"route":"user_show","route_parameters":{"_route":"user_show","_controller":"App\\Controller\\UserController::show","id":"3"},"request_uri":"http://localhost:8000/user/3","method":"GET"} []
[2020-05-31T11:28:32.712094+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:28:32.712249+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:32.712374+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:32.718709+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["3"] []
[2020-05-31T11:28:32.726256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:32.727608+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:32.730622+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:28:32.985019+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aabb57"},"request_uri":"http://localhost:8000/_wdt/aabb57","method":"GET"} []
[2020-05-31T11:28:34.966637+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:28:34.971155+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:28:34.971267+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:34.971331+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:34.978102+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:28:34.984031+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:34.985120+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:28:34.986958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:34.987291+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:28:34.989739+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:28:35.285716+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8a7dc5"},"request_uri":"http://localhost:8000/_wdt/8a7dc5","method":"GET"} []
[2020-05-31T11:28:53.477681+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:28:53.481698+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:28:53.481813+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:53.481894+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:28:53.493100+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:28:53.494030+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:28:53.495063+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:28:53.503998+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:28:53.761826+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"75b6b7"},"request_uri":"http://localhost:8000/_wdt/75b6b7","method":"GET"} []
[2020-05-31T11:29:03.102798+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:29:03.105500+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:29:03.105578+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:29:03.105619+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:29:03.113332+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:29:03.114049+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:29:03.114657+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:29:03.124385+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:29:03.426915+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca9396"},"request_uri":"http://localhost:8000/_wdt/ca9396","method":"GET"} []
[2020-05-31T11:30:29.315762+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:30:29.319970+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:30:29.320127+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:30:29.320247+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:30:29.331357+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:30:29.332259+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:30:29.333024+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:30:29.349115+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:30:29.631849+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6de4ce"},"request_uri":"http://localhost:8000/_wdt/6de4ce","method":"GET"} []
[2020-05-31T11:30:32.726146+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /" (from "http://localhost:8000/college/")" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" (from \"http://localhost:8000/college/\") at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-05-31T11:30:32.808065+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"47ec43"},"request_uri":"http://localhost:8000/_wdt/47ec43","method":"GET"} []
[2020-05-31T11:30:34.712586+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6de4ce"},"request_uri":"http://localhost:8000/_wdt/6de4ce","method":"GET"} []
[2020-05-31T11:30:55.775015+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:30:55.786883+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:30:55.787256+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:30:55.787616+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:30:55.814076+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:30:55.815339+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:30:55.816434+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:30:55.837418+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:30:56.089658+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"43c349"},"request_uri":"http://localhost:8000/_wdt/43c349","method":"GET"} []
[2020-05-31T11:31:09.595496+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:31:09.599633+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:31:09.599743+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:09.599834+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:09.611423+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:31:09.612305+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:31:09.613201+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:31:09.630323+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:31:10.022963+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"71fa22"},"request_uri":"http://localhost:8000/_wdt/71fa22","method":"GET"} []
[2020-05-31T11:31:22.495727+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:31:22.500763+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:31:22.500898+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:22.501029+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:22.512341+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:31:22.843795+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c8ac7d"},"request_uri":"http://localhost:8000/_wdt/c8ac7d","method":"GET"} []
[2020-05-31T11:31:28.322432+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:31:28.330054+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:31:28.330247+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:28.330366+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:28.339934+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:31:28.599036+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"54f375"},"request_uri":"http://localhost:8000/_wdt/54f375","method":"GET"} []
[2020-05-31T11:31:33.163691+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /" (from "http://localhost:8000/home")" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" (from \"http://localhost:8000/home\") at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-05-31T11:31:33.249398+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3fc5f1"},"request_uri":"http://localhost:8000/_wdt/3fc5f1","method":"GET"} []
[2020-05-31T11:31:35.004141+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"54f375"},"request_uri":"http://localhost:8000/_wdt/54f375","method":"GET"} []
[2020-05-31T11:31:47.582293+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:31:47.586618+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:31:47.586733+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:47.586822+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:47.604552+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:31:47.870069+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"881be4"},"request_uri":"http://localhost:8000/_wdt/881be4","method":"GET"} []
[2020-05-31T11:31:48.963553+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:31:48.965876+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:31:48.965969+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:48.966046+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:48.972529+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:31:49.301204+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8519b7"},"request_uri":"http://localhost:8000/_wdt/8519b7","method":"GET"} []
[2020-05-31T11:31:51.592857+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:31:51.601349+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:31:51.601490+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:51.601574+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:51.614104+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:31:51.897266+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc165e"},"request_uri":"http://localhost:8000/_wdt/fc165e","method":"GET"} []
[2020-05-31T11:31:52.272990+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:31:52.276191+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:31:52.276294+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:52.276363+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:52.281963+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:31:52.561097+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8760e7"},"request_uri":"http://localhost:8000/_wdt/8760e7","method":"GET"} []
[2020-05-31T11:31:53.341856+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:31:53.348673+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:31:53.348964+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:53.349137+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:53.376478+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:31:53.378232+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:31:53.380089+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:31:53.396547+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:31:53.729270+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"50df5f"},"request_uri":"http://localhost:8000/_wdt/50df5f","method":"GET"} []
[2020-05-31T11:31:54.541831+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:31:54.546229+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:31:54.546358+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:54.546435+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:31:54.553025+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:31:54.864962+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1316f2"},"request_uri":"http://localhost:8000/_wdt/1316f2","method":"GET"} []
[2020-05-31T11:32:07.490686+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:32:07.492931+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:07.493007+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:07.493048+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:07.497993+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:07.778591+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"619664"},"request_uri":"http://localhost:8000/_wdt/619664","method":"GET"} []
[2020-05-31T11:32:08.582379+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:32:08.584317+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:08.584425+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:08.584493+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:08.589293+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:08.885064+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dcd646"},"request_uri":"http://localhost:8000/_wdt/dcd646","method":"GET"} []
[2020-05-31T11:32:10.036204+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:32:10.039613+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:10.039719+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:10.039829+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:10.046054+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:10.371618+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"48b56f"},"request_uri":"http://localhost:8000/_wdt/48b56f","method":"GET"} []
[2020-05-31T11:32:10.802389+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:32:10.805107+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:10.805211+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:10.805275+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:10.812103+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:11.138783+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d46405"},"request_uri":"http://localhost:8000/_wdt/d46405","method":"GET"} []
[2020-05-31T11:32:11.741635+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:32:11.749144+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:11.749399+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:11.749649+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:11.763203+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:12.033056+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"08cdc3"},"request_uri":"http://localhost:8000/_wdt/08cdc3","method":"GET"} []
[2020-05-31T11:32:12.750112+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:32:12.752308+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:12.752427+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:12.752492+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:12.761421+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:32:12.762073+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:32:12.762679+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:32:12.772052+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:13.074315+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4d371e"},"request_uri":"http://localhost:8000/_wdt/4d371e","method":"GET"} []
[2020-05-31T11:32:18.114862+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T11:32:18.120256+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:18.120397+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:18.120482+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:18.127736+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T11:32:18.141875+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:18.519635+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c39c3d"},"request_uri":"http://localhost:8000/_wdt/c39c3d","method":"GET"} []
[2020-05-31T11:32:19.985889+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-31T11:32:19.988855+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:19.988976+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:19.989055+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:19.994561+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-31T11:32:20.005328+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:20.336258+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"29a6c0"},"request_uri":"http://localhost:8000/_wdt/29a6c0","method":"GET"} []
[2020-05-31T11:32:21.356818+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T11:32:21.360732+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:21.360823+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:21.360882+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:21.364976+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T11:32:21.369786+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:21.670454+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b16c59"},"request_uri":"http://localhost:8000/_wdt/b16c59","method":"GET"} []
[2020-05-31T11:32:22.796624+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-31T11:32:22.799430+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:22.799542+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:22.799614+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:22.804589+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-31T11:32:22.813190+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:23.075400+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c512f5"},"request_uri":"http://localhost:8000/_wdt/c512f5","method":"GET"} []
[2020-05-31T11:32:23.818334+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-31T11:32:23.820106+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:23.820180+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:23.820224+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:23.823427+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-31T11:32:23.827643+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:24.097528+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"33e91f"},"request_uri":"http://localhost:8000/_wdt/33e91f","method":"GET"} []
[2020-05-31T11:32:24.722928+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T11:32:24.728562+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:24.728750+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:24.728890+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:24.741701+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 [] []
[2020-05-31T11:32:24.755088+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:25.052136+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ae8b03"},"request_uri":"http://localhost:8000/_wdt/ae8b03","method":"GET"} []
[2020-05-31T11:32:29.488189+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:32:29.490600+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:32:29.490675+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:29.490726+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:32:29.495343+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:32:29.500588+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:32:29.501903+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:32:29.502961+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:32:29.503260+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:32:29.505691+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:32:29.873063+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e660d3"},"request_uri":"http://localhost:8000/_wdt/e660d3","method":"GET"} []
[2020-05-31T11:33:24.428575+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:33:24.437312+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:33:24.437514+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:24.437636+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:24.448508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:33:24.476399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:33:24.477850+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:33:24.479756+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:33:24.480336+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:33:24.484832+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:33:24.760264+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d59bf5"},"request_uri":"http://localhost:8000/_wdt/d59bf5","method":"GET"} []
[2020-05-31T11:33:26.375848+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-05-31T11:33:26.378205+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:33:26.378339+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:26.378404+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:26.385541+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-05-31T11:33:26.394090+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-05-31T11:33:26.395296+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [1] []
[2020-05-31T11:33:26.397325+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-05-31T11:33:26.397880+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 WHERE t0.id = ? [2] []
[2020-05-31T11:33:26.401790+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:33:26.660685+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c1d8d3"},"request_uri":"http://localhost:8000/_wdt/c1d8d3","method":"GET"} []
[2020-05-31T11:33:28.396601+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:33:28.398981+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:33:28.399049+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:28.399089+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:28.403938+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:33:28.703815+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"db92a5"},"request_uri":"http://localhost:8000/_wdt/db92a5","method":"GET"} []
[2020-05-31T11:33:30.109634+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:33:30.113541+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:33:30.113656+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:30.113744+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:30.119954+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:33:30.394524+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e24a24"},"request_uri":"http://localhost:8000/_wdt/e24a24","method":"GET"} []
[2020-05-31T11:33:32.314120+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T11:33:32.316574+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:33:32.316652+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:32.316692+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:32.321826+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:33:32.656256+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dde25d"},"request_uri":"http://localhost:8000/_wdt/dde25d","method":"GET"} []
[2020-05-31T11:33:33.660103+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:33:33.661861+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:33:33.661933+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:33.661985+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:33.671854+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:33:33.672648+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:33:33.673433+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:33:33.682445+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:33:33.994487+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d1f8e9"},"request_uri":"http://localhost:8000/_wdt/d1f8e9","method":"GET"} []
[2020-05-31T11:33:41.232705+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T11:33:41.235258+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:33:41.235333+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:41.235389+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:33:41.239576+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T11:33:41.246478+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:33:41.550770+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aae6c9"},"request_uri":"http://localhost:8000/_wdt/aae6c9","method":"GET"} []
[2020-05-31T11:34:20.430555+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T11:34:20.432948+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:34:20.433020+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:34:20.433061+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:34:20.437105+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T11:34:20.443552+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:34:20.716518+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"58c120"},"request_uri":"http://localhost:8000/_wdt/58c120","method":"GET"} []
[2020-05-31T11:35:06.379325+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T11:35:06.382117+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:35:06.382206+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:06.382258+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:06.386849+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T11:35:06.393723+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:35:06.744882+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"866cdb"},"request_uri":"http://localhost:8000/_wdt/866cdb","method":"GET"} []
[2020-05-31T11:35:10.800612+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T11:35:10.804028+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:35:10.804174+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:10.804402+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:10.808646+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.college_id AS college_id_3 FROM department t0 [] []
[2020-05-31T11:35:10.814295+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:35:11.061598+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1f14d6"},"request_uri":"http://localhost:8000/_wdt/1f14d6","method":"GET"} []
[2020-05-31T11:35:39.324764+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:35:39.328887+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:35:39.328985+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:39.329056+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:39.338831+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:35:39.339631+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:35:39.340415+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:35:39.348289+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:35:39.628715+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"baa9d0"},"request_uri":"http://localhost:8000/_wdt/baa9d0","method":"GET"} []
[2020-05-31T11:35:42.316170+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:35:42.319354+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:35:42.319440+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:42.319498+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:42.319731+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:35:42.323787+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T11:35:42.329969+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:35:42.330728+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:35:42.331569+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:35:42.665454+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b226ff"},"request_uri":"http://localhost:8000/_wdt/b226ff","method":"GET"} []
[2020-05-31T11:35:47.915388+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:35:47.918208+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:35:47.918313+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:47.918397+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:47.918624+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:35:47.922357+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T11:35:47.935263+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:35:47.935552+02:00] doctrine.DEBUG: UPDATE college SET description = ? WHERE id = ? ["natural",1] []
[2020-05-31T11:35:47.935984+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:35:48.119784+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:35:48.122359+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:35:48.122461+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:48.122523+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:48.131902+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:35:48.133833+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:35:48.135104+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:35:48.143606+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:35:48.420326+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ddfd5"},"request_uri":"http://localhost:8000/_wdt/2ddfd5","method":"GET"} []
[2020-05-31T11:35:49.944664+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:35:49.946470+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:35:49.946559+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:49.946622+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:49.947007+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:35:49.951136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["9"] []
[2020-05-31T11:35:49.955935+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:35:49.956504+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:35:49.957036+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:35:50.215034+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7fe64b"},"request_uri":"http://localhost:8000/_wdt/7fe64b","method":"GET"} []
[2020-05-31T11:35:55.238085+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T11:35:55.243336+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:35:55.243491+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:55.243576+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:55.243892+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:35:55.250574+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["9"] []
[2020-05-31T11:35:55.266927+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T11:35:55.267217+02:00] doctrine.DEBUG: UPDATE college SET name = ? WHERE id = ? ["others",9] []
[2020-05-31T11:35:55.267622+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T11:35:55.325780+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:35:55.327467+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:35:55.327544+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:55.327599+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:35:55.335300+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:35:55.336556+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:35:55.337615+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:35:55.346834+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:35:55.642173+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"768b66"},"request_uri":"http://localhost:8000/_wdt/768b66","method":"GET"} []
[2020-05-31T11:36:02.201952+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:36:02.204037+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:36:02.204109+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:36:02.204150+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:36:02.212019+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:36:02.212717+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:36:02.213579+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:36:02.221916+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:36:02.539328+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9bcc5b"},"request_uri":"http://localhost:8000/_wdt/9bcc5b","method":"GET"} []
[2020-05-31T11:36:07.852864+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:36:07.855463+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:36:07.855540+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:36:07.855582+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:36:07.863222+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:36:07.863907+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:36:07.864509+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:36:07.872998+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:36:08.116492+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8d3f31"},"request_uri":"http://localhost:8000/_wdt/8d3f31","method":"GET"} []
[2020-05-31T11:36:21.566276+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:36:21.569401+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:36:21.569480+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:36:21.569522+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:36:21.576877+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:36:21.577502+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:36:21.578068+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:36:21.588663+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:36:21.848643+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"976f66"},"request_uri":"http://localhost:8000/_wdt/976f66","method":"GET"} []
[2020-05-31T11:36:28.230778+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T11:36:28.233081+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T11:36:28.233175+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:36:28.233238+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T11:36:28.241629+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T11:36:28.242264+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T11:36:28.242836+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T11:36:28.250304+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T11:36:28.526296+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4dea08"},"request_uri":"http://localhost:8000/_wdt/4dea08","method":"GET"} []
[2020-05-31T12:05:58.710997+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:05:58.714086+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:05:58.714180+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:05:58.714242+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:05:58.725020+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:05:58.726246+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:05:58.726990+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:05:58.737399+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:05:59.088775+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3a6b26"},"request_uri":"http://localhost:8000/_wdt/3a6b26","method":"GET"} []
[2020-05-31T12:06:05.902636+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /departement"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /departement\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/departement/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-05-31T12:06:06.029292+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d1371b"},"request_uri":"http://localhost:8000/_wdt/d1371b","method":"GET"} []
[2020-05-31T12:06:13.822126+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/department/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"department_index"},"request_uri":"http://localhost:8000/department","method":"GET"} []
[2020-05-31T12:06:13.824305+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:06:13.829377+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:06:13.829460+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:06:13.833378+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:06:13.842753+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:06:13.844841+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:06:13.844917+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:06:13.844975+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:06:13.856422+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:06:13.857453+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:06:13.858300+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.college_id AS college_id_2 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2]] []
[2020-05-31T12:06:13.861620+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:06:13.878605+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "description" nor one of the methods "description()", "getdescription()"/"isdescription()"/"hasdescription()" or "__call()" exist and have public access in class "Symfony\Component\Form\FormView"." at /var/www/inventory/templates/department/_form.html.twig line 23 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"description\" nor one of the methods \"description()\", \"getdescription()\"/\"isdescription()\"/\"hasdescription()\" or \"__call()\" exist and have public access in class \"Symfony\\Component\\Form\\FormView\". at /var/www/inventory/templates/department/_form.html.twig:23)"} []
[2020-05-31T12:06:13.924942+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:06:14.033431+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f31d0d"},"request_uri":"http://localhost:8000/_wdt/f31d0d","method":"GET"} []
[2020-05-31T12:08:38.599935+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-31T12:08:38.601458+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.602601+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.603049+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.603369+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-05-31T12:08:38.603653+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.604239+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.604660+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.605014+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-05-31T12:08:38.605321+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.605874+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.606257+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.606536+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-05-31T12:08:38.606802+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.607313+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.607689+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.607956+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-05-31T12:08:38.608209+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.608698+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.609015+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.609269+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-05-31T12:08:38.609506+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.609933+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.610294+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.610576+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-05-31T12:08:38.610815+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.611308+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.611696+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.612054+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-05-31T12:08:38.612307+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order_item' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.612823+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order_item' */ WHERE k.table_name = 'order_item' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.613219+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order_item' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.613552+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order_item' [] []
[2020-05-31T12:08:38.613800+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.614382+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.614822+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.615190+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-05-31T12:08:38.615448+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.615916+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.616268+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.616548+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-05-31T12:08:38.616797+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.617263+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.617599+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.617856+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-05-31T12:08:38.618100+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.618533+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.618900+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.619194+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-05-31T12:08:38.619442+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.620000+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.620376+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.620739+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-31T12:08:38.620986+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.621436+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.621740+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.621993+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-05-31T12:08:38.625286+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-31T12:08:38.625886+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.626386+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.626695+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.626940+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-05-31T12:08:38.627171+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.627600+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.627940+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.628227+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-05-31T12:08:38.628460+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.628880+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.629164+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.629400+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-05-31T12:08:38.629628+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.630041+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.630323+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.630566+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-05-31T12:08:38.630796+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.631209+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.631493+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.631729+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-05-31T12:08:38.631973+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.632389+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.632725+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.633004+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-05-31T12:08:38.633232+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.633659+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.634006+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.634315+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-05-31T12:08:38.634569+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order_item' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.635244+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order_item' */ WHERE k.table_name = 'order_item' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.635834+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order_item' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.636310+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order_item' [] []
[2020-05-31T12:08:38.636611+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.637367+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.639548+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.640038+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-05-31T12:08:38.640336+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.640922+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.641305+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.641595+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-05-31T12:08:38.641867+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.642392+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.642730+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.643023+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-05-31T12:08:38.643346+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.643852+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.644212+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.644523+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-05-31T12:08:38.644770+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.645333+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.645689+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.646012+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-31T12:08:38.646257+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T12:08:38.646713+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T12:08:38.647019+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T12:08:38.647273+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-05-31T12:08:38.648359+02:00] doctrine.DEBUG: ALTER TABLE department ADD description VARCHAR(255) DEFAULT NULL [] []
[2020-05-31T12:08:42.957298+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:08:42.959809+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:08:42.959876+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:08:42.959943+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:08:42.983068+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:08:42.984089+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:08:42.984934+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2]] []
[2020-05-31T12:08:42.988157+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:08:42.996989+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "description" nor one of the methods "description()", "getdescription()"/"isdescription()"/"hasdescription()" or "__call()" exist and have public access in class "Symfony\Component\Form\FormView"." at /var/www/inventory/templates/department/_form.html.twig line 23 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"description\" nor one of the methods \"description()\", \"getdescription()\"/\"isdescription()\"/\"hasdescription()\" or \"__call()\" exist and have public access in class \"Symfony\\Component\\Form\\FormView\". at /var/www/inventory/templates/department/_form.html.twig:23)"} []
[2020-05-31T12:08:43.040171+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:08:43.154874+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"502fc6"},"request_uri":"http://localhost:8000/_wdt/502fc6","method":"GET"} []
[2020-05-31T12:09:01.299603+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:09:01.302401+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:09:01.302475+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:09:01.302515+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:09:01.311919+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:09:01.312947+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:09:01.313843+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2]] []
[2020-05-31T12:09:01.318097+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:09:01.324245+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "description" nor one of the methods "description()", "getdescription()"/"isdescription()"/"hasdescription()" or "__call()" exist and have public access in class "Symfony\Component\Form\FormView"." at /var/www/inventory/templates/department/_form.html.twig line 23 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"description\" nor one of the methods \"description()\", \"getdescription()\"/\"isdescription()\"/\"hasdescription()\" or \"__call()\" exist and have public access in class \"Symfony\\Component\\Form\\FormView\". at /var/www/inventory/templates/department/_form.html.twig:23)"} []
[2020-05-31T12:09:01.367912+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:09:01.482968+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"89ad02"},"request_uri":"http://localhost:8000/_wdt/89ad02","method":"GET"} []
[2020-05-31T12:09:55.571053+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:09:55.575207+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:09:55.575313+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:09:55.575376+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:09:55.589066+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:09:55.589910+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:09:55.590706+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2]] []
[2020-05-31T12:09:55.595596+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:09:55.604766+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:09:55.923947+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"162da3"},"request_uri":"http://localhost:8000/_wdt/162da3","method":"GET"} []
[2020-05-31T12:10:26.945804+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"POST"} []
[2020-05-31T12:10:26.949860+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:10:26.949964+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:26.950028+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:26.950278+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:10:26.964390+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) [["2"]] []
[2020-05-31T12:10:26.991225+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T12:10:26.992143+02:00] doctrine.DEBUG: INSERT INTO department (name, description, college_id) VALUES (?, ?, ?) {"1":"Mathematics","2":null,"3":2} []
[2020-05-31T12:10:26.992711+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T12:10:27.065180+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:10:27.068682+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:10:27.068807+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:27.068871+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:27.079442+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:10:27.081054+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:10:27.082405+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3]] []
[2020-05-31T12:10:27.086692+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:10:27.093772+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:10:27.358334+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d7d04e"},"request_uri":"http://localhost:8000/_wdt/d7d04e","method":"GET"} []
[2020-05-31T12:10:41.174545+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"POST"} []
[2020-05-31T12:10:41.177850+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:10:41.177947+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:41.178018+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:41.178304+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:10:41.191567+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) [["9"]] []
[2020-05-31T12:10:41.206385+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T12:10:41.207030+02:00] doctrine.DEBUG: INSERT INTO department (name, description, college_id) VALUES (?, ?, ?) {"1":"xxx","2":"xxx","3":9} []
[2020-05-31T12:10:41.207462+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T12:10:41.355001+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:10:41.357039+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:10:41.357114+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:41.357177+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:41.365956+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:10:41.366928+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:10:41.367731+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:10:41.370847+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:10:41.377829+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:10:41.639302+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"92c7f3"},"request_uri":"http://localhost:8000/_wdt/92c7f3","method":"GET"} []
[2020-05-31T12:10:43.459627+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"POST"} []
[2020-05-31T12:10:43.462063+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:10:43.462138+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:43.462177+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:43.462306+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:10:43.466352+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? LIMIT 1 ["4"] []
[2020-05-31T12:10:43.471023+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? [9] []
[2020-05-31T12:10:43.473018+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:10:43.473502+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:10:43.473999+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:10:43.475049+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:10:43.777748+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a974fe"},"request_uri":"http://localhost:8000/_wdt/a974fe","method":"GET"} []
[2020-05-31T12:10:47.321128+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"POST"} []
[2020-05-31T12:10:47.323731+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:10:47.323817+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:47.323861+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:47.324049+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:10:47.330692+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? LIMIT 1 ["4"] []
[2020-05-31T12:10:47.336527+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? [9] []
[2020-05-31T12:10:47.338114+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) [["9"]] []
[2020-05-31T12:10:47.348619+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T12:10:47.348867+02:00] doctrine.DEBUG: UPDATE department SET name = ? WHERE id = ? ["ryyyy",4] []
[2020-05-31T12:10:47.349303+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T12:10:47.566399+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:10:47.569823+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:10:47.569950+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:47.570049+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:47.580602+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:10:47.581753+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:10:47.582762+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:10:47.587100+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:10:47.594382+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:10:47.956920+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5eaba6"},"request_uri":"http://localhost:8000/_wdt/5eaba6","method":"GET"} []
[2020-05-31T12:10:49.344813+02:00] request.INFO: Matched route "department_show". {"route":"department_show","route_parameters":{"_route":"department_show","_controller":"App\\Controller\\DepartmentController::show","id":"4"},"request_uri":"http://localhost:8000/department/4","method":"GET"} []
[2020-05-31T12:10:49.347832+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:10:49.347946+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:49.348010+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:49.351951+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? ["4"] []
[2020-05-31T12:10:49.358064+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "department_edit" as such route does not exist.")." at /var/www/inventory/templates/department/show.html.twig line 23 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"department_edit\" as such route does not exist.\"). at /var/www/inventory/templates/department/show.html.twig:23)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"department_edit\" as such route does not exist. at /var/www/inventory/vendor/symfony/routing/Generator/CompiledUrlGenerator.php:50)"} []
[2020-05-31T12:10:49.434432+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:10:49.572138+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c43b73"},"request_uri":"http://localhost:8000/_wdt/c43b73","method":"GET"} []
[2020-05-31T12:10:52.586682+02:00] request.INFO: Matched route "department_show". {"route":"department_show","route_parameters":{"_route":"department_show","_controller":"App\\Controller\\DepartmentController::show","id":"4"},"request_uri":"http://localhost:8000/department/4","method":"GET"} []
[2020-05-31T12:10:52.589418+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:10:52.589486+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:52.589542+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:10:52.593081+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? ["4"] []
[2020-05-31T12:10:52.599680+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "department_edit" as such route does not exist.")." at /var/www/inventory/templates/department/show.html.twig line 23 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"department_edit\" as such route does not exist.\"). at /var/www/inventory/templates/department/show.html.twig:23)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"department_edit\" as such route does not exist. at /var/www/inventory/vendor/symfony/routing/Generator/CompiledUrlGenerator.php:50)"} []
[2020-05-31T12:10:52.659445+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:10:52.768047+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3fba86"},"request_uri":"http://localhost:8000/_wdt/3fba86","method":"GET"} []
[2020-05-31T12:11:40.325952+02:00] request.INFO: Matched route "department_show". {"route":"department_show","route_parameters":{"_route":"department_show","_controller":"App\\Controller\\DepartmentController::show","id":"4"},"request_uri":"http://localhost:8000/department/4","method":"GET"} []
[2020-05-31T12:11:40.330222+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:11:40.330326+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:11:40.330395+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:11:40.336115+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? ["4"] []
[2020-05-31T12:11:40.354987+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:11:40.804892+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"639444"},"request_uri":"http://localhost:8000/_wdt/639444","method":"GET"} []
[2020-05-31T12:11:42.988899+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:11:42.990851+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:11:42.990940+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:11:42.990997+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:11:43.000137+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:11:43.000770+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:11:43.001381+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:11:43.004119+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:11:43.011476+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:11:43.345725+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a8d85f"},"request_uri":"http://localhost:8000/_wdt/a8d85f","method":"GET"} []
[2020-05-31T12:12:02.095125+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:12:02.097964+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:12:02.098055+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:12:02.098119+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:12:02.108655+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:12:02.109539+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:12:02.110345+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:12:02.114366+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:12:02.121526+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:12:02.397795+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"723bd9"},"request_uri":"http://localhost:8000/_wdt/723bd9","method":"GET"} []
[2020-05-31T12:12:04.160761+02:00] request.INFO: Matched route "department_show". {"route":"department_show","route_parameters":{"_route":"department_show","_controller":"App\\Controller\\DepartmentController::show","id":"4"},"request_uri":"http://localhost:8000/department/4","method":"GET"} []
[2020-05-31T12:12:04.166209+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:12:04.166373+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:12:04.166492+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:12:04.172378+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? ["4"] []
[2020-05-31T12:12:04.190545+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:12:04.498780+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9f228a"},"request_uri":"http://localhost:8000/_wdt/9f228a","method":"GET"} []
[2020-05-31T12:12:08.285122+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:12:08.288357+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:12:08.288432+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:12:08.288479+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:12:08.300228+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:12:08.300974+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:12:08.301860+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:12:08.304990+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:12:08.312483+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:12:08.607831+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"42d450"},"request_uri":"http://localhost:8000/_wdt/42d450","method":"GET"} []
[2020-05-31T12:12:15.006168+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:12:15.008700+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:12:15.008768+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:12:15.008823+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:12:15.018257+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:12:15.018957+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:12:15.019669+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:12:15.024041+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:12:15.030922+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:12:15.286827+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"afb675"},"request_uri":"http://localhost:8000/_wdt/afb675","method":"GET"} []
[2020-05-31T12:17:42.480883+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:17:42.483608+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:17:42.483682+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:17:42.483720+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:17:42.510867+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:17:42.511485+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:17:42.512306+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:17:42.516810+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:17:42.538792+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:17:42.867547+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a7b79a"},"request_uri":"http://localhost:8000/_wdt/a7b79a","method":"GET"} []
[2020-05-31T12:17:44.374503+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"POST"} []
[2020-05-31T12:17:44.377266+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:17:44.377363+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:17:44.377432+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:17:44.377609+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:17:44.381297+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T12:17:44.386459+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? [1] []
[2020-05-31T12:17:44.389171+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:17:44.390026+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:17:44.390743+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:17:44.392588+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:17:44.641978+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"21ef99"},"request_uri":"http://localhost:8000/_wdt/21ef99","method":"GET"} []
[2020-05-31T12:17:47.213017+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"POST"} []
[2020-05-31T12:17:47.215701+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:17:47.215779+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:17:47.215825+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:17:47.215989+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:17:47.220596+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T12:17:47.226605+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? [1] []
[2020-05-31T12:17:47.228158+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-05-31T12:17:47.267429+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:17:47.269001+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:17:47.269058+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:17:47.269096+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:17:47.278273+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:17:47.278895+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:17:47.279507+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:17:47.282354+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:17:47.289745+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:17:47.584219+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9ecdcd"},"request_uri":"http://localhost:8000/_wdt/9ecdcd","method":"GET"} []
[2020-05-31T12:18:03.632659+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:18:03.635272+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:18:03.635358+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:18:03.635410+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:18:03.645190+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:18:03.645905+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:18:03.646552+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:18:03.649763+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:18:03.657280+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:18:03.945503+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a55ee9"},"request_uri":"http://localhost:8000/_wdt/a55ee9","method":"GET"} []
[2020-05-31T12:18:28.769873+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:18:28.772337+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:18:28.772420+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:18:28.772477+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:18:28.782753+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:18:28.783519+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:18:28.784248+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:18:28.787653+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:18:28.794794+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:18:29.083363+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9cbae2"},"request_uri":"http://localhost:8000/_wdt/9cbae2","method":"GET"} []
[2020-05-31T12:19:42.275430+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:19:42.278931+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:19:42.279009+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:19:42.279052+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:19:42.288485+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:19:42.289299+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:19:42.290102+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:19:42.294442+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:19:42.301945+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:19:42.565192+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d773fa"},"request_uri":"http://localhost:8000/_wdt/d773fa","method":"GET"} []
[2020-05-31T12:20:14.532930+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:20:14.535669+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:20:14.535746+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:20:14.535801+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:20:14.546075+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:20:14.546690+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:20:14.547338+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:20:14.550665+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:20:14.564808+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:20:14.829138+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"69260a"},"request_uri":"http://localhost:8000/_wdt/69260a","method":"GET"} []
[2020-05-31T12:20:50.805019+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:20:50.810535+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:20:50.810704+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:20:50.810825+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:20:50.825517+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:20:50.826852+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:20:50.827955+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:20:50.832028+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:20:50.848294+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:20:51.156100+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"177fca"},"request_uri":"http://localhost:8000/_wdt/177fca","method":"GET"} []
[2020-05-31T12:20:52.302924+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:20:52.304941+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:20:52.305011+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:20:52.305050+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:20:52.312853+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:20:52.313526+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:20:52.314092+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:20:52.316671+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:20:52.324299+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:20:52.616358+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e54c88"},"request_uri":"http://localhost:8000/_wdt/e54c88","method":"GET"} []
[2020-05-31T12:21:49.822123+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:21:49.824802+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:21:49.824877+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:21:49.824935+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:21:49.834212+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:21:49.835031+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:21:49.835731+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:21:49.838801+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:21:49.852854+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:21:50.119227+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff1747"},"request_uri":"http://localhost:8000/_wdt/ff1747","method":"GET"} []
[2020-05-31T12:22:38.251089+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:22:38.254222+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:22:38.254312+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:22:38.254366+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:22:38.264718+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:22:38.265429+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:22:38.266090+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:22:38.269221+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:22:38.284667+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:22:38.550399+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c9f5b2"},"request_uri":"http://localhost:8000/_wdt/c9f5b2","method":"GET"} []
[2020-05-31T12:22:41.703152+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T12:22:41.705784+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:22:41.705863+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:22:41.705916+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:22:41.711267+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:22:42.018575+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7053c9"},"request_uri":"http://localhost:8000/_wdt/7053c9","method":"GET"} []
[2020-05-31T12:22:43.298356+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:22:43.301788+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:22:43.301983+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:22:43.302133+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:22:43.317809+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:22:43.318921+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:22:43.320177+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:22:43.329704+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:22:43.637748+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5a200"},"request_uri":"http://localhost:8000/_wdt/d5a200","method":"GET"} []
[2020-05-31T12:22:44.362369+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:22:44.366401+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:22:44.366538+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:22:44.366660+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:22:44.381759+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:22:44.382832+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:22:44.383793+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:22:44.389242+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:22:44.397614+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:22:44.653553+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0cab12"},"request_uri":"http://localhost:8000/_wdt/0cab12","method":"GET"} []
[2020-05-31T12:22:52.846781+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:22:52.849496+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:22:52.849574+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:22:52.849619+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:22:52.859140+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:22:52.859995+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:22:52.860884+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:22:52.863963+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:22:52.879993+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:22:53.147335+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7b0cf9"},"request_uri":"http://localhost:8000/_wdt/7b0cf9","method":"GET"} []
[2020-05-31T12:22:54.079600+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T12:22:54.081330+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:22:54.081396+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:22:54.081452+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:22:54.087732+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:22:54.378266+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7fbbcd"},"request_uri":"http://localhost:8000/_wdt/7fbbcd","method":"GET"} []
[2020-05-31T12:23:00.151611+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T12:23:00.154222+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:23:00.154297+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:23:00.154337+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:23:00.158463+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:23:00.399486+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"257dce"},"request_uri":"http://localhost:8000/_wdt/257dce","method":"GET"} []
[2020-05-31T12:23:01.957314+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:23:01.959714+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:23:01.959831+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:23:01.959896+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:23:01.972546+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:23:01.973497+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:23:01.974509+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:23:01.984254+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:23:02.300361+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e21637"},"request_uri":"http://localhost:8000/_wdt/e21637","method":"GET"} []
[2020-05-31T12:23:04.725053+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:23:04.728196+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:23:04.728283+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:23:04.728341+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:23:04.736291+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:23:04.736955+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:23:04.737536+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:23:04.744824+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:23:05.038174+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ffcabd"},"request_uri":"http://localhost:8000/_wdt/ffcabd","method":"GET"} []
[2020-05-31T12:23:05.643066+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:23:05.645858+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:23:05.645965+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:23:05.646058+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:23:05.658601+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:23:05.659502+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:23:05.660358+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:23:05.664936+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:23:05.675250+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:23:05.980404+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7977bf"},"request_uri":"http://localhost:8000/_wdt/7977bf","method":"GET"} []
[2020-05-31T12:23:07.935318+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:23:07.938250+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:23:07.938339+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:23:07.938391+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:23:07.947167+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:23:07.947830+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:23:07.948636+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:23:07.956321+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:23:08.244583+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"479c32"},"request_uri":"http://localhost:8000/_wdt/479c32","method":"GET"} []
[2020-05-31T12:23:47.125464+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:23:47.131370+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:23:47.131577+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:23:47.131702+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:23:47.145482+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:23:47.146418+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:23:47.147451+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:23:47.157323+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:23:47.415547+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d7b19c"},"request_uri":"http://localhost:8000/_wdt/d7b19c","method":"GET"} []
[2020-05-31T12:24:00.574627+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:24:00.578571+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:24:00.578699+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:24:00.578783+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:24:00.594911+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:24:00.596279+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:24:00.597570+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:24:00.613476+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:24:00.876878+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1807e3"},"request_uri":"http://localhost:8000/_wdt/1807e3","method":"GET"} []
[2020-05-31T12:24:02.015567+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:24:02.017486+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:24:02.017574+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:24:02.017629+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:24:02.027089+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:24:02.028006+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:24:02.028808+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:24:02.037911+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:24:02.355474+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"852078"},"request_uri":"http://localhost:8000/_wdt/852078","method":"GET"} []
[2020-05-31T12:24:04.406890+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:24:04.409324+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:24:04.409411+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:24:04.409465+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:24:04.417630+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:24:04.418248+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:24:04.418821+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:24:04.427362+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:24:04.673743+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"03af83"},"request_uri":"http://localhost:8000/_wdt/03af83","method":"GET"} []
[2020-05-31T12:24:06.756949+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T12:24:06.759792+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:24:06.759875+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:24:06.759937+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:24:06.760123+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:24:06.763673+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T12:24:06.768737+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:24:06.769377+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:24:06.770031+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:24:07.067788+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"371593"},"request_uri":"http://localhost:8000/_wdt/371593","method":"GET"} []
[2020-05-31T12:24:33.227466+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"371593"},"request_uri":"http://localhost:8000/_wdt/371593","method":"GET"} []
[2020-05-31T12:24:37.374954+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:24:37.377506+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:24:37.377584+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:24:37.377625+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:24:37.387195+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:24:37.387911+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:24:37.388587+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:24:37.391565+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:24:37.403970+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:24:37.675307+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3d92d4"},"request_uri":"http://localhost:8000/_wdt/3d92d4","method":"GET"} []
[2020-05-31T12:24:40.353110+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"POST"} []
[2020-05-31T12:24:40.356114+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:24:40.356196+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:24:40.356251+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:24:40.356473+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:24:40.361119+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T12:24:40.366598+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? [1] []
[2020-05-31T12:24:40.368946+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:24:40.369513+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:24:40.370299+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:24:40.372059+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:24:40.654459+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"49ad6c"},"request_uri":"http://localhost:8000/_wdt/49ad6c","method":"GET"} []
[2020-05-31T12:25:54.374358+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:25:54.379615+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:25:54.379750+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:25:54.379824+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:25:54.393461+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:25:54.394291+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:25:54.395163+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:25:54.404477+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:25:54.423337+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:25:55.037025+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc2003"},"request_uri":"http://localhost:8000/_wdt/bc2003","method":"GET"} []
[2020-05-31T12:26:31.919935+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:26:31.922148+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:26:31.922211+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:26:31.922251+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:26:31.931468+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:26:31.932269+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:26:31.933181+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:26:31.936763+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:26:31.950514+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:26:32.212701+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f74c40"},"request_uri":"http://localhost:8000/_wdt/f74c40","method":"GET"} []
[2020-05-31T12:26:58.996070+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:26:58.999645+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:26:58.999744+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:26:58.999836+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:26:59.012579+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:26:59.013294+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:26:59.014144+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:26:59.018359+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:26:59.032340+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:26:59.297902+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"360042"},"request_uri":"http://localhost:8000/_wdt/360042","method":"GET"} []
[2020-05-31T12:27:03.820390+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T12:27:03.822822+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:27:03.822885+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:27:03.822926+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:27:03.823067+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:27:03.826874+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T12:27:03.832766+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:27:03.833350+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:27:03.834009+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:27:04.093376+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bcebbf"},"request_uri":"http://localhost:8000/_wdt/bcebbf","method":"GET"} []
[2020-05-31T12:27:06.611133+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-05-31T12:27:06.613310+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:27:06.613404+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:27:06.613444+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:27:06.613585+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:27:06.616872+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T12:27:06.657411+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:27:06.659644+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:27:06.659744+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:27:06.659844+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:27:06.670311+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:27:06.671131+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:27:06.671977+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:27:06.684335+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:27:06.995531+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c246ed"},"request_uri":"http://localhost:8000/_wdt/c246ed","method":"GET"} []
[2020-05-31T12:27:39.164915+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:27:39.178492+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:27:39.178839+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:27:39.179023+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:27:39.196970+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:27:39.197912+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:27:39.198917+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:27:39.209579+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:27:39.504346+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"08313c"},"request_uri":"http://localhost:8000/_wdt/08313c","method":"GET"} []
[2020-05-31T12:27:49.194340+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:27:49.198769+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:27:49.198959+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:27:49.199082+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:27:49.210975+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:27:49.211961+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:27:49.212813+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:27:49.230625+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:27:49.487956+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bed8cc"},"request_uri":"http://localhost:8000/_wdt/bed8cc","method":"GET"} []
[2020-05-31T12:28:01.993307+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:28:01.996577+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:28:01.996692+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:28:01.996742+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:28:02.005939+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:28:02.006539+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:28:02.007150+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:28:02.021164+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:28:02.305361+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ed6b5c"},"request_uri":"http://localhost:8000/_wdt/ed6b5c","method":"GET"} []
[2020-05-31T12:28:13.868183+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:28:13.871069+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:28:13.871139+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:28:13.871183+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:28:13.879856+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:28:13.880662+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:28:13.881579+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:28:13.895867+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:28:14.192979+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d4ffd2"},"request_uri":"http://localhost:8000/_wdt/d4ffd2","method":"GET"} []
[2020-05-31T12:28:27.530393+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:28:27.532858+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:28:27.532931+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:28:27.532988+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:28:27.541313+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:28:27.542081+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:28:27.542888+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:28:27.556149+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:28:27.873032+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"78828e"},"request_uri":"http://localhost:8000/_wdt/78828e","method":"GET"} []
[2020-05-31T12:28:31.894613+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:28:31.897167+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:28:31.897240+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:28:31.897298+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:28:31.906730+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:28:31.907354+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:28:31.908005+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:28:31.911023+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:28:31.924542+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:28:32.200673+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"803c10"},"request_uri":"http://localhost:8000/_wdt/803c10","method":"GET"} []
[2020-05-31T12:28:50.890224+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:28:50.894158+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:28:50.894244+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:28:50.894304+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:28:50.904898+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:28:50.905689+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:28:50.906431+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:28:50.910831+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:28:50.919094+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:28:51.241042+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0edd60"},"request_uri":"http://localhost:8000/_wdt/0edd60","method":"GET"} []
[2020-05-31T12:29:05.483845+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/?search=yy","method":"GET"} []
[2020-05-31T12:29:05.487510+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:29:05.487590+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:29:05.487632+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:29:05.497900+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ WHERE d0_.name LIKE '%yy%' [] []
[2020-05-31T12:29:05.499354+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ WHERE d0_.name LIKE '%yy%' ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:29:05.500346+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.name LIKE '%yy%' AND d0_.id IN (?) ORDER BY d0_.id ASC [[4]] []
[2020-05-31T12:29:05.504882+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:29:05.512480+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:29:05.831375+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"722e54"},"request_uri":"http://localhost:8000/_wdt/722e54","method":"GET"} []
[2020-05-31T12:29:07.476454+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/?search=","method":"GET"} []
[2020-05-31T12:29:07.478725+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:29:07.478814+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:29:07.478859+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:29:07.488391+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:29:07.489250+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:29:07.490106+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:29:07.493099+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:29:07.499814+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:29:07.810602+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8ae65c"},"request_uri":"http://localhost:8000/_wdt/8ae65c","method":"GET"} []
[2020-05-31T12:29:52.070308+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:29:52.073039+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:29:52.073118+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:29:52.073174+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:29:52.083627+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:29:52.084282+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:29:52.084899+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:29:52.088092+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:29:52.095109+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:29:52.397723+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d9eabf"},"request_uri":"http://localhost:8000/_wdt/d9eabf","method":"GET"} []
[2020-05-31T12:30:23.443456+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:30:23.446421+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:30:23.446531+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:23.446602+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:23.456108+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:30:23.456712+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:30:23.457318+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:30:23.466464+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:30:23.743653+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"494635"},"request_uri":"http://localhost:8000/_wdt/494635","method":"GET"} []
[2020-05-31T12:30:24.941744+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:30:24.943514+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:30:24.943582+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:24.943637+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:24.951286+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:30:24.951921+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:30:24.952464+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:30:24.955386+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:30:24.962263+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:30:25.225841+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c8736b"},"request_uri":"http://localhost:8000/_wdt/c8736b","method":"GET"} []
[2020-05-31T12:30:26.394229+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:30:26.398639+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:30:26.398765+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:26.398863+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:26.411277+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:30:26.412016+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:30:26.412825+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:30:26.422174+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:30:26.693520+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0a3fd8"},"request_uri":"http://localhost:8000/_wdt/0a3fd8","method":"GET"} []
[2020-05-31T12:30:27.769069+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:30:27.776889+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:30:27.777195+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:27.777375+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:27.794866+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:30:27.795813+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:30:27.796732+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:30:27.801839+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:30:27.811009+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:30:28.098056+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca8896"},"request_uri":"http://localhost:8000/_wdt/ca8896","method":"GET"} []
[2020-05-31T12:30:31.634088+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:30:31.636992+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:30:31.637070+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:31.637111+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:31.645496+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:30:31.646127+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:30:31.646743+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:30:31.654260+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:30:31.908600+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d35cd1"},"request_uri":"http://localhost:8000/_wdt/d35cd1","method":"GET"} []
[2020-05-31T12:30:33.063831+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:30:33.065671+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:30:33.065738+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:33.065792+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:33.073004+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:30:33.073626+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:30:33.074152+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:30:33.076908+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:30:33.083567+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:30:33.370357+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"035a07"},"request_uri":"http://localhost:8000/_wdt/035a07","method":"GET"} []
[2020-05-31T12:30:40.391526+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:30:40.394454+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:30:40.394537+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:40.394588+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:40.403938+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:30:40.404596+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:30:40.405282+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:30:40.412787+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:30:40.711313+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ace3a0"},"request_uri":"http://localhost:8000/_wdt/ace3a0","method":"GET"} []
[2020-05-31T12:30:41.228240+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-31T12:30:41.229841+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:30:41.229906+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:41.229946+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:30:41.233938+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-31T12:30:41.242858+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:30:41.519107+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f1a5ce"},"request_uri":"http://localhost:8000/_wdt/f1a5ce","method":"GET"} []
[2020-05-31T12:31:21.764187+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:31:21.766347+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:31:21.766417+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:21.766480+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:21.774958+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:31:21.775712+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:31:21.776551+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:31:21.780129+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:31:21.787403+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:31:22.063425+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6577d6"},"request_uri":"http://localhost:8000/_wdt/6577d6","method":"GET"} []
[2020-05-31T12:31:24.552159+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-31T12:31:24.556019+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:31:24.556111+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:24.556164+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:24.560949+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-31T12:31:24.565964+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:31:24.840550+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a61a85"},"request_uri":"http://localhost:8000/_wdt/a61a85","method":"GET"} []
[2020-05-31T12:31:26.679399+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-31T12:31:26.681392+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:31:26.681499+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:26.681560+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:26.685180+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-31T12:31:26.689408+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:31:26.945280+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5d080d"},"request_uri":"http://localhost:8000/_wdt/5d080d","method":"GET"} []
[2020-05-31T12:31:27.751806+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-31T12:31:27.753853+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:31:27.753922+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:27.753961+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:27.757171+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-31T12:31:27.761715+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:31:28.022335+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc1962"},"request_uri":"http://localhost:8000/_wdt/bc1962","method":"GET"} []
[2020-05-31T12:31:29.373630+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-05-31T12:31:29.376336+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:31:29.376441+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:29.376502+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:29.381985+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gross_amount AS gross_amount_2, t0.customer_id AS customer_id_3, t0.user_id AS user_id_4 FROM `order` t0 [] []
[2020-05-31T12:31:29.387349+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:31:29.657381+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2f0202"},"request_uri":"http://localhost:8000/_wdt/2f0202","method":"GET"} []
[2020-05-31T12:31:30.341471+02:00] request.INFO: Matched route "transfer_index". {"route":"transfer_index","route_parameters":{"_route":"transfer_index","_controller":"App\\Controller\\TransferController::index"},"request_uri":"http://localhost:8000/transfer/","method":"GET"} []
[2020-05-31T12:31:30.344124+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:31:30.344213+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:30.344269+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:30.348292+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.status AS status_2, t0.to_id_id AS to_id_id_3 FROM transfer t0 [] []
[2020-05-31T12:31:30.351937+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:31:30.616878+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"283172"},"request_uri":"http://localhost:8000/_wdt/283172","method":"GET"} []
[2020-05-31T12:31:31.088429+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T12:31:31.091628+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:31:31.091742+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:31.091819+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:31.096060+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:31:31.385961+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"125bc2"},"request_uri":"http://localhost:8000/_wdt/125bc2","method":"GET"} []
[2020-05-31T12:31:34.596127+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-31T12:31:34.598935+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:31:34.599150+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:34.599204+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:34.602657+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-31T12:31:34.607204+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:31:34.876747+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c6632c"},"request_uri":"http://localhost:8000/_wdt/c6632c","method":"GET"} []
[2020-05-31T12:31:35.676078+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T12:31:35.678226+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:31:35.678302+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:35.678357+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:35.681220+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T12:31:35.685325+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:31:35.961363+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1dc1dd"},"request_uri":"http://localhost:8000/_wdt/1dc1dd","method":"GET"} []
[2020-05-31T12:31:36.811133+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-31T12:31:36.813036+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:31:36.813113+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:36.813157+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:36.815962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-31T12:31:36.820119+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:31:37.067301+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a37e63"},"request_uri":"http://localhost:8000/_wdt/a37e63","method":"GET"} []
[2020-05-31T12:31:37.862887+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-31T12:31:37.864960+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:31:37.865035+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:37.865078+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:37.868960+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-31T12:31:37.873789+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:31:38.126087+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0e00a1"},"request_uri":"http://localhost:8000/_wdt/0e00a1","method":"GET"} []
[2020-05-31T12:31:38.783154+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T12:31:38.785565+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:31:38.785666+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:38.785728+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:31:38.792106+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 [] []
[2020-05-31T12:31:38.803498+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:31:39.059099+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"669573"},"request_uri":"http://localhost:8000/_wdt/669573","method":"GET"} []
[2020-05-31T12:32:13.739452+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:32:13.742916+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:32:13.743015+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:13.743079+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:13.754346+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:32:13.755056+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:32:13.755833+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:32:13.764066+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:32:14.136667+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"07de3c"},"request_uri":"http://localhost:8000/_wdt/07de3c","method":"GET"} []
[2020-05-31T12:32:14.793068+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T12:32:14.794806+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:32:14.794882+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:14.794942+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:14.802129+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T12:32:14.803191+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T12:32:14.803840+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T12:32:14.811024+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:32:15.098003+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c83ec"},"request_uri":"http://localhost:8000/_wdt/7c83ec","method":"GET"} []
[2020-05-31T12:32:15.358875+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T12:32:15.360561+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:32:15.360631+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:15.360670+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:15.369976+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T12:32:15.370611+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T12:32:15.371147+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T12:32:15.373941+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T12:32:15.381220+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:32:15.654016+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bdbf47"},"request_uri":"http://localhost:8000/_wdt/bdbf47","method":"GET"} []
[2020-05-31T12:32:16.655025+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-31T12:32:16.657983+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:32:16.658067+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:16.658120+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:16.662822+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-31T12:32:16.668646+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:32:16.959477+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"43e109"},"request_uri":"http://localhost:8000/_wdt/43e109","method":"GET"} []
[2020-05-31T12:32:17.409131+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T12:32:17.411400+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:32:17.411832+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:17.412055+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:17.416520+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T12:32:17.421131+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:32:17.691850+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"df2188"},"request_uri":"http://localhost:8000/_wdt/df2188","method":"GET"} []
[2020-05-31T12:32:18.413526+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-31T12:32:18.417241+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:32:18.417360+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:18.417450+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:18.421720+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-31T12:32:18.427167+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:32:18.708628+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"06fc50"},"request_uri":"http://localhost:8000/_wdt/06fc50","method":"GET"} []
[2020-05-31T12:32:19.094308+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T12:32:19.097352+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:32:19.097455+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:19.097521+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:19.101323+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T12:32:19.106308+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:32:19.378379+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a44f06"},"request_uri":"http://localhost:8000/_wdt/a44f06","method":"GET"} []
[2020-05-31T12:32:19.846439+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-31T12:32:19.848448+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:32:19.848631+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:19.848784+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:19.852648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-31T12:32:19.857194+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:32:20.123730+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e4988d"},"request_uri":"http://localhost:8000/_wdt/e4988d","method":"GET"} []
[2020-05-31T12:32:21.054699+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-31T12:32:21.056910+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:32:21.056997+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:21.057075+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:21.061077+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-31T12:32:21.066878+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:32:21.341164+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7252f6"},"request_uri":"http://localhost:8000/_wdt/7252f6","method":"GET"} []
[2020-05-31T12:32:22.428858+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T12:32:22.431434+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:32:22.431521+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:22.431585+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:22.436473+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 [] []
[2020-05-31T12:32:22.444649+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:32:22.738088+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7e2672"},"request_uri":"http://localhost:8000/_wdt/7e2672","method":"GET"} []
[2020-05-31T12:32:25.887952+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T12:32:25.890929+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:32:25.891004+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:25.891044+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:25.896175+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 [] []
[2020-05-31T12:32:25.904279+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:32:26.180059+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"33562f"},"request_uri":"http://localhost:8000/_wdt/33562f","method":"GET"} []
[2020-05-31T12:32:47.525437+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T12:32:47.527806+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T12:32:47.527887+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:47.527929+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T12:32:47.532720+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 [] []
[2020-05-31T12:32:47.541766+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T12:32:47.829435+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1ada79"},"request_uri":"http://localhost:8000/_wdt/1ada79","method":"GET"} []
[2020-05-31T15:37:40.781348+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T15:37:40.785690+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T15:37:40.785819+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:37:40.785886+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:37:40.833634+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 [] []
[2020-05-31T15:37:40.854178+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T15:37:41.182093+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7137db"},"request_uri":"http://localhost:8000/_wdt/7137db","method":"GET"} []
[2020-05-31T15:37:43.553320+02:00] request.INFO: Matched route "product_new". {"route":"product_new","route_parameters":{"_route":"product_new","_controller":"App\\Controller\\ProductController::new"},"request_uri":"http://localhost:8000/product/new","method":"GET"} []
[2020-05-31T15:37:43.556172+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T15:37:43.556260+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:37:43.556322+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:37:43.585302+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T15:37:43.586312+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T15:37:43.587040+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T15:37:43.587659+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T15:37:43.597436+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T15:37:43.915578+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6901d5"},"request_uri":"http://localhost:8000/_wdt/6901d5","method":"GET"} []
[2020-05-31T15:38:26.711431+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T15:38:26.713909+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T15:38:26.713982+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:38:26.714025+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:38:26.718810+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 [] []
[2020-05-31T15:38:26.727304+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T15:38:27.031434+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0e007c"},"request_uri":"http://localhost:8000/_wdt/0e007c","method":"GET"} []
[2020-05-31T15:55:49.596459+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/product/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"product_index"},"request_uri":"http://localhost:8000/product","method":"GET"} []
[2020-05-31T15:55:49.599722+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T15:55:49.599833+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:55:49.599898+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:55:49.607101+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T15:55:49.644564+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T15:55:49.646334+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T15:55:49.646406+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:55:49.646446+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:55:49.664266+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T15:55:49.665355+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T15:55:49.666385+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T15:55:49.672251+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T15:55:49.673090+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T15:55:49.673522+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T15:55:49.673952+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T15:55:49.681016+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\SyntaxError: "Multiple extends tags are forbidden." at /var/www/inventory/templates/product/index.html.twig line 52 {"exception":"[object] (Twig\\Error\\SyntaxError(code: 0): Multiple extends tags are forbidden. at /var/www/inventory/templates/product/index.html.twig:52)"} []
[2020-05-31T15:55:49.716576+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T15:55:49.874585+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ecc32d"},"request_uri":"http://localhost:8000/_wdt/ecc32d","method":"GET"} []
[2020-05-31T15:56:15.812054+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T15:56:15.814563+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T15:56:15.814635+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:56:15.814675+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:56:15.827066+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T15:56:15.827816+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T15:56:15.828519+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T15:56:15.833887+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T15:56:15.834703+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T15:56:15.835251+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T15:56:15.835747+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T15:56:15.858140+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T15:56:16.178938+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d3218b"},"request_uri":"http://localhost:8000/_wdt/d3218b","method":"GET"} []
[2020-05-31T15:56:50.745654+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T15:56:50.748229+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T15:56:50.748301+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:56:50.748345+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:56:50.760381+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T15:56:50.761117+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T15:56:50.761974+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T15:56:50.768965+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T15:56:50.769801+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T15:56:50.770351+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T15:56:50.770848+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T15:56:50.787149+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T15:56:51.125441+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c313f8"},"request_uri":"http://localhost:8000/_wdt/c313f8","method":"GET"} []
[2020-05-31T15:58:01.502595+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T15:58:01.507414+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T15:58:01.507542+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:58:01.507611+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:58:01.522437+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T15:58:01.523207+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T15:58:01.524462+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T15:58:01.529178+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T15:58:01.529885+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T15:58:01.530531+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T15:58:01.531092+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T15:58:01.547242+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T15:58:01.834275+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f3037f"},"request_uri":"http://localhost:8000/_wdt/f3037f","method":"GET"} []
[2020-05-31T15:59:36.238318+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: "No route found for "POST /product/": Method Not Allowed (Allow: GET)" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException(code: 0): No route found for \"POST /product/\": Method Not Allowed (Allow: GET) at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:140)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:42)"} []
[2020-05-31T15:59:36.370856+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f8571e"},"request_uri":"http://localhost:8000/_wdt/f8571e","method":"GET"} []
[2020-05-31T15:59:52.037027+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T15:59:52.038033+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T15:59:52.038122+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:59:52.038185+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:59:52.038381+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T15:59:52.236764+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["3"]] []
[2020-05-31T15:59:52.238107+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-05-31T15:59:52.239147+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["1"]] []
[2020-05-31T15:59:52.240073+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-05-31T15:59:52.281647+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T15:59:52.282424+02:00] doctrine.DEBUG: INSERT INTO product (name, price, quantity, description, model, serial, isavailable, brand_id, category_id, store_id, product_type_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"batteries","2":1200.0,"3":20,"4":"desck here","5":"LMK0125","6":"1426","7":false,"8":3,"9":1,"10":1,"11":2} []
[2020-05-31T15:59:52.283100+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T15:59:52.395489+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T15:59:52.397637+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T15:59:52.397728+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:59:52.397783+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T15:59:52.414217+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T15:59:52.415371+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T15:59:52.416358+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2]] []
[2020-05-31T15:59:52.423362+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T15:59:52.424281+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T15:59:52.424840+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T15:59:52.425370+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T15:59:52.438356+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T15:59:53.113675+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9ef706"},"request_uri":"http://localhost:8000/_wdt/9ef706","method":"GET"} []
[2020-05-31T16:00:41.272362+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T16:00:41.275914+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:00:41.275987+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:00:41.276027+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:00:41.276183+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:00:41.293260+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["1"]] []
[2020-05-31T16:00:41.294362+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["2"]] []
[2020-05-31T16:00:41.295161+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-05-31T16:00:41.295930+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-05-31T16:00:41.311202+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T16:00:41.311833+02:00] doctrine.DEBUG: INSERT INTO product (name, price, quantity, description, model, serial, isavailable, brand_id, category_id, store_id, product_type_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Steplar","2":500.0,"3":18,"4":"too old","5":"mode22","6":"123456789","7":true,"8":1,"9":2,"10":2,"11":2} []
[2020-05-31T16:00:41.312273+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T16:00:41.409728+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:00:41.411459+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:00:41.411539+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:00:41.411591+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:00:41.422101+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:00:41.423054+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:00:41.423935+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:00:41.429854+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:00:41.430540+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:00:41.431297+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:00:41.431795+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:00:41.439173+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:00:41.712233+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c35ff1"},"request_uri":"http://localhost:8000/_wdt/c35ff1","method":"GET"} []
[2020-05-31T16:01:25.990689+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:01:26.005652+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:01:26.006012+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:01:26.006183+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:01:26.034989+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:01:26.036402+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:01:26.037893+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:01:26.048337+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:01:26.050001+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:01:26.051322+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:01:26.052268+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:01:26.077440+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:01:26.399192+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"991bd5"},"request_uri":"http://localhost:8000/_wdt/991bd5","method":"GET"} []
[2020-05-31T16:01:42.557782+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:01:42.561627+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:01:42.561714+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:01:42.561791+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:01:42.576415+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:01:42.577239+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:01:42.577995+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:01:42.584158+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:01:42.584928+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:01:42.585490+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:01:42.586020+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:01:42.600647+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:01:42.951584+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"751f85"},"request_uri":"http://localhost:8000/_wdt/751f85","method":"GET"} []
[2020-05-31T16:08:01.780178+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:08:01.783762+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:08:01.783889+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:08:01.783961+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:08:01.802135+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:08:01.803020+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:08:01.803899+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:08:01.809365+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:08:01.810100+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:08:01.810721+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:08:01.811400+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:08:01.827091+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:08:02.113249+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e80523"},"request_uri":"http://localhost:8000/_wdt/e80523","method":"GET"} []
[2020-05-31T16:08:41.949840+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:08:41.955247+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:08:41.955371+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:08:41.955436+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:08:41.974290+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:08:41.975088+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:08:41.976116+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:08:41.982772+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:08:41.983659+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:08:41.984278+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:08:41.984872+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:08:42.001700+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:08:42.283999+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a17d76"},"request_uri":"http://localhost:8000/_wdt/a17d76","method":"GET"} []
[2020-05-31T16:08:43.923532+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:08:43.926216+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:08:43.926323+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:08:43.926373+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:08:43.938480+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:08:43.939209+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:08:43.940135+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:08:43.945420+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:08:43.946107+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:08:43.946631+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:08:43.947137+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:08:43.955999+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:08:44.234918+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f43d3e"},"request_uri":"http://localhost:8000/_wdt/f43d3e","method":"GET"} []
[2020-05-31T16:09:03.891004+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:09:03.893564+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:09:03.893635+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:09:03.893680+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:09:03.906384+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:09:03.907246+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:09:03.908131+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:09:03.914727+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:09:03.915575+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:09:03.916173+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:09:03.916719+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:09:03.932007+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:09:04.200268+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"db6402"},"request_uri":"http://localhost:8000/_wdt/db6402","method":"GET"} []
[2020-05-31T16:09:27.621283+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:09:27.624095+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:09:27.624170+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:09:27.624227+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:09:27.636325+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:09:27.637075+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:09:27.637963+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:09:27.644753+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:09:27.645525+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:09:27.646087+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:09:27.646597+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:09:27.661447+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:09:27.955589+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"837c3e"},"request_uri":"http://localhost:8000/_wdt/837c3e","method":"GET"} []
[2020-05-31T16:09:36.576738+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:09:36.579981+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:09:36.580078+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:09:36.580154+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:09:36.594608+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:09:36.595327+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:09:36.596068+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:09:36.602638+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:09:36.603477+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:09:36.604083+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:09:36.604633+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:09:36.619420+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:09:36.874521+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4c580e"},"request_uri":"http://localhost:8000/_wdt/4c580e","method":"GET"} []
[2020-05-31T16:10:54.905765+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:10:54.909063+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:10:54.909167+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:10:54.909234+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:10:54.923990+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:10:54.924876+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:10:54.925841+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:10:54.932164+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:10:54.932916+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:10:54.933459+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:10:54.933883+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:10:54.948463+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:10:55.252146+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5d8de5"},"request_uri":"http://localhost:8000/_wdt/5d8de5","method":"GET"} []
[2020-05-31T16:11:13.439037+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:11:13.445992+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:11:13.446205+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:11:13.446329+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:11:13.468086+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:11:13.469237+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:11:13.470533+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:11:13.480429+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:11:13.481484+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:11:13.482214+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:11:13.482895+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:11:13.507540+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:11:13.802477+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5c8c82"},"request_uri":"http://localhost:8000/_wdt/5c8c82","method":"GET"} []
[2020-05-31T16:12:03.078259+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:12:03.081180+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:12:03.081274+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:12:03.081326+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:12:03.095984+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:12:03.096823+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:12:03.097614+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:12:03.104999+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:12:03.105749+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:12:03.106244+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:12:03.106720+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:12:03.123095+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:12:03.478572+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e49298"},"request_uri":"http://localhost:8000/_wdt/e49298","method":"GET"} []
[2020-05-31T16:12:13.470104+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:12:13.473013+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:12:13.473095+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:12:13.473146+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:12:13.487705+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:12:13.488420+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:12:13.489135+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:12:13.495348+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:12:13.496176+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:12:13.496771+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:12:13.497321+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:12:13.511513+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:12:13.795232+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d0b64d"},"request_uri":"http://localhost:8000/_wdt/d0b64d","method":"GET"} []
[2020-05-31T16:12:57.636321+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:12:57.638925+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:12:57.639313+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:12:57.639394+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:12:57.654059+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:12:57.654816+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:12:57.656074+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:12:57.663038+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:12:57.663755+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:12:57.664236+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:12:57.664661+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:12:57.680345+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:12:57.967731+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e3aca1"},"request_uri":"http://localhost:8000/_wdt/e3aca1","method":"GET"} []
[2020-05-31T16:13:22.178650+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:13:22.181741+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:13:22.181830+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:13:22.181885+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:13:22.196317+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:13:22.197074+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:13:22.197786+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:13:22.203027+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:13:22.203718+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:13:22.204255+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:13:22.204717+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:13:22.225254+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:13:22.503337+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"daa968"},"request_uri":"http://localhost:8000/_wdt/daa968","method":"GET"} []
[2020-05-31T16:13:23.493051+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:13:23.495031+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:13:23.495112+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:13:23.495161+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:13:23.507931+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:13:23.508580+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:13:23.509268+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:13:23.514045+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:13:23.514703+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:13:23.515237+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:13:23.515721+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:13:23.524689+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:13:23.887807+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d8ee48"},"request_uri":"http://localhost:8000/_wdt/d8ee48","method":"GET"} []
[2020-05-31T16:13:51.141187+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:13:51.145072+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:13:51.145178+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:13:51.145271+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:13:51.161933+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:13:51.162718+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:13:51.163481+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:13:51.169200+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:13:51.170165+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:13:51.171152+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:13:51.171819+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:13:51.187857+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:13:51.443329+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"43597d"},"request_uri":"http://localhost:8000/_wdt/43597d","method":"GET"} []
[2020-05-31T16:17:35.595067+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:17:35.597807+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:17:35.597905+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:17:35.597955+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:17:35.612866+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:17:35.613579+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:17:35.614367+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:17:35.620655+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:17:35.621614+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:17:35.622486+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:17:35.623253+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:17:35.638687+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:17:36.078638+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1cbd72"},"request_uri":"http://localhost:8000/_wdt/1cbd72","method":"GET"} []
[2020-05-31T16:18:40.458432+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:18:40.462248+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:18:40.462368+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:18:40.462447+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:18:40.477259+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:18:40.477960+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:18:40.478672+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:18:40.483962+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:18:40.484693+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:18:40.485168+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:18:40.485604+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:18:40.500249+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:18:40.795097+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fe2a46"},"request_uri":"http://localhost:8000/_wdt/fe2a46","method":"GET"} []
[2020-05-31T16:19:20.336158+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:19:20.338904+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:19:20.338979+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:19:20.339035+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:19:20.351234+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:19:20.352085+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:19:20.352977+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:19:20.359515+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:19:20.360281+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:19:20.360747+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:19:20.361295+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:19:20.370106+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:19:20.669219+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9f22a7"},"request_uri":"http://localhost:8000/_wdt/9f22a7","method":"GET"} []
[2020-05-31T16:19:35.828748+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:19:35.832062+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:19:35.832138+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:19:35.832180+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:19:35.845804+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:19:35.846472+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:19:35.847157+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:19:35.852387+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:19:35.853055+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:19:35.853498+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:19:35.853898+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:19:35.861760+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:19:36.156385+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9e9678"},"request_uri":"http://localhost:8000/_wdt/9e9678","method":"GET"} []
[2020-05-31T16:21:13.328721+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:21:13.331011+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:21:13.331077+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:21:13.331118+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:21:13.343518+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:21:13.344207+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 18 [] []
[2020-05-31T16:21:13.344877+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:21:13.349848+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:21:13.350834+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:21:13.351477+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:21:13.352217+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:21:13.367921+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:21:13.651794+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f8b836"},"request_uri":"http://localhost:8000/_wdt/f8b836","method":"GET"} []
[2020-05-31T16:23:26.971538+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:23:26.973744+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:23:26.973809+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:23:26.973847+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:23:26.986738+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:23:26.987547+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 2 [] []
[2020-05-31T16:23:26.988490+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2]] []
[2020-05-31T16:23:26.993365+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:23:26.993977+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:23:26.994391+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:23:26.994760+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:23:27.005698+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:23:27.387011+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b0153d"},"request_uri":"http://localhost:8000/_wdt/b0153d","method":"GET"} []
[2020-05-31T16:23:30.266168+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=2","method":"GET"} []
[2020-05-31T16:23:30.268945+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:23:30.269019+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:23:30.269057+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:23:30.280614+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:23:30.281269+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 2 OFFSET 2 [] []
[2020-05-31T16:23:30.282059+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[3]] []
[2020-05-31T16:23:30.286608+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:23:30.287208+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:23:30.287638+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:23:30.288074+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:23:30.297042+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:23:30.586949+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd72e6"},"request_uri":"http://localhost:8000/_wdt/fd72e6","method":"GET"} []
[2020-05-31T16:23:32.648849+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:23:32.650414+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:23:32.650478+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:23:32.650526+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:23:32.661425+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:23:32.662179+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 2 [] []
[2020-05-31T16:23:32.662905+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2]] []
[2020-05-31T16:23:32.668786+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:23:32.669594+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:23:32.670166+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:23:32.670720+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:23:32.678524+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:23:32.973605+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"818aff"},"request_uri":"http://localhost:8000/_wdt/818aff","method":"GET"} []
[2020-05-31T16:24:12.310739+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:24:12.313001+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:24:12.313064+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:24:12.313101+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:24:12.326237+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:24:12.326863+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:24:12.327691+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:24:12.332479+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:24:12.333132+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:24:12.333612+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:24:12.334017+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:24:12.343342+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:24:12.639848+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d67b55"},"request_uri":"http://localhost:8000/_wdt/d67b55","method":"GET"} []
[2020-05-31T16:27:00.190921+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:27:00.193321+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:27:00.193389+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:27:00.193429+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:27:00.207215+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:27:00.208078+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:27:00.208761+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:27:00.214591+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:27:00.215585+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:27:00.217112+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:27:00.217829+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:27:00.227830+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:27:01.534594+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1eeef7"},"request_uri":"http://localhost:8000/_wdt/1eeef7","method":"GET"} []
[2020-05-31T16:30:53.131619+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:30:53.134014+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:30:53.134082+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:30:53.134122+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:30:53.149700+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:30:53.150379+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:30:53.151061+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:30:53.158320+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:30:53.159288+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:30:53.159927+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:30:53.160498+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:30:53.177588+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:30:54.295414+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"065f24"},"request_uri":"http://localhost:8000/_wdt/065f24","method":"GET"} []
[2020-05-31T16:30:58.370204+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:30:58.379055+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:30:58.379257+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:30:58.379342+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:30:58.401247+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:30:58.402128+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:30:58.403065+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:30:58.411024+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:30:58.411822+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:30:58.412298+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:30:58.412779+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:30:58.423287+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:30:58.701886+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c5959f"},"request_uri":"http://localhost:8000/_wdt/c5959f","method":"GET"} []
[2020-05-31T16:36:35.047067+02:00] console.ERROR: Error thrown while running command "debug:container --show-private --format=json". Message: "The "--show-private" option does not exist." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): The \"--show-private\" option does not exist. at /var/www/inventory/vendor/symfony/console/Input/ArgvInput.php:200)","command":"debug:container --show-private --format=json","message":"The \"--show-private\" option does not exist."} []
[2020-05-31T16:36:35.048741+02:00] console.DEBUG: Command "debug:container --show-private --format=json" exited with code "1" {"command":"debug:container --show-private --format=json","code":1} []
[2020-05-31T16:36:41.895537+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:36:41.898957+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:36:41.899038+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:36:41.899094+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:36:41.911997+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:36:41.912816+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:36:41.913831+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:36:41.920009+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:36:41.920681+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:36:41.921101+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:36:41.921514+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:36:41.929836+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:36:42.227880+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"135f69"},"request_uri":"http://localhost:8000/_wdt/135f69","method":"GET"} []
[2020-05-31T16:36:44.993313+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:36:44.996733+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:36:44.996846+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:36:44.996910+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:36:45.012863+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:36:45.013559+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:36:45.014239+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:36:45.019424+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:36:45.020098+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:36:45.020562+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:36:45.021004+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:36:45.029105+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:36:45.289910+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b8337a"},"request_uri":"http://localhost:8000/_wdt/b8337a","method":"GET"} []
[2020-05-31T16:36:46.335097+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:36:46.337761+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:36:46.337865+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:36:46.337929+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:36:46.352625+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:36:46.353366+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:36:46.354027+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:36:46.359251+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:36:46.359950+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:36:46.360460+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:36:46.361097+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:36:46.368937+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:36:46.627291+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b630da"},"request_uri":"http://localhost:8000/_wdt/b630da","method":"GET"} []
[2020-05-31T16:36:56.603886+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:36:56.606532+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:36:56.606595+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:36:56.606634+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:36:56.670096+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:36:56.670856+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:36:56.671552+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:36:56.683544+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:36:56.684201+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:36:56.684654+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:36:56.685259+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:36:56.695318+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:36:57.021916+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ab572b"},"request_uri":"http://localhost:8000/_wdt/ab572b","method":"GET"} []
[2020-05-31T16:37:00.994118+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-31T16:37:00.995877+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:00.997235+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:00.997704+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:00.998051+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-05-31T16:37:00.998353+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:00.998900+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:00.999352+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:00.999726+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-05-31T16:37:01.000069+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:01.000578+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:01.000913+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:01.001247+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-05-31T16:37:01.001557+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:01.002087+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:01.002441+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:01.002701+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-05-31T16:37:01.002945+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:01.003377+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:01.003663+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:01.003931+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-05-31T16:37:01.004163+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:01.004588+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:01.004979+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:01.005264+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-05-31T16:37:01.005497+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:01.006003+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:01.006489+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:01.006802+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-05-31T16:37:01.007042+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order_item' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:01.007555+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order_item' */ WHERE k.table_name = 'order_item' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:01.008132+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order_item' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:01.008491+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order_item' [] []
[2020-05-31T16:37:01.008731+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:01.009298+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:01.009755+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:01.010115+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-05-31T16:37:01.010352+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:01.010771+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:01.011082+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:01.011320+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-05-31T16:37:01.011540+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:01.012004+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:01.012389+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:01.012742+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-05-31T16:37:01.012991+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:01.013421+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:01.013783+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:01.014075+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-05-31T16:37:01.014305+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:01.014818+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:01.015197+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:01.015525+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-31T16:37:01.015762+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-31T16:37:01.016208+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-31T16:37:01.016503+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-31T16:37:01.016742+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-05-31T16:37:03.773611+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:37:03.779211+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:37:03.779364+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:37:03.779493+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:37:03.803345+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:37:03.805268+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:37:03.806809+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:37:03.817856+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:37:03.819240+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:37:03.820198+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:37:03.821329+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:37:03.833325+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:37:04.213377+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a673ba"},"request_uri":"http://localhost:8000/_wdt/a673ba","method":"GET"} []
[2020-05-31T16:37:06.718239+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=2","method":"GET"} []
[2020-05-31T16:37:06.720555+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:37:06.720623+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:37:06.720663+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:37:06.733055+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:37:06.734019+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 OFFSET 1 [] []
[2020-05-31T16:37:06.735371+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[2]] []
[2020-05-31T16:37:06.741441+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:37:06.742156+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:37:06.742641+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:37:06.743090+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:37:06.751877+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:37:07.075916+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e2ee68"},"request_uri":"http://localhost:8000/_wdt/e2ee68","method":"GET"} []
[2020-05-31T16:37:09.045746+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=2","method":"GET"} []
[2020-05-31T16:37:09.048735+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:37:09.048821+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:37:09.048883+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:37:09.064318+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:37:09.064980+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 OFFSET 1 [] []
[2020-05-31T16:37:09.065661+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[2]] []
[2020-05-31T16:37:09.071824+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:37:09.072740+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:37:09.073438+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:37:09.073996+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:37:09.082091+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:37:09.358962+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1585be"},"request_uri":"http://localhost:8000/_wdt/1585be","method":"GET"} []
[2020-05-31T16:37:11.364698+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:37:11.366231+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:37:11.366294+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:37:11.366334+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:37:11.376574+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:37:11.377183+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:37:11.377757+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:37:11.382740+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:37:11.383504+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:37:11.384105+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:37:11.384678+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:37:11.393024+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:37:11.700086+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"45d946"},"request_uri":"http://localhost:8000/_wdt/45d946","method":"GET"} []
[2020-05-31T16:37:15.716347+02:00] php.DEBUG: Warning: include(/var/www/inventory/var/cache/de_/App_KernelDevDebugContainer.php): failed to open stream: No such file or directory {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/var/www/inventory/vendor/symfony/http-kernel/Kernel.php","line":456,"trace":[{"file":"/var/www/inventory/vendor/symfony/http-kernel/Kernel.php","line":456,"function":"include"}],"count":1}}} []
[2020-05-31T16:37:15.717563+02:00] php.DEBUG: Warning: include(): Failed opening '/var/www/inventory/var/cache/de_/App_KernelDevDebugContainer.php' for inclusion (include_path='.:/usr/share/php') [] []
[2020-05-31T16:37:19.690828+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:37:19.693201+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:37:19.693261+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:37:19.693298+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:37:19.753841+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:37:19.754557+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:37:19.755521+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:37:19.766411+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:37:19.767085+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:37:19.767581+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:37:19.768152+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:37:19.786119+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:37:20.169423+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"04dafa"},"request_uri":"http://localhost:8000/_wdt/04dafa","method":"GET"} []
[2020-05-31T16:37:22.737367+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:37:22.741576+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:37:22.741683+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:37:22.741748+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:37:22.758386+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:37:22.759681+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:37:22.761034+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:37:22.767597+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:37:22.768475+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:37:22.769133+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:37:22.769728+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:37:22.805613+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:37:23.258326+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"01f916"},"request_uri":"http://localhost:8000/_wdt/01f916","method":"GET"} []
[2020-05-31T16:38:44.459276+02:00] console.ERROR: Error thrown while running command "debug:container --show-private --format=json". Message: "The "--show-private" option does not exist." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): The \"--show-private\" option does not exist. at /var/www/inventory/vendor/symfony/console/Input/ArgvInput.php:200)","command":"debug:container --show-private --format=json","message":"The \"--show-private\" option does not exist."} []
[2020-05-31T16:38:44.461097+02:00] console.DEBUG: Command "debug:container --show-private --format=json" exited with code "1" {"command":"debug:container --show-private --format=json","code":1} []
[2020-05-31T16:38:44.581376+02:00] console.ERROR: Error thrown while running command "debug:container --show-private --format=json". Message: "The "--show-private" option does not exist." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): The \"--show-private\" option does not exist. at /var/www/inventory/vendor/symfony/console/Input/ArgvInput.php:200)","command":"debug:container --show-private --format=json","message":"The \"--show-private\" option does not exist."} []
[2020-05-31T16:38:44.583052+02:00] console.DEBUG: Command "debug:container --show-private --format=json" exited with code "1" {"command":"debug:container --show-private --format=json","code":1} []
[2020-05-31T16:38:44.816205+02:00] console.ERROR: Error thrown while running command "debug:container --show-private --format=json". Message: "The "--show-private" option does not exist." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): The \"--show-private\" option does not exist. at /var/www/inventory/vendor/symfony/console/Input/ArgvInput.php:200)","command":"debug:container --show-private --format=json","message":"The \"--show-private\" option does not exist."} []
[2020-05-31T16:38:44.817395+02:00] console.DEBUG: Command "debug:container --show-private --format=json" exited with code "1" {"command":"debug:container --show-private --format=json","code":1} []
[2020-05-31T16:38:44.992637+02:00] console.ERROR: Error thrown while running command "debug:container --show-private --format=json". Message: "The "--show-private" option does not exist." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): The \"--show-private\" option does not exist. at /var/www/inventory/vendor/symfony/console/Input/ArgvInput.php:200)","command":"debug:container --show-private --format=json","message":"The \"--show-private\" option does not exist."} []
[2020-05-31T16:38:44.993782+02:00] console.DEBUG: Command "debug:container --show-private --format=json" exited with code "1" {"command":"debug:container --show-private --format=json","code":1} []
[2020-05-31T16:40:26.515611+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:40:26.517842+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:40:26.517909+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:40:26.517949+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:40:26.533712+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:40:26.534353+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:40:26.534986+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:40:26.539731+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:40:26.540400+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:40:26.540796+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:40:26.541195+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:40:26.552698+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:40:26.810386+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"908b78"},"request_uri":"http://localhost:8000/_wdt/908b78","method":"GET"} []
[2020-05-31T16:40:29.043701+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:40:29.046259+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:40:29.046332+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:40:29.046373+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:40:29.059417+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:40:29.060137+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:40:29.060852+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:40:29.065397+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:40:29.066060+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:40:29.066496+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:40:29.066961+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:40:29.075580+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:40:29.376703+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0f3035"},"request_uri":"http://localhost:8000/_wdt/0f3035","method":"GET"} []
[2020-05-31T16:40:34.463266+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=2","method":"GET"} []
[2020-05-31T16:40:34.465850+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:40:34.465924+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:40:34.465965+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:40:34.478774+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:40:34.479571+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 OFFSET 1 [] []
[2020-05-31T16:40:34.480346+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[2]] []
[2020-05-31T16:40:34.485079+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:40:34.485872+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:40:34.486476+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:40:34.486948+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:40:34.495312+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:40:34.804422+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2f82c0"},"request_uri":"http://localhost:8000/_wdt/2f82c0","method":"GET"} []
[2020-05-31T16:41:06.411414+02:00] console.ERROR: Error thrown while running command "debug:container --show-private --format=json". Message: "The "--show-private" option does not exist." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): The \"--show-private\" option does not exist. at /var/www/inventory/vendor/symfony/console/Input/ArgvInput.php:200)","command":"debug:container --show-private --format=json","message":"The \"--show-private\" option does not exist."} []
[2020-05-31T16:41:06.411913+02:00] console.DEBUG: Command "debug:container --show-private --format=json" exited with code "1" {"command":"debug:container --show-private --format=json","code":1} []
[2020-05-31T16:41:06.875175+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=2","method":"GET"} []
[2020-05-31T16:41:06.875893+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:41:06.875969+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:06.876030+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:06.891306+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:41:06.892013+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 OFFSET 1 [] []
[2020-05-31T16:41:06.892643+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[2]] []
[2020-05-31T16:41:06.897439+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:41:06.898079+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:41:06.898509+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:41:06.898917+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:41:06.908164+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:41:07.157576+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ea97c6"},"request_uri":"http://localhost:8000/_wdt/ea97c6","method":"GET"} []
[2020-05-31T16:41:08.245334+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=3","method":"GET"} []
[2020-05-31T16:41:08.246976+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:41:08.247039+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:08.247077+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:08.257922+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:41:08.258584+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 OFFSET 2 [] []
[2020-05-31T16:41:08.259308+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[3]] []
[2020-05-31T16:41:08.263361+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:41:08.264004+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:41:08.264422+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:41:08.264835+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:41:08.272785+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:41:08.623401+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7b5738"},"request_uri":"http://localhost:8000/_wdt/7b5738","method":"GET"} []
[2020-05-31T16:41:10.161778+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:41:10.164446+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:41:10.164517+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:10.164556+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:10.176386+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:41:10.177153+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:41:10.177798+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:41:10.182227+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:41:10.182882+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:41:10.183313+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:41:10.183723+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:41:10.191165+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:41:10.498810+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cb3560"},"request_uri":"http://localhost:8000/_wdt/cb3560","method":"GET"} []
[2020-05-31T16:41:11.205026+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=2","method":"GET"} []
[2020-05-31T16:41:11.206501+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:41:11.206564+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:11.206603+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:11.217071+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:41:11.217650+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 OFFSET 1 [] []
[2020-05-31T16:41:11.218234+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[2]] []
[2020-05-31T16:41:11.223280+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:41:11.223952+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:41:11.224386+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:41:11.224836+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:41:11.232231+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:41:11.518359+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"05634f"},"request_uri":"http://localhost:8000/_wdt/05634f","method":"GET"} []
[2020-05-31T16:41:13.393465+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=3","method":"GET"} []
[2020-05-31T16:41:13.396452+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:41:13.396538+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:13.396590+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:13.410025+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:41:13.410647+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 OFFSET 2 [] []
[2020-05-31T16:41:13.411311+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[3]] []
[2020-05-31T16:41:13.416492+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:41:13.417336+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:41:13.417960+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:41:13.419185+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:41:13.427155+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:41:13.711411+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3cfe5f"},"request_uri":"http://localhost:8000/_wdt/3cfe5f","method":"GET"} []
[2020-05-31T16:41:15.723853+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=2","method":"GET"} []
[2020-05-31T16:41:15.725646+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:41:15.725732+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:15.725977+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:15.737735+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:41:15.738369+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 OFFSET 1 [] []
[2020-05-31T16:41:15.738946+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[2]] []
[2020-05-31T16:41:15.743433+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:41:15.744261+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:41:15.744752+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:41:15.745199+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:41:15.752397+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:41:16.023653+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8dfae8"},"request_uri":"http://localhost:8000/_wdt/8dfae8","method":"GET"} []
[2020-05-31T16:41:16.594784+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:41:16.597229+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:41:16.597484+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:16.597625+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:16.610366+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:41:16.611142+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 1 [] []
[2020-05-31T16:41:16.611914+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T16:41:16.616768+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:41:16.617401+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:41:16.617824+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:41:16.618252+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:41:16.625990+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:41:16.918958+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c826db"},"request_uri":"http://localhost:8000/_wdt/c826db","method":"GET"} []
[2020-05-31T16:41:38.210291+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"GET"} []
[2020-05-31T16:41:38.212554+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:41:38.212621+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:38.212659+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:38.225944+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:41:38.226553+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:41:38.227439+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:41:38.232121+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:41:38.232884+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:41:38.233496+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:41:38.234299+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:41:38.242868+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:41:38.509044+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"91c2e1"},"request_uri":"http://localhost:8000/_wdt/91c2e1","method":"GET"} []
[2020-05-31T16:41:43.388367+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"POST"} []
[2020-05-31T16:41:43.390994+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:41:43.391058+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:43.391096+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:43.391244+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:41:43.396181+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:41:43.406405+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:41:43.407130+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:41:43.407576+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:41:43.408047+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [1] []
[2020-05-31T16:41:43.410641+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:41:43.411183+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:41:43.412140+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:41:43.413502+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:41:43.414054+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:41:43.414425+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:41:43.414775+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:41:43.722704+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a0c95c"},"request_uri":"http://localhost:8000/_wdt/a0c95c","method":"GET"} []
[2020-05-31T16:41:50.752129+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?page=1","method":"POST"} []
[2020-05-31T16:41:50.755533+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:41:50.755639+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:50.755710+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:50.755955+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:41:50.761621+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:41:50.771845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:41:50.772316+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:41:50.772702+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:41:50.772996+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [1] []
[2020-05-31T16:41:50.775132+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["1"]] []
[2020-05-31T16:41:50.775730+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["2"]] []
[2020-05-31T16:41:50.776245+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-05-31T16:41:50.776707+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["3"]] []
[2020-05-31T16:41:50.802882+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T16:41:50.803129+02:00] doctrine.DEBUG: UPDATE product SET product_type_id = ? WHERE id = ? [3,1] []
[2020-05-31T16:41:50.803605+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T16:41:50.957500+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:41:50.959138+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:41:50.959213+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:50.959253+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:41:50.969881+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:41:50.971218+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:41:50.972150+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:41:50.976900+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:41:50.977919+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:41:50.978535+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:41:50.979060+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:41:50.987281+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:41:51.281236+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"73317f"},"request_uri":"http://localhost:8000/_wdt/73317f","method":"GET"} []
[2020-05-31T16:44:02.198886+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:44:02.201577+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:44:02.201652+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:44:02.201707+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:44:02.216962+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:44:02.217754+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:44:02.218663+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:44:02.225349+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:44:02.226015+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:44:02.226438+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:44:02.226817+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:44:02.246222+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:44:02.613923+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd54d3"},"request_uri":"http://localhost:8000/_wdt/fd54d3","method":"GET"} []
[2020-05-31T16:44:03.786860+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:44:03.788848+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:44:03.788946+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:44:03.789003+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:44:03.799464+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:44:03.800115+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:44:03.800696+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:44:03.805189+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:44:03.806101+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:44:03.806652+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:44:03.807102+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:44:03.816572+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:44:04.122555+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b00fc2"},"request_uri":"http://localhost:8000/_wdt/b00fc2","method":"GET"} []
[2020-05-31T16:44:04.684594+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:44:04.687667+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:44:04.687812+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:44:04.687900+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:44:04.710324+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:44:04.711681+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:44:04.713085+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:44:04.720606+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:44:04.721544+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:44:04.722259+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:44:04.723075+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:44:04.734372+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:44:05.030236+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fae492"},"request_uri":"http://localhost:8000/_wdt/fae492","method":"GET"} []
[2020-05-31T16:44:09.944994+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"3"},"request_uri":"http://localhost:8000/product/3","method":"GET"} []
[2020-05-31T16:44:09.947576+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:44:09.947659+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:44:09.947709+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:44:09.953162+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["3"] []
[2020-05-31T16:44:09.966293+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:44:10.256183+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"69fe8c"},"request_uri":"http://localhost:8000/_wdt/69fe8c","method":"GET"} []
[2020-05-31T16:44:24.414027+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:44:24.417339+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:44:24.417441+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:44:24.417489+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:44:24.430199+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:44:24.431184+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:44:24.432370+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:44:24.437317+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:44:24.438639+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:44:24.439286+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:44:24.439828+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:44:24.448090+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:44:24.726827+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a81f2d"},"request_uri":"http://localhost:8000/_wdt/a81f2d","method":"GET"} []
[2020-05-31T16:44:44.947911+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-05-31T16:44:44.950587+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:44:44.950659+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:44:44.950699+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:44:44.955300+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-05-31T16:44:44.965990+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:44:45.251288+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a5bbb3"},"request_uri":"http://localhost:8000/_wdt/a5bbb3","method":"GET"} []
[2020-05-31T16:46:13.932444+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-05-31T16:46:13.938156+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:46:13.938290+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:46:13.938392+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:46:13.944087+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-05-31T16:46:13.955268+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:46:13.955633+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:46:13.957921+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:46:14.253064+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1233fc"},"request_uri":"http://localhost:8000/_wdt/1233fc","method":"GET"} []
[2020-05-31T16:47:13.465230+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-05-31T16:47:13.468489+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:47:13.468577+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:13.468635+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:13.473801+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-05-31T16:47:13.486297+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:47:13.487053+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:47:13.487381+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:47:13.489645+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:47:13.800624+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f5084d"},"request_uri":"http://localhost:8000/_wdt/f5084d","method":"GET"} []
[2020-05-31T16:47:30.844406+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-05-31T16:47:30.846956+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:47:30.847033+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:30.847074+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:30.852905+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-05-31T16:47:30.859478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:47:30.860045+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:47:30.860377+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:47:30.863435+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:47:31.197969+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"83f2db"},"request_uri":"http://localhost:8000/_wdt/83f2db","method":"GET"} []
[2020-05-31T16:47:32.322434+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a81f2d"},"request_uri":"http://localhost:8000/_wdt/a81f2d","method":"GET"} []
[2020-05-31T16:47:35.071302+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:47:35.074095+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:47:35.074217+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:35.074271+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:35.086940+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:47:35.087680+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:47:35.088408+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:47:35.093093+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:47:35.093735+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:47:35.094171+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:47:35.094551+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:47:35.102309+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:47:35.391796+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"867821"},"request_uri":"http://localhost:8000/_wdt/867821","method":"GET"} []
[2020-05-31T16:47:37.665110+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:47:37.667864+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:47:37.667996+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:37.668094+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:37.684483+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:47:37.685554+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:47:37.686717+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:47:37.694329+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:47:37.695411+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:47:37.696206+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:47:37.697043+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:47:37.708177+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:47:38.044124+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5e2258"},"request_uri":"http://localhost:8000/_wdt/5e2258","method":"GET"} []
[2020-05-31T16:47:41.359427+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:47:41.361965+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:47:41.362060+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:41.362128+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:41.377206+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:47:41.377975+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:47:41.378737+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:47:41.383779+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:47:41.384481+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:47:41.384921+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:47:41.385354+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:47:41.394072+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:47:41.708637+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1735bc"},"request_uri":"http://localhost:8000/_wdt/1735bc","method":"GET"} []
[2020-05-31T16:47:42.877185+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"3"},"request_uri":"http://localhost:8000/product/3","method":"GET"} []
[2020-05-31T16:47:42.880255+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:47:42.880346+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:42.880396+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:42.885285+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["3"] []
[2020-05-31T16:47:42.894412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T16:47:42.895128+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:47:42.895488+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:47:42.898113+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:47:43.202777+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"316e23"},"request_uri":"http://localhost:8000/_wdt/316e23","method":"GET"} []
[2020-05-31T16:47:54.741400+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:47:54.744760+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:47:54.744837+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:54.744879+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:47:54.758657+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:47:54.759364+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:47:54.760150+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:47:54.765907+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:47:54.766596+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:47:54.767041+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:47:54.767475+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:47:54.775898+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:47:55.103215+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f2f930"},"request_uri":"http://localhost:8000/_wdt/f2f930","method":"GET"} []
[2020-05-31T16:48:13.443423+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:48:13.447124+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:48:13.447238+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:13.447311+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:13.464631+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:48:13.465655+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:48:13.466754+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:48:13.472937+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:48:13.473874+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:48:13.474549+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:48:13.475198+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:48:13.488681+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:48:13.902698+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"856869"},"request_uri":"http://localhost:8000/_wdt/856869","method":"GET"} []
[2020-05-31T16:48:16.246119+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:48:16.250224+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:48:16.250307+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:16.250379+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:16.264891+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:48:16.265776+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:48:16.266709+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:48:16.271671+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:48:16.272677+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:48:16.273295+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:48:16.273845+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:48:16.283198+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:48:16.568154+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"66b651"},"request_uri":"http://localhost:8000/_wdt/66b651","method":"GET"} []
[2020-05-31T16:48:17.225872+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:48:17.228758+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:48:17.228838+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:17.228882+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:17.240067+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:48:17.240783+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:48:17.241383+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:48:17.247411+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:48:17.248251+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:48:17.248804+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:48:17.249345+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:48:17.257554+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:48:17.587454+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6cf1da"},"request_uri":"http://localhost:8000/_wdt/6cf1da","method":"GET"} []
[2020-05-31T16:48:19.558647+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-05-31T16:48:19.561486+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:48:19.561595+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:19.561659+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:19.568652+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-05-31T16:48:19.579717+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:48:19.580278+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:48:19.580630+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:48:19.584120+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:48:19.898504+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"db751e"},"request_uri":"http://localhost:8000/_wdt/db751e","method":"GET"} []
[2020-05-31T16:48:21.533077+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6cf1da"},"request_uri":"http://localhost:8000/_wdt/6cf1da","method":"GET"} []
[2020-05-31T16:48:23.089306+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T16:48:23.092517+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:48:23.092606+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:23.092663+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:23.092859+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:48:23.100982+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:48:23.116610+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:48:23.117159+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:48:23.117580+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:48:23.118696+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:48:23.122822+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:48:23.123665+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:48:23.124647+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:48:23.126547+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:48:23.127461+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:48:23.128146+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:48:23.129094+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:48:23.576732+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0faae7"},"request_uri":"http://localhost:8000/_wdt/0faae7","method":"GET"} []
[2020-05-31T16:48:30.319104+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T16:48:30.322177+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:48:30.322262+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:30.322322+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:30.322571+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:48:30.329348+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:48:30.339015+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:48:30.339719+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:48:30.340187+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:48:30.340550+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:48:30.343966+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["1"]] []
[2020-05-31T16:48:30.344734+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["2"]] []
[2020-05-31T16:48:30.345232+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-05-31T16:48:30.345711+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["3"]] []
[2020-05-31T16:48:30.353727+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T16:48:30.353958+02:00] doctrine.DEBUG: UPDATE product SET quantity = ? WHERE id = ? [10,1] []
[2020-05-31T16:48:30.354280+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T16:48:30.467870+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:48:30.470634+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:48:30.470737+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:30.470796+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:48:30.484733+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:48:30.486096+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:48:30.487524+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:48:30.492785+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:48:30.493624+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:48:30.494178+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:48:30.495255+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:48:30.502795+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:48:30.805769+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1df9b0"},"request_uri":"http://localhost:8000/_wdt/1df9b0","method":"GET"} []
[2020-05-31T16:49:13.491724+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:49:13.494322+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:49:13.494437+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:49:13.494511+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:49:13.508742+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:49:13.509419+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:49:13.510141+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:49:13.515097+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:49:13.515849+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:49:13.516325+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:49:13.516732+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:49:13.524797+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:49:13.798394+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2eabba"},"request_uri":"http://localhost:8000/_wdt/2eabba","method":"GET"} []
[2020-05-31T16:49:52.094697+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-05-31T16:49:52.097185+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:49:52.097254+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:49:52.097293+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:49:52.102185+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-05-31T16:49:52.110351+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:49:52.110714+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:49:52.110959+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:49:52.113089+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:49:52.411308+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"33ee40"},"request_uri":"http://localhost:8000/_wdt/33ee40","method":"GET"} []
[2020-05-31T16:50:18.645945+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-05-31T16:50:18.649499+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:50:18.649588+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:50:18.649665+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:50:18.655208+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-05-31T16:50:18.666369+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:50:18.666831+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:50:18.667199+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:50:18.669252+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:50:18.922441+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6de3d5"},"request_uri":"http://localhost:8000/_wdt/6de3d5","method":"GET"} []
[2020-05-31T16:50:21.279998+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T16:50:21.282858+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:50:21.282944+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:50:21.283007+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:50:21.297320+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:50:21.298072+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:50:21.298804+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:50:21.303561+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:50:21.304368+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:50:21.304992+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:50:21.305523+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:50:21.316058+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:50:21.616979+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8729f6"},"request_uri":"http://localhost:8000/_wdt/8729f6","method":"GET"} []
[2020-05-31T16:52:27.219642+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T16:52:27.222343+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:52:27.222411+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:52:27.222450+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:52:27.222600+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:52:27.227805+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:52:27.238337+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:52:27.238756+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:52:27.239106+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:52:27.239399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:52:27.241824+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:52:27.242385+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:52:27.243058+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:52:27.244398+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:52:27.244977+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:52:27.245429+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:52:27.245858+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:52:27.545743+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b6f1af"},"request_uri":"http://localhost:8000/_wdt/b6f1af","method":"GET"} []
[2020-05-31T16:55:40.068372+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T16:55:40.071137+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:55:40.071215+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:55:40.071268+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:55:40.071489+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:55:40.076552+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:55:40.085802+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:55:40.086298+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:55:40.086685+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:55:40.087025+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:55:40.090609+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:55:40.091287+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:55:40.091999+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:55:40.093407+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:55:40.094021+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:55:40.094636+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:55:40.095117+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:55:40.422812+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0c0f86"},"request_uri":"http://localhost:8000/_wdt/0c0f86","method":"GET"} []
[2020-05-31T16:56:57.813673+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T16:56:57.816322+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:56:57.816399+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:56:57.816440+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:56:57.816598+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:56:57.821604+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:56:57.830420+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:56:57.830930+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:56:57.831272+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:56:57.831786+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:56:57.835310+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:56:57.835999+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:56:57.836735+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:56:57.838308+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:56:57.838941+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:56:57.839407+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:56:57.839862+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:56:58.163698+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bb2183"},"request_uri":"http://localhost:8000/_wdt/bb2183","method":"GET"} []
[2020-05-31T16:57:47.838149+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T16:57:47.840927+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:57:47.840997+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:57:47.841056+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:57:47.841272+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:57:47.846622+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:57:47.857610+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:57:47.858097+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:57:47.858461+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:57:47.858792+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:57:47.861574+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:57:47.862217+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:57:47.862930+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:57:47.864640+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:57:47.865387+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:57:47.865892+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:57:47.866337+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:57:48.184603+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"15eb5b"},"request_uri":"http://localhost:8000/_wdt/15eb5b","method":"GET"} []
[2020-05-31T16:58:09.789030+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T16:58:09.792206+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:58:09.792279+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:58:09.792319+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:58:09.792475+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:58:09.797638+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:58:09.806213+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:58:09.806672+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:58:09.806960+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:58:09.807222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:58:09.810039+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:58:09.810764+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:58:09.811555+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:58:09.813654+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:58:09.814867+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:58:09.815331+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:58:09.815718+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:58:10.140781+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d8f179"},"request_uri":"http://localhost:8000/_wdt/d8f179","method":"GET"} []
[2020-05-31T16:58:21.738463+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T16:58:21.741132+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:58:21.741203+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:58:21.741245+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:58:21.741411+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:58:21.749712+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:58:21.764585+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:58:21.765005+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:58:21.765291+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:58:21.765598+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:58:21.768243+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:58:21.768771+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:58:21.769473+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:58:21.770846+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:58:21.771434+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:58:21.771871+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:58:21.772255+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:58:22.103239+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d44f69"},"request_uri":"http://localhost:8000/_wdt/d44f69","method":"GET"} []
[2020-05-31T16:58:32.856538+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T16:58:32.859393+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:58:32.859468+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:58:32.859521+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:58:32.859743+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:58:32.865344+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:58:32.874387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:58:32.874873+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:58:32.875206+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:58:32.875576+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:58:32.878184+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:58:32.878853+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:58:32.879558+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:58:32.881070+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:58:32.881766+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:58:32.882424+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:58:32.882889+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:58:33.160035+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"156c63"},"request_uri":"http://localhost:8000/_wdt/156c63","method":"GET"} []
[2020-05-31T16:59:11.936199+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T16:59:11.940115+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:59:11.940192+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:59:11.940245+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:59:11.940494+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:59:11.945769+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:59:11.955432+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:59:11.955900+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:59:11.956228+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:59:11.956537+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:59:11.959374+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:59:11.960087+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:59:11.960973+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:59:11.962509+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:59:11.963198+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:59:11.963718+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:59:11.964240+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:59:12.252883+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"868272"},"request_uri":"http://localhost:8000/_wdt/868272","method":"GET"} []
[2020-05-31T16:59:29.244620+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T16:59:29.247387+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T16:59:29.247462+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:59:29.247517+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T16:59:29.247736+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T16:59:29.253510+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T16:59:29.264205+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T16:59:29.264723+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T16:59:29.265110+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T16:59:29.265413+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T16:59:29.268105+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T16:59:29.268633+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T16:59:29.269289+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T16:59:29.271438+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T16:59:29.272396+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T16:59:29.273133+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T16:59:29.273638+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T16:59:29.615880+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"561e9c"},"request_uri":"http://localhost:8000/_wdt/561e9c","method":"GET"} []
[2020-05-31T17:00:37.949885+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:00:37.953675+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:00:37.953769+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:00:37.953839+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:00:37.954109+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:00:37.960841+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:00:37.971584+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:00:37.972110+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:00:37.972479+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:00:37.972838+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:00:37.975867+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:00:37.976882+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:00:37.977864+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:00:37.979674+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:00:37.980917+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:00:37.981636+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:00:37.982219+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:00:37.997126+02:00] php.CRITICAL: Uncaught Error: Argument 1 passed to Symfony\Bridge\Twig\Extension\TranslationExtension::trans() must be of the type string, array given, called in /var/www/inventory/var/cache/dev/twig/70/70a04d6f2ea90f08a4010f3edcd06b1673ffa988ff9dcb0288a332c1d071bf77.php on line 1313 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Bridge\\Twig\\Extension\\TranslationExtension::trans() must be of the type string, array given, called in /var/www/inventory/var/cache/dev/twig/70/70a04d6f2ea90f08a4010f3edcd06b1673ffa988ff9dcb0288a332c1d071bf77.php on line 1313 at /var/www/inventory/vendor/symfony/twig-bridge/Extension/TranslationExtension.php:95)"} []
[2020-05-31T17:00:37.998685+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 1 passed to Symfony\Bridge\Twig\Extension\TranslationExtension::trans() must be of the type string, array given, called in /var/www/inventory/var/cache/dev/twig/70/70a04d6f2ea90f08a4010f3edcd06b1673ffa988ff9dcb0288a332c1d071bf77.php on line 1313" at /var/www/inventory/vendor/symfony/twig-bridge/Extension/TranslationExtension.php line 95 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Bridge\\Twig\\Extension\\TranslationExtension::trans() must be of the type string, array given, called in /var/www/inventory/var/cache/dev/twig/70/70a04d6f2ea90f08a4010f3edcd06b1673ffa988ff9dcb0288a332c1d071bf77.php on line 1313 at /var/www/inventory/vendor/symfony/twig-bridge/Extension/TranslationExtension.php:95)"} []
[2020-05-31T17:00:38.197206+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a9509e"},"request_uri":"http://localhost:8000/_wdt/a9509e","method":"GET"} []
[2020-05-31T17:01:09.800859+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:01:09.803416+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:01:09.803485+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:01:09.803526+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:01:09.803685+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:01:09.809017+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:01:09.818627+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:01:09.819050+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:01:09.819386+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:01:09.819664+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:01:09.822093+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:01:09.822878+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:01:09.823618+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:01:09.825009+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:01:09.825607+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:01:09.825997+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:01:09.826371+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:01:09.840054+02:00] php.CRITICAL: Uncaught Error: Argument 1 passed to Symfony\Bridge\Twig\Extension\TranslationExtension::trans() must be of the type string, array given, called in /var/www/inventory/var/cache/dev/twig/70/70a04d6f2ea90f08a4010f3edcd06b1673ffa988ff9dcb0288a332c1d071bf77.php on line 1313 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Bridge\\Twig\\Extension\\TranslationExtension::trans() must be of the type string, array given, called in /var/www/inventory/var/cache/dev/twig/70/70a04d6f2ea90f08a4010f3edcd06b1673ffa988ff9dcb0288a332c1d071bf77.php on line 1313 at /var/www/inventory/vendor/symfony/twig-bridge/Extension/TranslationExtension.php:95)"} []
[2020-05-31T17:01:09.841627+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 1 passed to Symfony\Bridge\Twig\Extension\TranslationExtension::trans() must be of the type string, array given, called in /var/www/inventory/var/cache/dev/twig/70/70a04d6f2ea90f08a4010f3edcd06b1673ffa988ff9dcb0288a332c1d071bf77.php on line 1313" at /var/www/inventory/vendor/symfony/twig-bridge/Extension/TranslationExtension.php line 95 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Bridge\\Twig\\Extension\\TranslationExtension::trans() must be of the type string, array given, called in /var/www/inventory/var/cache/dev/twig/70/70a04d6f2ea90f08a4010f3edcd06b1673ffa988ff9dcb0288a332c1d071bf77.php on line 1313 at /var/www/inventory/vendor/symfony/twig-bridge/Extension/TranslationExtension.php:95)"} []
[2020-05-31T17:01:10.017158+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6c7e47"},"request_uri":"http://localhost:8000/_wdt/6c7e47","method":"GET"} []
[2020-05-31T17:01:24.632080+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:01:24.635518+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:01:24.635592+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:01:24.635646+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:01:24.635875+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:01:24.642634+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:01:24.652108+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:01:24.652582+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:01:24.652946+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:01:24.653283+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:01:24.656550+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:01:24.657264+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:01:24.657976+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:01:24.659430+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:01:24.660063+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:01:24.660458+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:01:24.660832+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:01:25.009356+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a9c9a5"},"request_uri":"http://localhost:8000/_wdt/a9c9a5","method":"GET"} []
[2020-05-31T17:01:42.775124+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:01:42.780721+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:01:42.780926+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:01:42.781039+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:01:42.781368+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:01:42.794622+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:01:42.817685+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:01:42.818697+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:01:42.819740+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:01:42.820606+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:01:42.825589+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:01:42.827034+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:01:42.828700+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:01:42.831878+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:01:42.833492+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:01:42.834648+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:01:42.835580+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:01:43.142068+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8bab2f"},"request_uri":"http://localhost:8000/_wdt/8bab2f","method":"GET"} []
[2020-05-31T17:01:53.078196+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:01:53.081846+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:01:53.081947+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:01:53.082007+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:01:53.082264+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:01:53.089733+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:01:53.104396+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:01:53.104934+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:01:53.105305+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:01:53.105706+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:01:53.109510+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:01:53.110501+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:01:53.111529+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:01:53.114518+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:01:53.115417+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:01:53.116068+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:01:53.116647+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:01:53.557934+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"350211"},"request_uri":"http://localhost:8000/_wdt/350211","method":"GET"} []
[2020-05-31T17:02:50.084331+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:02:50.088438+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:02:50.088547+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:02:50.088610+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:02:50.088932+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:02:50.097703+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:02:50.107710+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:02:50.108322+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:02:50.108813+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:02:50.109243+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:02:50.112537+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:02:50.113643+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:02:50.115451+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:02:50.117092+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:02:50.117810+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:02:50.118391+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:02:50.118846+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:02:50.497588+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5e4c04"},"request_uri":"http://localhost:8000/_wdt/5e4c04","method":"GET"} []
[2020-05-31T17:03:14.986227+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:03:14.990384+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:03:14.990485+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:03:14.990547+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:03:14.990816+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:03:14.999029+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:03:15.014047+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:03:15.014650+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:03:15.015107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:03:15.015527+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:03:15.020653+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:03:15.021794+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:03:15.023052+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:03:15.025680+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:03:15.026883+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:03:15.027695+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:03:15.028566+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:03:15.408776+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eb5bbc"},"request_uri":"http://localhost:8000/_wdt/eb5bbc","method":"GET"} []
[2020-05-31T17:03:37.952631+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:03:37.955493+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:03:37.955563+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:03:37.955621+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:03:37.955855+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:03:37.961474+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:03:37.972230+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:03:37.972661+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:03:37.972941+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:03:37.973241+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:03:37.975988+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:03:37.976609+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:03:37.977484+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:03:37.979403+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:03:37.981225+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:03:37.981889+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:03:37.982317+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:03:38.326913+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d4868c"},"request_uri":"http://localhost:8000/_wdt/d4868c","method":"GET"} []
[2020-05-31T17:04:25.979809+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:04:25.984248+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:04:25.984343+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:04:25.984395+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:04:25.984609+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:04:25.990482+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:04:26.001038+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:04:26.001517+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:04:26.001810+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:04:26.002091+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:04:26.004752+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:04:26.005290+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:04:26.006148+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:04:26.007868+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:04:26.008651+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:04:26.009108+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:04:26.009508+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:04:26.358280+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ed69b7"},"request_uri":"http://localhost:8000/_wdt/ed69b7","method":"GET"} []
[2020-05-31T17:05:45.989350+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:05:45.993930+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:05:45.994034+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:05:45.994106+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:05:45.994365+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:05:46.001382+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:05:46.011133+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:05:46.011611+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:05:46.011988+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:05:46.012336+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:05:46.015113+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:05:46.015808+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:05:46.016503+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:05:46.018001+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:05:46.018704+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:05:46.019228+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:05:46.019783+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:05:46.373739+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"297503"},"request_uri":"http://localhost:8000/_wdt/297503","method":"GET"} []
[2020-05-31T17:05:55.214151+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:05:55.216682+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:05:55.216783+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:05:55.216849+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:05:55.217076+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:05:55.222628+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:05:55.232826+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:05:55.233328+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:05:55.233686+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:05:55.233998+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:05:55.236162+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["1"]] []
[2020-05-31T17:05:55.236766+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["2"]] []
[2020-05-31T17:05:55.237252+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-05-31T17:05:55.237725+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["3"]] []
[2020-05-31T17:05:55.247262+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T17:05:55.247503+02:00] doctrine.DEBUG: UPDATE product SET isavailable = ? WHERE id = ? [false,1] []
[2020-05-31T17:05:55.247889+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T17:05:55.423963+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:05:55.425752+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:05:55.425825+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:05:55.425867+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:05:55.437035+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:05:55.437905+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:05:55.438696+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:05:55.443646+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:05:55.444668+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:05:55.445246+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:05:55.445774+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:05:55.456129+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:05:55.775839+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"379537"},"request_uri":"http://localhost:8000/_wdt/379537","method":"GET"} []
[2020-05-31T17:05:57.973645+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:05:57.975513+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:05:57.975583+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:05:57.975625+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:05:57.975755+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:05:57.980315+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["2"] []
[2020-05-31T17:05:57.991293+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [3] []
[2020-05-31T17:05:57.992079+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-05-31T17:05:57.992403+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [1] []
[2020-05-31T17:05:57.992998+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:05:57.995407+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:05:57.996039+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:05:57.996756+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:05:57.998183+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:05:57.998842+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:05:57.999463+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:05:58.000154+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:05:58.352241+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1b440b"},"request_uri":"http://localhost:8000/_wdt/1b440b","method":"GET"} []
[2020-05-31T17:06:01.787173+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:06:01.790882+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:06:01.790988+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:06:01.791079+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:06:01.791428+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:06:01.799573+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["2"] []
[2020-05-31T17:06:01.815284+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [3] []
[2020-05-31T17:06:01.816031+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-05-31T17:06:01.816700+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [1] []
[2020-05-31T17:06:01.817363+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:06:01.821672+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["3"]] []
[2020-05-31T17:06:01.822675+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-05-31T17:06:01.823415+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["1"]] []
[2020-05-31T17:06:01.824198+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-05-31T17:06:01.874045+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:06:01.875899+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:06:01.875976+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:06:01.876034+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:06:01.887568+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:06:01.888326+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:06:01.888992+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:06:01.893744+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:06:01.894767+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:06:01.895499+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:06:01.896056+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:06:01.905079+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:06:02.215284+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c05e7c"},"request_uri":"http://localhost:8000/_wdt/c05e7c","method":"GET"} []
[2020-05-31T17:08:07.415919+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:08:07.418280+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:08:07.418355+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:08:07.418395+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:08:07.431148+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:08:07.431972+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:08:07.432699+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:08:07.437512+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:08:07.438428+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:08:07.439090+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:08:07.439688+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:08:07.455700+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:08:07.787452+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b41294"},"request_uri":"http://localhost:8000/_wdt/b41294","method":"GET"} []
[2020-05-31T17:08:09.278058+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:08:09.280717+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:08:09.280832+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:08:09.280898+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:08:09.281085+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:08:09.286286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:08:09.295623+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:08:09.296095+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:08:09.296413+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:08:09.296696+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:08:09.298793+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:08:09.299294+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:08:09.299915+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:08:09.301168+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:08:09.301711+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:08:09.302120+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:08:09.302503+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:08:09.622431+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9b8bf1"},"request_uri":"http://localhost:8000/_wdt/9b8bf1","method":"GET"} []
[2020-05-31T17:08:12.063712+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:08:12.067727+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:08:12.067827+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:08:12.067872+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:08:12.068037+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:08:12.073291+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:08:12.083871+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:08:12.084410+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:08:12.084847+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:08:12.085263+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:08:12.088324+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:08:12.089208+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:08:12.090222+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:08:12.092008+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:08:12.092961+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:08:12.093746+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:08:12.094405+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:08:12.468425+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"57c270"},"request_uri":"http://localhost:8000/_wdt/57c270","method":"GET"} []
[2020-05-31T17:09:26.143017+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:09:26.147525+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:09:26.147625+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:09:26.147690+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:09:26.147930+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:09:26.155246+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:09:26.165532+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:09:26.165941+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:09:26.166340+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:09:26.166728+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:09:26.170617+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:09:26.171373+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:09:26.172326+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:09:26.174548+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:09:26.175554+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:09:26.176266+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:09:26.176886+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:09:26.703367+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e1c044"},"request_uri":"http://localhost:8000/_wdt/e1c044","method":"GET"} []
[2020-05-31T17:09:30.490132+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:09:30.493819+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:09:30.493900+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:09:30.493956+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:09:30.494181+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:09:30.499732+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:09:30.509422+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:09:30.509936+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:09:30.510307+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:09:30.510680+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:09:30.513744+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:09:30.514438+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:09:30.515261+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:09:30.516926+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:09:30.517675+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:09:30.518222+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:09:30.518790+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:09:30.867424+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f354d2"},"request_uri":"http://localhost:8000/_wdt/f354d2","method":"GET"} []
[2020-05-31T17:09:58.051753+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:09:58.054278+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:09:58.054354+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:09:58.054411+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:09:58.054634+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:09:58.059950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:09:58.073075+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:09:58.073587+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:09:58.074017+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:09:58.074380+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:09:58.078254+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:09:58.078902+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:09:58.079661+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:09:58.081233+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:09:58.081906+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:09:58.082507+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:09:58.083083+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:09:58.404081+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"251dc6"},"request_uri":"http://localhost:8000/_wdt/251dc6","method":"GET"} []
[2020-05-31T17:10:24.096468+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:10:24.099362+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:10:24.099433+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:10:24.099474+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:10:24.099666+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:10:24.104850+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:10:24.113380+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:10:24.113803+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:10:24.114095+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:10:24.114372+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:10:24.116963+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:10:24.117482+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:10:24.118213+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:10:24.119820+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:10:24.120493+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:10:24.121078+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:10:24.121736+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:10:24.469948+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b337f7"},"request_uri":"http://localhost:8000/_wdt/b337f7","method":"GET"} []
[2020-05-31T17:10:40.946587+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:10:40.950112+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:10:40.950219+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:10:40.950287+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:10:40.950534+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:10:40.956387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:10:40.965491+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:10:40.965947+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:10:40.966253+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:10:40.966533+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:10:40.969416+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:10:40.970079+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:10:40.970967+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:10:40.972894+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:10:40.973777+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:10:40.974393+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:10:40.974936+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:10:41.477271+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c68ce8"},"request_uri":"http://localhost:8000/_wdt/c68ce8","method":"GET"} []
[2020-05-31T17:11:06.662517+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:11:06.666492+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:06.666574+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:06.666620+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:06.666804+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:06.673538+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:11:06.682576+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:11:06.683079+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:06.683416+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:06.683735+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:06.686599+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:11:06.687387+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:11:06.688711+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:11:06.690366+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:11:06.691134+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:11:06.691651+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:11:06.692177+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:11:07.013234+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca632f"},"request_uri":"http://localhost:8000/_wdt/ca632f","method":"GET"} []
[2020-05-31T17:11:25.085722+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:11:25.088621+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:25.088706+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:25.088761+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:25.088979+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:25.094466+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:11:25.104803+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:11:25.105344+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:25.105706+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:25.106017+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:25.108679+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:11:25.109262+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:11:25.109932+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:11:25.111366+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:11:25.111978+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:11:25.112423+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:11:25.112825+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:11:25.425713+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9cfa1c"},"request_uri":"http://localhost:8000/_wdt/9cfa1c","method":"GET"} []
[2020-05-31T17:11:27.789023+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:11:27.793187+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:27.793329+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:27.793440+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:27.793784+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:27.801191+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:11:27.812469+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:11:27.812971+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:27.813369+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:27.813745+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:27.816182+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["1"]] []
[2020-05-31T17:11:27.816928+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["2"]] []
[2020-05-31T17:11:27.817554+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-05-31T17:11:27.818187+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-05-31T17:11:27.830207+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T17:11:27.830511+02:00] doctrine.DEBUG: UPDATE product SET isavailable = ? WHERE id = ? [false,3] []
[2020-05-31T17:11:27.830948+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T17:11:28.016229+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:11:28.018735+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:28.018804+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:28.018847+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:28.032710+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:11:28.033739+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:11:28.034648+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:11:28.040093+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:11:28.040733+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:11:28.041137+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:11:28.041534+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:11:28.051348+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:28.368079+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"501b9e"},"request_uri":"http://localhost:8000/_wdt/501b9e","method":"GET"} []
[2020-05-31T17:11:33.751956+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:11:33.754523+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:33.754591+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:33.754649+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:33.768825+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:11:33.769562+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:11:33.770268+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:11:33.775084+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:11:33.775790+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:11:33.776250+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:11:33.776697+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:11:33.784410+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:34.095712+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"301f13"},"request_uri":"http://localhost:8000/_wdt/301f13","method":"GET"} []
[2020-05-31T17:11:35.651154+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:11:35.653880+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:35.653957+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:35.654000+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:35.654128+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:35.658703+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:11:35.669313+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:11:35.669735+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:35.670051+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:35.670339+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:35.672750+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:11:35.673478+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:11:35.674275+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:11:35.675811+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:11:35.676512+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:11:35.677067+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:11:35.677666+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:11:35.993859+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"580289"},"request_uri":"http://localhost:8000/_wdt/580289","method":"GET"} []
[2020-05-31T17:11:39.038586+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:11:39.047403+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:39.047663+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:39.047891+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:39.048653+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:39.059105+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:11:39.073167+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:11:39.073649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:39.073982+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:39.074282+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:39.077700+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["1"]] []
[2020-05-31T17:11:39.078455+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["2"]] []
[2020-05-31T17:11:39.079103+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-05-31T17:11:39.079814+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-05-31T17:11:39.088620+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T17:11:39.088907+02:00] doctrine.DEBUG: UPDATE product SET isavailable = ? WHERE id = ? [true,3] []
[2020-05-31T17:11:39.089353+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T17:11:39.241837+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:11:39.244006+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:39.244095+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:39.244146+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:39.255844+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:11:39.257160+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:11:39.258252+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:11:39.264506+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:11:39.265316+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:11:39.265786+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:11:39.266219+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:11:39.273694+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:39.599377+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9ca0d2"},"request_uri":"http://localhost:8000/_wdt/9ca0d2","method":"GET"} []
[2020-05-31T17:11:41.211246+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:11:41.214213+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:41.214336+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:41.214418+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:41.214673+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:41.220731+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["2"] []
[2020-05-31T17:11:41.231251+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [3] []
[2020-05-31T17:11:41.231826+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-05-31T17:11:41.232243+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [1] []
[2020-05-31T17:11:41.232586+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:41.234922+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:11:41.235630+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:11:41.236345+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:11:41.238295+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:11:41.239215+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:11:41.240100+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:11:41.240710+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:11:41.540204+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a2294"},"request_uri":"http://localhost:8000/_wdt/5a2294","method":"GET"} []
[2020-05-31T17:11:46.473934+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:11:46.477712+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:46.477802+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:46.477855+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:46.478065+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:46.485417+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["2"] []
[2020-05-31T17:11:46.496664+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [3] []
[2020-05-31T17:11:46.497142+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-05-31T17:11:46.497553+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [1] []
[2020-05-31T17:11:46.497946+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:46.500316+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["3"]] []
[2020-05-31T17:11:46.501162+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-05-31T17:11:46.501824+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["1"]] []
[2020-05-31T17:11:46.502582+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-05-31T17:11:46.518396+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T17:11:46.518716+02:00] doctrine.DEBUG: UPDATE product SET isavailable = ? WHERE id = ? [true,2] []
[2020-05-31T17:11:46.519100+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T17:11:46.902030+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:11:46.903784+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:46.903882+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:46.903935+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:46.914820+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:11:46.915704+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:11:46.916508+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:11:46.921271+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:11:46.922215+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:11:46.922910+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:11:46.923573+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:11:46.932055+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:47.252660+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca4060"},"request_uri":"http://localhost:8000/_wdt/ca4060","method":"GET"} []
[2020-05-31T17:11:48.862465+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:11:48.864429+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:48.864494+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:48.864533+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:48.864669+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:48.869101+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:11:48.878869+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:11:48.879337+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:48.879721+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:48.880094+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:11:48.882270+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:11:48.882917+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:11:48.883674+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:11:48.885118+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:11:48.885787+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:11:48.886314+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:11:48.886839+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:11:49.217346+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e27123"},"request_uri":"http://localhost:8000/_wdt/e27123","method":"GET"} []
[2020-05-31T17:11:54.480358+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:11:54.486384+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:54.486517+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:54.486599+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:54.486915+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:54.498017+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-05-31T17:11:54.510932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:11:54.511558+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:54.512055+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:54.512539+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-05-31T17:11:54.515514+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["1"]] []
[2020-05-31T17:11:54.516360+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["2"]] []
[2020-05-31T17:11:54.517016+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-05-31T17:11:54.517664+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["3"]] []
[2020-05-31T17:11:54.526134+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T17:11:54.526406+02:00] doctrine.DEBUG: UPDATE product SET isavailable = ? WHERE id = ? [true,1] []
[2020-05-31T17:11:54.527135+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T17:11:54.727657+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:11:54.730039+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:54.730143+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:54.730216+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:54.744572+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:11:54.745705+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:11:54.746708+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:11:54.752765+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:11:54.753615+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:11:54.754182+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:11:54.754705+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:11:54.763486+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:55.061441+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c9b1d4"},"request_uri":"http://localhost:8000/_wdt/c9b1d4","method":"GET"} []
[2020-05-31T17:11:57.331110+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:11:57.333606+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:11:57.333669+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:57.333707+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:11:57.333866+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:11:57.338758+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:11:57.348968+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:11:57.349404+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:57.349685+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:57.349955+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:11:57.352560+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:11:57.353095+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:11:57.353778+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:11:57.355213+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:11:57.355856+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:11:57.356312+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:11:57.356744+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:11:57.705643+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9da3c1"},"request_uri":"http://localhost:8000/_wdt/9da3c1","method":"GET"} []
[2020-05-31T17:12:01.368836+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-05-31T17:12:01.373537+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:12:01.373664+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:01.373746+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:01.374062+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:12:01.382847+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-05-31T17:12:01.398607+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-05-31T17:12:01.399318+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-05-31T17:12:01.399750+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-05-31T17:12:01.400219+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-05-31T17:12:01.403524+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["1"]] []
[2020-05-31T17:12:01.404421+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["2"]] []
[2020-05-31T17:12:01.405176+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-05-31T17:12:01.405881+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-05-31T17:12:01.420909+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-31T17:12:01.421226+02:00] doctrine.DEBUG: UPDATE product SET isavailable = ? WHERE id = ? [false,3] []
[2020-05-31T17:12:01.421723+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-31T17:12:01.533693+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:12:01.535964+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:12:01.536065+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:01.536131+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:01.548440+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:12:01.549675+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:12:01.550786+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:12:01.555740+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:12:01.556543+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:12:01.557069+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:12:01.557595+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:12:01.566536+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:12:01.890712+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5de4f8"},"request_uri":"http://localhost:8000/_wdt/5de4f8","method":"GET"} []
[2020-05-31T17:12:15.185196+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T17:12:15.187886+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:12:15.187965+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:15.188008+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:15.208095+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T17:12:15.209264+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T17:12:15.210032+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T17:12:15.225677+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:12:15.533572+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd5140"},"request_uri":"http://localhost:8000/_wdt/fd5140","method":"GET"} []
[2020-05-31T17:12:45.093224+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:12:45.095916+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:12:45.095994+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:45.096035+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:45.110927+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:12:45.111647+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:12:45.112401+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:12:45.116964+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:12:45.117663+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:12:45.118135+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:12:45.118572+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:12:45.127798+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:12:45.542322+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c66d4a"},"request_uri":"http://localhost:8000/_wdt/c66d4a","method":"GET"} []
[2020-05-31T17:12:50.552676+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?search=comp","method":"GET"} []
[2020-05-31T17:12:50.556535+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:12:50.556645+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:50.556735+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:50.575002+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ WHERE p0_.name LIKE '%comp%' [] []
[2020-05-31T17:12:50.576093+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ WHERE p0_.name LIKE '%comp%' ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:12:50.576986+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.name LIKE '%comp%' AND p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T17:12:50.582212+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:12:50.583132+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:12:50.583830+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:12:50.584556+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:12:50.592791+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:12:50.898898+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0ffe93"},"request_uri":"http://localhost:8000/_wdt/0ffe93","method":"GET"} []
[2020-05-31T17:12:53.513819+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/?search=comp","method":"GET"} []
[2020-05-31T17:12:53.516900+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:12:53.516987+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:53.517038+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:53.530416+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ WHERE p0_.name LIKE '%comp%' [] []
[2020-05-31T17:12:53.531295+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ WHERE p0_.name LIKE '%comp%' ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:12:53.532556+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.name LIKE '%comp%' AND p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-05-31T17:12:53.537561+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:12:53.538279+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:12:53.538810+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:12:53.539277+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:12:53.547094+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:12:53.910681+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cc2811"},"request_uri":"http://localhost:8000/_wdt/cc2811","method":"GET"} []
[2020-05-31T17:12:55.941781+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T17:12:55.944596+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:12:55.944699+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:55.944761+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:55.959716+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T17:12:55.960452+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T17:12:55.961044+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T17:12:55.963858+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T17:12:55.973602+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:12:56.290053+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f8e8c2"},"request_uri":"http://localhost:8000/_wdt/f8e8c2","method":"GET"} []
[2020-05-31T17:12:58.260640+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-31T17:12:58.262881+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:12:58.262964+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:58.263027+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:58.266847+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-31T17:12:58.272209+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:12:58.603467+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"11d9e5"},"request_uri":"http://localhost:8000/_wdt/11d9e5","method":"GET"} []
[2020-05-31T17:12:59.508815+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-31T17:12:59.511261+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:12:59.511348+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:59.511396+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:12:59.515035+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-31T17:12:59.520029+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:12:59.845113+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c359e6"},"request_uri":"http://localhost:8000/_wdt/c359e6","method":"GET"} []
[2020-05-31T17:13:00.282969+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:13:00.285148+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:13:00.285264+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:13:00.285332+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:13:00.299959+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:13:00.300807+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:13:00.301780+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:13:00.306934+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:13:00.307708+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:13:00.308247+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:13:00.308724+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:13:00.318510+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:13:00.648312+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"439e97"},"request_uri":"http://localhost:8000/_wdt/439e97","method":"GET"} []
[2020-05-31T17:13:01.241826+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-05-31T17:13:01.247551+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:13:01.247815+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:13:01.248003+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:13:01.259927+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gross_amount AS gross_amount_2, t0.customer_id AS customer_id_3, t0.user_id AS user_id_4 FROM `order` t0 [] []
[2020-05-31T17:13:01.273139+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:13:01.620248+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"63ffe6"},"request_uri":"http://localhost:8000/_wdt/63ffe6","method":"GET"} []
[2020-05-31T17:13:02.332001+02:00] request.INFO: Matched route "transfer_index". {"route":"transfer_index","route_parameters":{"_route":"transfer_index","_controller":"App\\Controller\\TransferController::index"},"request_uri":"http://localhost:8000/transfer/","method":"GET"} []
[2020-05-31T17:13:02.334687+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:13:02.334788+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:13:02.334848+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:13:02.338671+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.status AS status_2, t0.to_id_id AS to_id_id_3 FROM transfer t0 [] []
[2020-05-31T17:13:02.343007+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:13:02.658069+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c3b69d"},"request_uri":"http://localhost:8000/_wdt/c3b69d","method":"GET"} []
[2020-05-31T17:13:03.584577+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:13:03.586632+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:13:03.586714+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:13:03.586766+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:13:03.591950+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:13:03.973169+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bcce72"},"request_uri":"http://localhost:8000/_wdt/bcce72","method":"GET"} []
[2020-05-31T17:13:05.920448+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:13:05.922950+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:13:05.923034+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:13:05.923090+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:13:05.928263+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:13:06.229350+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2d4ce5"},"request_uri":"http://localhost:8000/_wdt/2d4ce5","method":"GET"} []
[2020-05-31T17:18:45.913707+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:18:45.917611+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:18:45.917717+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:18:45.917785+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:18:45.931957+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:18:46.278133+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0cb379"},"request_uri":"http://localhost:8000/_wdt/0cb379","method":"GET"} []
[2020-05-31T17:19:50.195734+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:19:50.200775+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:19:50.200908+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:19:50.200975+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:19:50.210615+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:19:50.486180+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ec314c"},"request_uri":"http://localhost:8000/_wdt/ec314c","method":"GET"} []
[2020-05-31T17:21:49.249280+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:21:49.251977+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:21:49.252057+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:21:49.252116+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:21:49.259195+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:21:49.633041+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f97627"},"request_uri":"http://localhost:8000/_wdt/f97627","method":"GET"} []
[2020-05-31T17:22:15.808371+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:22:15.810955+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:22:15.811028+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:22:15.811086+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:22:15.817833+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:22:16.116573+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5c1118"},"request_uri":"http://localhost:8000/_wdt/5c1118","method":"GET"} []
[2020-05-31T17:22:25.809484+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:22:25.812137+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:22:25.812220+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:22:25.812273+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:22:25.820929+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:22:26.184160+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8d41cb"},"request_uri":"http://localhost:8000/_wdt/8d41cb","method":"GET"} []
[2020-05-31T17:24:12.281080+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:24:12.284020+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:24:12.284105+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:24:12.284156+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:24:12.291798+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:24:12.536703+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"387485"},"request_uri":"http://localhost:8000/_wdt/387485","method":"GET"} []
[2020-05-31T17:24:48.138206+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:24:48.140758+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:24:48.140826+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:24:48.140865+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:24:48.145293+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:24:48.427046+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"526d38"},"request_uri":"http://localhost:8000/_wdt/526d38","method":"GET"} []
[2020-05-31T17:24:50.253635+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:24:50.255659+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:24:50.255782+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:24:50.255868+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:24:50.260660+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:24:50.557186+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7f958d"},"request_uri":"http://localhost:8000/_wdt/7f958d","method":"GET"} []
[2020-05-31T17:24:52.143683+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /" (from "http://localhost:8000/home")" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" (from \"http://localhost:8000/home\") at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-05-31T17:24:52.227557+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"85820a"},"request_uri":"http://localhost:8000/_wdt/85820a","method":"GET"} []
[2020-05-31T17:24:56.042807+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:24:56.045837+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:24:56.045924+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:24:56.045968+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:24:56.050105+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:24:56.355344+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f5b94f"},"request_uri":"http://localhost:8000/_wdt/f5b94f","method":"GET"} []
[2020-05-31T17:24:57.289341+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T17:24:57.291407+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:24:57.291485+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:24:57.291540+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:24:57.300044+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T17:24:57.300820+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T17:24:57.301635+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T17:24:57.309172+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:24:57.619625+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c3f709"},"request_uri":"http://localhost:8000/_wdt/c3f709","method":"GET"} []
[2020-05-31T17:25:24.160217+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T17:25:24.162667+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:25:24.162745+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:24.162799+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:24.171465+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T17:25:24.172237+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T17:25:24.172913+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T17:25:24.180869+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:25:24.492381+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"789b0c"},"request_uri":"http://localhost:8000/_wdt/789b0c","method":"GET"} []
[2020-05-31T17:25:26.468114+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:25:26.469804+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:25:26.469873+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:26.469913+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:26.475402+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:25:26.783379+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"89b06b"},"request_uri":"http://localhost:8000/_wdt/89b06b","method":"GET"} []
[2020-05-31T17:25:32.748218+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T17:25:32.750832+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:25:32.750915+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:32.750966+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:32.760644+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T17:25:32.761344+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T17:25:32.761987+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T17:25:32.770924+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:25:33.080219+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"37df19"},"request_uri":"http://localhost:8000/_wdt/37df19","method":"GET"} []
[2020-05-31T17:25:34.555526+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T17:25:34.557313+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:25:34.557384+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:34.557426+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:34.565138+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T17:25:34.565784+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T17:25:34.566339+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T17:25:34.569199+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T17:25:34.576042+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:25:34.873770+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f0511a"},"request_uri":"http://localhost:8000/_wdt/f0511a","method":"GET"} []
[2020-05-31T17:25:36.919913+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T17:25:36.923261+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:25:36.923351+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:36.923409+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:36.933607+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T17:25:36.934260+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T17:25:36.934865+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T17:25:36.942688+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:25:37.250721+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1ca5bd"},"request_uri":"http://localhost:8000/_wdt/1ca5bd","method":"GET"} []
[2020-05-31T17:25:37.490098+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T17:25:37.494051+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:25:37.494157+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:37.494226+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:37.504853+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T17:25:37.506356+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T17:25:37.507112+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T17:25:37.511110+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T17:25:37.518029+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:25:37.856562+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9eb8b4"},"request_uri":"http://localhost:8000/_wdt/9eb8b4","method":"GET"} []
[2020-05-31T17:25:38.107326+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-31T17:25:38.110383+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:25:38.110470+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:38.110533+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:38.113823+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-31T17:25:38.122195+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:25:38.452938+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"82551d"},"request_uri":"http://localhost:8000/_wdt/82551d","method":"GET"} []
[2020-05-31T17:25:39.117409+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T17:25:39.120904+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:25:39.121010+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:39.121074+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:25:39.126269+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T17:25:39.133605+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:25:39.452197+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5f5b33"},"request_uri":"http://localhost:8000/_wdt/5f5b33","method":"GET"} []
[2020-05-31T17:31:18.140328+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T17:31:18.143439+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:18.143548+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:18.143624+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:18.148795+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T17:31:18.164744+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:18.511073+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e38ed6"},"request_uri":"http://localhost:8000/_wdt/e38ed6","method":"GET"} []
[2020-05-31T17:31:23.056721+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:31:23.063589+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:23.063742+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:23.063906+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:23.080243+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:23.410390+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6fa6b5"},"request_uri":"http://localhost:8000/_wdt/6fa6b5","method":"GET"} []
[2020-05-31T17:31:25.174170+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:31:25.176520+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:25.176621+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:25.176665+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:25.181604+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:25.480729+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3f2816"},"request_uri":"http://localhost:8000/_wdt/3f2816","method":"GET"} []
[2020-05-31T17:31:29.540596+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:31:29.549285+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:29.549468+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:29.549586+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:29.557752+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:29.876658+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8650d2"},"request_uri":"http://localhost:8000/_wdt/8650d2","method":"GET"} []
[2020-05-31T17:31:30.770266+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T17:31:30.772365+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:30.772450+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:30.772501+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:30.785085+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T17:31:30.785956+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T17:31:30.786920+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T17:31:30.810074+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:31.139391+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b1469a"},"request_uri":"http://localhost:8000/_wdt/b1469a","method":"GET"} []
[2020-05-31T17:31:32.692824+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T17:31:32.696185+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:32.696288+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:32.696352+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:32.708598+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T17:31:32.709243+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T17:31:32.709829+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T17:31:32.713741+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T17:31:32.732871+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:33.044295+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bd0ec8"},"request_uri":"http://localhost:8000/_wdt/bd0ec8","method":"GET"} []
[2020-05-31T17:31:35.245052+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-31T17:31:35.252455+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:35.252635+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:35.252724+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:35.260853+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-31T17:31:35.267956+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:35.536069+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"63326c"},"request_uri":"http://localhost:8000/_wdt/63326c","method":"GET"} []
[2020-05-31T17:31:36.905469+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T17:31:36.907247+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:36.907321+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:36.907361+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:36.910764+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T17:31:36.917244+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:37.222150+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cf536e"},"request_uri":"http://localhost:8000/_wdt/cf536e","method":"GET"} []
[2020-05-31T17:31:38.723738+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-31T17:31:38.727271+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:38.727406+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:38.727481+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:38.732620+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-31T17:31:38.740287+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:39.072936+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"db95ff"},"request_uri":"http://localhost:8000/_wdt/db95ff","method":"GET"} []
[2020-05-31T17:31:40.066487+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-31T17:31:40.076268+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:40.076671+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:40.076944+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:40.090786+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-31T17:31:40.102627+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:40.454290+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b8f9d3"},"request_uri":"http://localhost:8000/_wdt/b8f9d3","method":"GET"} []
[2020-05-31T17:31:41.894817+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:31:41.899516+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:41.899724+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:41.899889+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:41.932739+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:31:41.934133+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:31:41.936029+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:31:41.945852+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:31:41.947268+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:31:41.948342+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:31:41.949338+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:31:41.976564+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:42.280804+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e3c3be"},"request_uri":"http://localhost:8000/_wdt/e3c3be","method":"GET"} []
[2020-05-31T17:31:44.021737+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-05-31T17:31:44.025737+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:44.025851+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:44.025925+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:44.031914+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gross_amount AS gross_amount_2, t0.customer_id AS customer_id_3, t0.user_id AS user_id_4 FROM `order` t0 [] []
[2020-05-31T17:31:44.036727+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:44.335233+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e35ece"},"request_uri":"http://localhost:8000/_wdt/e35ece","method":"GET"} []
[2020-05-31T17:31:45.754725+02:00] request.INFO: Matched route "transfer_index". {"route":"transfer_index","route_parameters":{"_route":"transfer_index","_controller":"App\\Controller\\TransferController::index"},"request_uri":"http://localhost:8000/transfer/","method":"GET"} []
[2020-05-31T17:31:45.756827+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:45.756915+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:45.756967+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:45.762061+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.status AS status_2, t0.to_id_id AS to_id_id_3 FROM transfer t0 [] []
[2020-05-31T17:31:45.766500+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:46.063244+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e2a212"},"request_uri":"http://localhost:8000/_wdt/e2a212","method":"GET"} []
[2020-05-31T17:31:47.833357+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:31:47.836924+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:47.837013+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:47.837063+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:47.841752+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:48.140859+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8c1592"},"request_uri":"http://localhost:8000/_wdt/8c1592","method":"GET"} []
[2020-05-31T17:31:50.331120+02:00] request.INFO: Matched route "transfer_index". {"route":"transfer_index","route_parameters":{"_route":"transfer_index","_controller":"App\\Controller\\TransferController::index"},"request_uri":"http://localhost:8000/transfer/","method":"GET"} []
[2020-05-31T17:31:50.335558+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:50.335696+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:50.335839+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:50.344074+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.status AS status_2, t0.to_id_id AS to_id_id_3 FROM transfer t0 [] []
[2020-05-31T17:31:50.352252+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:50.655186+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c01f43"},"request_uri":"http://localhost:8000/_wdt/c01f43","method":"GET"} []
[2020-05-31T17:31:52.312461+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:31:52.314781+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:31:52.314877+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:52.314951+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:31:52.330452+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:31:52.331465+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:31:52.332632+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:31:52.338579+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:31:52.339312+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:31:52.339851+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:31:52.340308+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:31:52.351787+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:31:52.656389+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6301bd"},"request_uri":"http://localhost:8000/_wdt/6301bd","method":"GET"} []
[2020-05-31T17:32:01.807467+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-31T17:32:01.811163+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:32:01.811274+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:01.811350+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:01.815971+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-31T17:32:01.821224+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:32:02.141489+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a64e51"},"request_uri":"http://localhost:8000/_wdt/a64e51","method":"GET"} []
[2020-05-31T17:32:02.396799+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-05-31T17:32:02.399421+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:32:02.399513+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:02.399567+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:02.403420+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-05-31T17:32:02.407729+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:32:02.734616+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9fec8b"},"request_uri":"http://localhost:8000/_wdt/9fec8b","method":"GET"} []
[2020-05-31T17:32:03.165077+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-05-31T17:32:03.171062+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:32:03.171303+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:03.171488+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:03.200297+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-05-31T17:32:03.201375+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-05-31T17:32:03.202659+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-05-31T17:32:03.209525+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-05-31T17:32:03.210549+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-05-31T17:32:03.211290+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-05-31T17:32:03.212030+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-05-31T17:32:03.221800+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:32:03.536824+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ae957"},"request_uri":"http://localhost:8000/_wdt/2ae957","method":"GET"} []
[2020-05-31T17:32:03.733744+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-05-31T17:32:03.738134+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:32:03.738233+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:03.738280+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:03.744150+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gross_amount AS gross_amount_2, t0.customer_id AS customer_id_3, t0.user_id AS user_id_4 FROM `order` t0 [] []
[2020-05-31T17:32:03.750877+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:32:04.098291+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"624e7d"},"request_uri":"http://localhost:8000/_wdt/624e7d","method":"GET"} []
[2020-05-31T17:32:04.947554+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-05-31T17:32:04.949899+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:32:04.949990+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:04.950051+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:04.953983+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-05-31T17:32:04.959369+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:32:05.272552+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f6fbdd"},"request_uri":"http://localhost:8000/_wdt/f6fbdd","method":"GET"} []
[2020-05-31T17:32:42.233095+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-05-31T17:32:42.235749+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:32:42.235840+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:42.235887+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:42.239457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-05-31T17:32:42.245368+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:32:42.562174+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"501f2b"},"request_uri":"http://localhost:8000/_wdt/501f2b","method":"GET"} []
[2020-05-31T17:32:44.579975+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-05-31T17:32:44.582242+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:32:44.582332+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:44.582414+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:44.586394+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-05-31T17:32:44.592046+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:32:45.037007+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d92ecc"},"request_uri":"http://localhost:8000/_wdt/d92ecc","method":"GET"} []
[2020-05-31T17:32:50.188681+02:00] request.INFO: Matched route "brand_show". {"route":"brand_show","route_parameters":{"_route":"brand_show","_controller":"App\\Controller\\BrandController::show","id":"3"},"request_uri":"http://localhost:8000/brand/3","method":"GET"} []
[2020-05-31T17:32:50.192970+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:32:50.193105+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:50.193187+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:32:50.198700+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? ["3"] []
[2020-05-31T17:32:50.213199+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:32:50.553648+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5d903c"},"request_uri":"http://localhost:8000/_wdt/5d903c","method":"GET"} []
[2020-05-31T17:34:09.981758+02:00] request.INFO: Matched route "brand_show". {"route":"brand_show","route_parameters":{"_route":"brand_show","_controller":"App\\Controller\\BrandController::show","id":"3"},"request_uri":"http://localhost:8000/brand/3","method":"GET"} []
[2020-05-31T17:34:09.985346+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:34:09.985431+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:34:09.985482+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:34:09.989928+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? ["3"] []
[2020-05-31T17:34:09.996517+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:34:10.298263+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"71fe8c"},"request_uri":"http://localhost:8000/_wdt/71fe8c","method":"GET"} []
[2020-05-31T17:34:12.013875+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-05-31T17:34:12.017989+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:34:12.018164+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:34:12.018313+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:34:12.024943+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:34:12.374854+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2bf649"},"request_uri":"http://localhost:8000/_wdt/2bf649","method":"GET"} []
[2020-05-31T17:34:13.952445+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-05-31T17:34:13.954603+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:34:13.954679+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:34:13.954723+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:34:13.963466+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-05-31T17:34:13.964428+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-05-31T17:34:13.965386+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-05-31T17:34:13.975026+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:34:14.285378+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1b91bb"},"request_uri":"http://localhost:8000/_wdt/1b91bb","method":"GET"} []
[2020-05-31T17:34:14.985720+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-05-31T17:34:14.989118+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-05-31T17:34:14.989268+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:34:14.989375+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-05-31T17:34:15.002830+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-05-31T17:34:15.004847+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-05-31T17:34:15.006089+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-05-31T17:34:15.010366+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-05-31T17:34:15.022736+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-31T17:34:15.353903+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c09101"},"request_uri":"http://localhost:8000/_wdt/c09101","method":"GET"} []
[2020-06-09T17:28:30.373564+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-06-09T17:28:30.677968+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"719604"},"request_uri":"http://localhost:8000/_wdt/719604","method":"GET"} []
[2020-06-09T17:28:34.646011+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-06-09T17:28:34.655446+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-09T17:28:34.655546+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-09T17:28:34.655608+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-09T17:28:34.669647+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-09T17:28:35.492198+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4c2f49"},"request_uri":"http://localhost:8000/_wdt/4c2f49","method":"GET"} []
[2020-06-09T17:34:28.435276+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-06-09T17:34:28.438938+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-09T17:34:28.439051+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-09T17:34:28.439119+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-09T17:34:28.649870+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-06-09T17:34:28.653007+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-06-09T17:34:28.671470+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-06-09T17:34:28.890036+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-09T17:34:29.402404+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca32c6"},"request_uri":"http://localhost:8000/_wdt/ca32c6","method":"GET"} []
[2020-06-09T17:34:31.188628+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-06-09T17:34:31.190694+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-09T17:34:31.190769+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-09T17:34:31.190810+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-09T17:34:31.363412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-06-09T17:34:31.389951+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-09T17:34:31.842294+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d71642"},"request_uri":"http://localhost:8000/_wdt/d71642","method":"GET"} []
[2020-06-09T17:34:34.929014+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-06-09T17:34:34.932656+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-09T17:34:34.932759+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-09T17:34:34.932813+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-09T17:34:34.939322+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-06-09T17:34:34.948133+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-09T17:34:35.279527+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0ec24b"},"request_uri":"http://localhost:8000/_wdt/0ec24b","method":"GET"} []
[2020-06-10T10:13:25.842199+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-06-10T10:13:26.104381+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b9f5f5"},"request_uri":"http://localhost:8000/_wdt/b9f5f5","method":"GET"} []
[2020-06-10T10:13:33.555611+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/test","method":"GET"} []
[2020-06-10T10:13:33.565380+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:13:33.565468+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:13:33.565525+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:13:33.621676+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:13:34.025925+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"097324"},"request_uri":"http://localhost:8000/_wdt/097324","method":"GET"} []
[2020-06-10T10:13:52.927187+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /test"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /test\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/test/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-06-10T10:13:53.230608+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd0d42"},"request_uri":"http://localhost:8000/_wdt/fd0d42","method":"GET"} []
[2020-06-10T10:14:00.521736+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:14:00.524601+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:14:00.524711+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:14:00.524771+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:14:00.532979+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:14:00.854934+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"31ff29"},"request_uri":"http://localhost:8000/_wdt/31ff29","method":"GET"} []
[2020-06-10T10:14:25.093585+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:14:25.096844+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:14:25.096947+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:14:25.097029+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:14:25.109496+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:14:25.421052+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d9125e"},"request_uri":"http://localhost:8000/_wdt/d9125e","method":"GET"} []
[2020-06-10T10:14:45.957702+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:14:45.963243+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:14:45.963398+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:14:45.963640+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:14:45.974194+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:14:46.302010+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"84a4f3"},"request_uri":"http://localhost:8000/_wdt/84a4f3","method":"GET"} []
[2020-06-10T10:17:32.714216+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:17:32.718597+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:17:32.718764+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:32.718849+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:32.734115+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:17:33.048532+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1eb5a8"},"request_uri":"http://localhost:8000/_wdt/1eb5a8","method":"GET"} []
[2020-06-10T10:17:35.539268+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:17:35.544922+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:17:35.545080+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:35.545201+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:35.557440+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:17:35.875811+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc7795"},"request_uri":"http://localhost:8000/_wdt/bc7795","method":"GET"} []
[2020-06-10T10:17:36.841781+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:17:36.843878+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:17:36.843949+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:36.843989+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:36.847934+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:17:37.119055+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"19568b"},"request_uri":"http://localhost:8000/_wdt/19568b","method":"GET"} []
[2020-06-10T10:17:38.723003+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:17:38.728469+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:17:38.728674+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:38.728776+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:38.738620+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:17:39.032230+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a44676"},"request_uri":"http://localhost:8000/_wdt/a44676","method":"GET"} []
[2020-06-10T10:17:40.565524+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:17:40.569931+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:17:40.570126+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:40.570252+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:40.581750+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:17:40.896317+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"57034e"},"request_uri":"http://localhost:8000/_wdt/57034e","method":"GET"} []
[2020-06-10T10:17:42.275888+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:17:42.278127+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:17:42.278198+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:42.278259+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:42.282903+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:17:42.566829+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"066ccb"},"request_uri":"http://localhost:8000/_wdt/066ccb","method":"GET"} []
[2020-06-10T10:17:54.297033+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:17:54.301003+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:17:54.301105+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:54.301168+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:54.312124+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:17:54.762664+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"006f5a"},"request_uri":"http://localhost:8000/_wdt/006f5a","method":"GET"} []
[2020-06-10T10:17:56.603613+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:17:56.606814+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:17:56.606907+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:56.606958+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:17:56.612381+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:17:56.947657+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6f2c71"},"request_uri":"http://localhost:8000/_wdt/6f2c71","method":"GET"} []
[2020-06-10T10:18:10.044172+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:18:10.048799+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:18:10.048922+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:10.048994+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:10.086078+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:18:10.403392+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c01a85"},"request_uri":"http://localhost:8000/_wdt/c01a85","method":"GET"} []
[2020-06-10T10:18:13.275469+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:18:13.278627+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:18:13.278716+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:13.278788+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:13.284815+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:18:13.595218+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c75556"},"request_uri":"http://localhost:8000/_wdt/c75556","method":"GET"} []
[2020-06-10T10:18:14.399884+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:18:14.403037+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:18:14.403146+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:14.403211+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:14.408389+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:18:14.710849+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"30b938"},"request_uri":"http://localhost:8000/_wdt/30b938","method":"GET"} []
[2020-06-10T10:18:16.424710+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:18:16.427092+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:18:16.427201+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:16.427273+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:16.432300+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:18:16.724518+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ffbea0"},"request_uri":"http://localhost:8000/_wdt/ffbea0","method":"GET"} []
[2020-06-10T10:18:18.351489+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:18:18.354759+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:18:18.354924+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:18.355008+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:18.362323+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:18:18.682843+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dac3e4"},"request_uri":"http://localhost:8000/_wdt/dac3e4","method":"GET"} []
[2020-06-10T10:18:19.934895+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:18:19.937978+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:18:19.938057+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:19.938133+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:19.942325+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:18:20.212383+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7ef034"},"request_uri":"http://localhost:8000/_wdt/7ef034","method":"GET"} []
[2020-06-10T10:18:24.973567+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-06-10T10:18:24.976757+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:18:24.976865+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:24.976932+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:18:25.307616+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-06-10T10:18:25.575622+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-06-10T10:18:25.609198+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-06-10T10:18:25.797001+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-06-10T10:18:25.877833+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:18:26.346346+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a13f7"},"request_uri":"http://localhost:8000/_wdt/5a13f7","method":"GET"} []
[2020-06-10T10:19:12.791298+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-06-10T10:19:12.794630+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:19:12.794742+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:19:12.794809+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:19:12.810485+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-06-10T10:19:12.811486+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-06-10T10:19:12.812304+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-06-10T10:19:12.816137+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-06-10T10:19:12.826556+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:19:13.159423+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d27c7e"},"request_uri":"http://localhost:8000/_wdt/d27c7e","method":"GET"} []
[2020-06-10T10:21:06.943189+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-06-10T10:21:06.950420+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:21:06.950650+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:21:06.950833+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:21:06.990611+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-06-10T10:21:07.102117+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:21:07.558704+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"400e75"},"request_uri":"http://localhost:8000/_wdt/400e75","method":"GET"} []
[2020-06-10T10:21:10.804136+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-06-10T10:21:10.809475+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:21:10.809612+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:21:10.809695+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:21:10.886940+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-06-10T10:21:10.889858+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-06-10T10:21:10.891830+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-06-10T10:21:10.916811+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:21:11.260852+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d0f7b3"},"request_uri":"http://localhost:8000/_wdt/d0f7b3","method":"GET"} []
[2020-06-10T10:22:24.613045+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-06-10T10:22:24.615311+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:22:24.615406+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:24.615467+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:24.661763+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-06-10T10:22:24.713515+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-06-10T10:22:24.714701+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-06-10T10:22:24.721095+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-06-10T10:22:24.768159+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-06-10T10:22:24.769077+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-06-10T10:22:24.788179+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-06-10T10:22:24.827358+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:22:25.216384+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"35246e"},"request_uri":"http://localhost:8000/_wdt/35246e","method":"GET"} []
[2020-06-10T10:22:31.060871+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-06-10T10:22:31.064104+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:22:31.064188+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:31.064252+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:31.069368+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-06-10T10:22:31.074648+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:22:31.410267+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c0da1a"},"request_uri":"http://localhost:8000/_wdt/c0da1a","method":"GET"} []
[2020-06-10T10:22:32.919313+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-06-10T10:22:32.921285+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:22:32.921357+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:32.921396+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:32.924235+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-06-10T10:22:32.929439+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:22:33.263245+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aec0f8"},"request_uri":"http://localhost:8000/_wdt/aec0f8","method":"GET"} []
[2020-06-10T10:22:46.890551+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-06-10T10:22:46.894461+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:22:46.894555+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:46.894607+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:46.908266+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-06-10T10:22:46.909120+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-06-10T10:22:46.910333+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-06-10T10:22:46.916525+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-06-10T10:22:46.931277+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:22:47.280055+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"23da03"},"request_uri":"http://localhost:8000/_wdt/23da03","method":"GET"} []
[2020-06-10T10:22:48.232408+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-06-10T10:22:48.238444+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:22:48.238584+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:48.238720+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:48.243059+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-06-10T10:22:48.250982+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:22:48.581655+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c3e006"},"request_uri":"http://localhost:8000/_wdt/c3e006","method":"GET"} []
[2020-06-10T10:22:49.422400+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-06-10T10:22:49.425729+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:22:49.425888+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:49.425978+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:49.431560+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-06-10T10:22:49.438757+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:22:49.750708+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"90b688"},"request_uri":"http://localhost:8000/_wdt/90b688","method":"GET"} []
[2020-06-10T10:22:50.520493+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-06-10T10:22:50.522347+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:22:50.522419+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:50.522456+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:50.525252+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-06-10T10:22:50.530744+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:22:50.853629+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"43518b"},"request_uri":"http://localhost:8000/_wdt/43518b","method":"GET"} []
[2020-06-10T10:22:51.888650+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-06-10T10:22:51.893744+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:22:51.893936+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:51.894053+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:51.903169+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-06-10T10:22:51.921690+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:22:52.228146+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6063ab"},"request_uri":"http://localhost:8000/_wdt/6063ab","method":"GET"} []
[2020-06-10T10:22:52.966585+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-06-10T10:22:52.970793+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:22:52.970873+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:52.970915+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:22:52.983773+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-06-10T10:22:52.984466+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-06-10T10:22:52.985160+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-06-10T10:22:52.991103+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-06-10T10:22:52.991937+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-06-10T10:22:52.992534+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-06-10T10:22:52.993079+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-06-10T10:22:53.002796+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:22:53.297147+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8b5aa1"},"request_uri":"http://localhost:8000/_wdt/8b5aa1","method":"GET"} []
[2020-06-10T10:27:58.126552+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-06-10T10:27:58.130353+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:27:58.130471+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:27:58.130537+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:27:58.151836+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-06-10T10:27:58.152875+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-06-10T10:27:58.153921+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-06-10T10:27:58.160418+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-06-10T10:27:58.161226+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-06-10T10:27:58.161983+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-06-10T10:27:58.162880+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-06-10T10:27:58.171778+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:27:58.533356+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1cb46a"},"request_uri":"http://localhost:8000/_wdt/1cb46a","method":"GET"} []
[2020-06-10T10:28:16.653038+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-06-10T10:28:16.655444+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:28:16.655516+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:28:16.655555+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:28:16.661741+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gross_amount AS gross_amount_2, t0.customer_id AS customer_id_3, t0.user_id AS user_id_4 FROM `order` t0 [] []
[2020-06-10T10:28:16.765568+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:28:17.119112+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"820128"},"request_uri":"http://localhost:8000/_wdt/820128","method":"GET"} []
[2020-06-10T10:28:33.601899+02:00] request.INFO: Matched route "transfer_index". {"route":"transfer_index","route_parameters":{"_route":"transfer_index","_controller":"App\\Controller\\TransferController::index"},"request_uri":"http://localhost:8000/transfer/","method":"GET"} []
[2020-06-10T10:28:33.605405+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:28:33.605541+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:28:33.605655+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:28:33.612422+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.status AS status_2, t0.to_id_id AS to_id_id_3 FROM transfer t0 [] []
[2020-06-10T10:28:33.686584+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:28:34.065320+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"654fb4"},"request_uri":"http://localhost:8000/_wdt/654fb4","method":"GET"} []
[2020-06-10T10:29:51.097068+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-06-10T10:29:51.100543+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:29:51.100662+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:29:51.100784+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:29:51.122228+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-06-10T10:29:51.123826+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-06-10T10:29:51.127072+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-06-10T10:29:51.140073+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-06-10T10:29:51.141913+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-06-10T10:29:51.143018+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-06-10T10:29:51.144015+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-06-10T10:29:51.159504+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:29:51.533822+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d86363"},"request_uri":"http://localhost:8000/_wdt/d86363","method":"GET"} []
[2020-06-10T10:31:51.897814+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-06-10T10:31:51.901086+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:31:51.901190+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:31:51.901249+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:31:51.915341+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-06-10T10:31:51.916312+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-06-10T10:31:51.917408+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-06-10T10:31:51.923808+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-06-10T10:31:51.924535+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-06-10T10:31:51.924975+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-06-10T10:31:51.925532+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-06-10T10:31:51.938070+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:31:52.266081+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1cf57f"},"request_uri":"http://localhost:8000/_wdt/1cf57f","method":"GET"} []
[2020-06-10T10:34:53.542452+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-06-10T10:34:53.545261+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:34:53.545344+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:34:53.545415+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:34:53.552059+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:34:53.892398+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"69c77a"},"request_uri":"http://localhost:8000/_wdt/69c77a","method":"GET"} []
[2020-06-10T10:34:56.668452+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-06-10T10:34:56.671475+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:34:56.671586+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:34:56.671655+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:34:56.676463+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-06-10T10:34:56.682745+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:34:56.992755+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"463371"},"request_uri":"http://localhost:8000/_wdt/463371","method":"GET"} []
[2020-06-10T10:35:00.284671+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-06-10T10:35:00.288030+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:35:00.288139+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:35:00.288232+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:35:00.311560+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-06-10T10:35:00.312767+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-06-10T10:35:00.314493+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-06-10T10:35:00.325355+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-06-10T10:35:00.326841+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-06-10T10:35:00.327708+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-06-10T10:35:00.328887+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-06-10T10:35:00.345041+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:35:00.682825+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a89882"},"request_uri":"http://localhost:8000/_wdt/a89882","method":"GET"} []
[2020-06-10T10:35:41.822520+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"3"},"request_uri":"http://localhost:8000/product/3","method":"GET"} []
[2020-06-10T10:35:41.825232+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:35:41.825355+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:35:41.825426+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:35:41.833843+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["3"] []
[2020-06-10T10:35:41.860117+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-06-10T10:35:41.860782+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-06-10T10:35:41.861194+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-06-10T10:35:41.863632+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:35:42.175117+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"76d84c"},"request_uri":"http://localhost:8000/_wdt/76d84c","method":"GET"} []
[2020-06-10T10:35:45.177135+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-06-10T10:35:45.180635+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:35:45.180738+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:35:45.180801+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:35:45.196400+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-06-10T10:35:45.197164+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-06-10T10:35:45.198112+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-06-10T10:35:45.207341+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-06-10T10:35:45.208238+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-06-10T10:35:45.208897+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-06-10T10:35:45.209514+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-06-10T10:35:45.220184+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:35:45.554859+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a28774"},"request_uri":"http://localhost:8000/_wdt/a28774","method":"GET"} []
[2020-06-10T10:36:47.678131+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-06-10T10:36:47.680730+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:36:47.680807+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:36:47.680847+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:36:47.690993+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-06-10T10:36:47.691768+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-06-10T10:36:47.692714+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-06-10T10:36:47.700707+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:36:48.005827+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"099a8c"},"request_uri":"http://localhost:8000/_wdt/099a8c","method":"GET"} []
[2020-06-10T10:36:50.223036+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-06-10T10:36:50.225547+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:36:50.225627+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:36:50.225684+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:36:50.230015+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-06-10T10:36:50.299371+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-06-10T10:36:50.352649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? [1] []
[2020-06-10T10:36:50.356209+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-06-10T10:36:50.357237+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? [2] []
[2020-06-10T10:36:50.361657+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:36:50.750646+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"26899d"},"request_uri":"http://localhost:8000/_wdt/26899d","method":"GET"} []
[2020-06-10T10:36:52.053768+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-06-10T10:36:52.057061+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:36:52.057208+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:36:52.057300+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:36:52.073934+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-06-10T10:36:52.074994+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-06-10T10:36:52.076264+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-06-10T10:36:52.090448+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:36:52.458033+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff6e67"},"request_uri":"http://localhost:8000/_wdt/ff6e67","method":"GET"} []
[2020-06-10T10:39:37.628679+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-06-10T10:39:37.633886+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:39:37.634022+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:37.634093+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:37.641617+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:39:37.952984+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d79b6b"},"request_uri":"http://localhost:8000/_wdt/d79b6b","method":"GET"} []
[2020-06-10T10:39:38.514065+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-06-10T10:39:38.516013+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:39:38.516089+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:38.516149+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:38.525368+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-06-10T10:39:38.526118+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-06-10T10:39:38.526919+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-06-10T10:39:38.536322+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:39:38.842878+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e6e6f3"},"request_uri":"http://localhost:8000/_wdt/e6e6f3","method":"GET"} []
[2020-06-10T10:39:39.166641+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-06-10T10:39:39.168802+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:39:39.168921+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:39.168989+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:39.174693+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:39:39.483414+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5008c6"},"request_uri":"http://localhost:8000/_wdt/5008c6","method":"GET"} []
[2020-06-10T10:39:45.633195+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-06-10T10:39:45.636084+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:39:45.636175+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:45.636245+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:45.645178+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-06-10T10:39:45.645998+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-06-10T10:39:45.646730+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-06-10T10:39:45.657692+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:39:45.992124+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9d633e"},"request_uri":"http://localhost:8000/_wdt/9d633e","method":"GET"} []
[2020-06-10T10:39:46.869631+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-06-10T10:39:46.871441+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:39:46.871526+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:46.873081+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:46.880871+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-06-10T10:39:46.881616+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-06-10T10:39:46.882446+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-06-10T10:39:46.885925+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-06-10T10:39:46.894149+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:39:47.226776+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0ed99b"},"request_uri":"http://localhost:8000/_wdt/0ed99b","method":"GET"} []
[2020-06-10T10:39:48.248532+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-06-10T10:39:48.254199+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:39:48.254336+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:48.254444+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:48.262152+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-06-10T10:39:48.274757+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:39:48.589238+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0bdb5f"},"request_uri":"http://localhost:8000/_wdt/0bdb5f","method":"GET"} []
[2020-06-10T10:39:49.429912+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-06-10T10:39:49.431727+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:39:49.431798+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:49.431845+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:49.444410+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-06-10T10:39:49.445167+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-06-10T10:39:49.446117+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-06-10T10:39:49.449924+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-06-10T10:39:49.460131+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:39:49.808207+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"58dd66"},"request_uri":"http://localhost:8000/_wdt/58dd66","method":"GET"} []
[2020-06-10T10:39:50.770510+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-06-10T10:39:50.774839+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:39:50.775031+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:50.775105+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:50.786901+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-06-10T10:39:50.787590+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-06-10T10:39:50.788138+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-06-10T10:39:50.796656+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:39:51.114349+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8bbf31"},"request_uri":"http://localhost:8000/_wdt/8bbf31","method":"GET"} []
[2020-06-10T10:39:54.397729+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-06-10T10:39:54.400056+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:39:54.400132+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:54.400171+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:54.404767+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:39:54.726587+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ef7a2f"},"request_uri":"http://localhost:8000/_wdt/ef7a2f","method":"GET"} []
[2020-06-10T10:39:57.284943+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-06-10T10:39:57.288298+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:39:57.288476+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:57.288591+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:57.294234+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-06-10T10:39:57.305356+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:39:57.628650+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eacc45"},"request_uri":"http://localhost:8000/_wdt/eacc45","method":"GET"} []
[2020-06-10T10:39:59.670454+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-06-10T10:39:59.673303+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:39:59.673671+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:59.673757+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:39:59.678230+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-06-10T10:39:59.685256+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:39:59.992795+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0c4e8b"},"request_uri":"http://localhost:8000/_wdt/0c4e8b","method":"GET"} []
[2020-06-10T10:40:03.856789+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-06-10T10:40:03.859415+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:40:03.859545+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:40:03.859614+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:40:03.864360+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-06-10T10:40:03.871556+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-06-10T10:40:03.872233+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? [1] []
[2020-06-10T10:40:03.873230+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-06-10T10:40:03.873497+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? [2] []
[2020-06-10T10:40:03.878568+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:40:04.214830+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ac2ba7"},"request_uri":"http://localhost:8000/_wdt/ac2ba7","method":"GET"} []
[2020-06-10T10:40:06.086385+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-06-10T10:40:06.092595+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:40:06.092781+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:40:06.092904+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:40:06.102631+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:40:06.403746+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"053076"},"request_uri":"http://localhost:8000/_wdt/053076","method":"GET"} []
[2020-06-10T10:40:08.164582+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-06-10T10:40:08.172669+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:40:08.173496+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:40:08.173640+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:40:08.195256+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-06-10T10:40:08.196594+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-06-10T10:40:08.197979+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-06-10T10:40:08.204282+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-06-10T10:40:08.213226+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:40:08.529634+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eaecf6"},"request_uri":"http://localhost:8000/_wdt/eaecf6","method":"GET"} []
[2020-06-10T10:40:10.040602+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-06-10T10:40:10.043873+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:40:10.043965+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:40:10.044045+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:40:10.047934+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-06-10T10:40:10.053009+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:40:10.383878+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"22ef54"},"request_uri":"http://localhost:8000/_wdt/22ef54","method":"GET"} []
[2020-06-10T10:40:14.349301+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-06-10T10:40:14.351929+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:40:14.352011+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:40:14.352067+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:40:14.357548+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:40:14.695579+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"844a31"},"request_uri":"http://localhost:8000/_wdt/844a31","method":"GET"} []
[2020-06-10T10:41:28.282062+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-06-10T10:41:28.284677+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:41:28.284760+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:28.284826+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:28.289681+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-06-10T10:41:28.294968+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-06-10T10:41:28.296153+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? [1] []
[2020-06-10T10:41:28.297250+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [2] []
[2020-06-10T10:41:28.297662+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? [2] []
[2020-06-10T10:41:28.300375+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:41:28.621391+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f8048c"},"request_uri":"http://localhost:8000/_wdt/f8048c","method":"GET"} []
[2020-06-10T10:41:31.988176+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-06-10T10:41:31.990782+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:41:31.990864+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:31.990905+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:32.002907+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-06-10T10:41:32.003715+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-06-10T10:41:32.004656+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-06-10T10:41:32.008217+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-06-10T10:41:32.017179+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:41:32.353515+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"79b6d0"},"request_uri":"http://localhost:8000/_wdt/79b6d0","method":"GET"} []
[2020-06-10T10:41:42.536322+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-06-10T10:41:42.541194+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:41:42.541322+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:42.541390+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:42.547764+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:41:42.859657+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fff04a"},"request_uri":"http://localhost:8000/_wdt/fff04a","method":"GET"} []
[2020-06-10T10:41:44.191145+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-06-10T10:41:44.195272+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:41:44.195403+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:44.195479+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:44.215327+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-06-10T10:41:44.216966+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-06-10T10:41:44.218283+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,9]] []
[2020-06-10T10:41:44.231950+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:41:44.559871+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6bef1d"},"request_uri":"http://localhost:8000/_wdt/6bef1d","method":"GET"} []
[2020-06-10T10:41:45.735234+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-06-10T10:41:45.739122+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:41:45.739207+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:45.739269+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:45.749210+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-06-10T10:41:45.749895+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-06-10T10:41:45.751094+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2,3,4]] []
[2020-06-10T10:41:45.758066+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-06-10T10:41:45.770440+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:41:46.085868+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"adb452"},"request_uri":"http://localhost:8000/_wdt/adb452","method":"GET"} []
[2020-06-10T10:41:47.488556+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-06-10T10:41:47.492523+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:41:47.492634+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:47.492714+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:47.497795+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-06-10T10:41:47.504042+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:41:47.816610+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"646011"},"request_uri":"http://localhost:8000/_wdt/646011","method":"GET"} []
[2020-06-10T10:41:48.920597+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-06-10T10:41:48.924259+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:41:48.924358+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:48.924426+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:41:48.928206+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-06-10T10:41:48.933597+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:41:49.239673+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"16688b"},"request_uri":"http://localhost:8000/_wdt/16688b","method":"GET"} []
[2020-06-10T10:42:58.959201+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-06-10T10:42:58.963638+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:42:58.963750+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:42:58.963814+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:42:58.972048+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.gross_amount AS gross_amount_2, t0.customer_id AS customer_id_3, t0.user_id AS user_id_4 FROM `order` t0 [] []
[2020-06-10T10:42:58.978202+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:42:59.301427+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fa02d4"},"request_uri":"http://localhost:8000/_wdt/fa02d4","method":"GET"} []
[2020-06-10T10:43:43.479767+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-06-10T10:43:43.483707+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:43:43.483845+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:43:43.483921+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:43:43.511992+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-06-10T10:43:43.513467+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-06-10T10:43:43.515321+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-06-10T10:43:43.526997+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-06-10T10:43:43.528558+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-06-10T10:43:43.529953+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-06-10T10:43:43.530923+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-06-10T10:43:43.544875+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:43:43.880528+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"13f1c1"},"request_uri":"http://localhost:8000/_wdt/13f1c1","method":"GET"} []
[2020-06-10T10:46:18.072225+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /test"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /test\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/test/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-06-10T10:46:18.193069+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a9c840"},"request_uri":"http://localhost:8000/_wdt/a9c840","method":"GET"} []
[2020-06-10T10:46:23.560288+02:00] request.INFO: Matched route "test". {"route":"test","route_parameters":{"_route":"test","_controller":"App\\Controller\\TestController::index"},"request_uri":"http://localhost:8000/one","method":"GET"} []
[2020-06-10T10:46:23.563081+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:46:23.563182+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:46:23.563244+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:46:23.568700+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:46:23.840012+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b1abc9"},"request_uri":"http://localhost:8000/_wdt/b1abc9","method":"GET"} []
[2020-06-10T10:46:41.405980+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-06-10T10:46:41.408841+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:46:41.408949+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:46:41.409010+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:46:41.414280+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:46:41.685913+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"67b5ae"},"request_uri":"http://localhost:8000/_wdt/67b5ae","method":"GET"} []
[2020-06-10T10:47:01.028161+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-06-10T10:47:01.031061+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:47:01.031153+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:47:01.031219+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:47:01.037624+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:47:01.390381+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"41981a"},"request_uri":"http://localhost:8000/_wdt/41981a","method":"GET"} []
[2020-06-10T10:49:23.202215+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-06-10T10:49:23.207232+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:49:23.207386+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:49:23.207480+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:49:23.231257+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-06-10T10:49:23.232571+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-06-10T10:49:23.234129+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-06-10T10:49:23.245816+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-06-10T10:49:23.246848+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-06-10T10:49:23.247635+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-06-10T10:49:23.248309+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-06-10T10:49:23.261018+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:49:23.637176+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cad96f"},"request_uri":"http://localhost:8000/_wdt/cad96f","method":"GET"} []
[2020-06-10T10:49:26.379468+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-06-10T10:49:26.384554+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:49:26.384797+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:49:26.384921+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:49:26.394480+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:49:26.718722+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"18bdd1"},"request_uri":"http://localhost:8000/_wdt/18bdd1","method":"GET"} []
[2020-06-10T10:52:04.822043+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-06-10T10:52:04.825550+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:52:04.826044+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:52:04.826126+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:52:04.836137+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:52:05.322600+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2c144a"},"request_uri":"http://localhost:8000/_wdt/2c144a","method":"GET"} []
[2020-06-10T10:55:08.589648+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-06-10T10:55:08.594039+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:55:08.594151+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:55:08.594215+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:55:08.616763+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-06-10T10:55:08.617737+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-06-10T10:55:08.619118+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-06-10T10:55:08.627939+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-06-10T10:55:08.628990+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-06-10T10:55:08.629888+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-06-10T10:55:08.630572+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-06-10T10:55:08.641198+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:55:09.024699+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f409c"},"request_uri":"http://localhost:8000/_wdt/8f409c","method":"GET"} []
[2020-06-10T10:55:14.219263+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-06-10T10:55:14.222133+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:55:14.222269+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:55:14.222325+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:55:14.227139+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.price AS price_3, t0.quantity AS quantity_4, t0.description AS description_5, t0.model AS model_6, t0.serial AS serial_7, t0.isavailable AS isavailable_8, t0.brand_id AS brand_id_9, t0.category_id AS category_id_10, t0.store_id AS store_id_11, t0.product_type_id AS product_type_id_12 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-06-10T10:55:14.237572+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [3] []
[2020-06-10T10:55:14.238330+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-06-10T10:55:14.238639+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-06-10T10:55:14.241092+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:55:14.581598+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7ef5c7"},"request_uri":"http://localhost:8000/_wdt/7ef5c7","method":"GET"} []
[2020-06-10T10:55:23.540578+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-06-10T10:55:23.543238+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-06-10T10:55:23.543310+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:55:23.543350+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-06-10T10:55:23.558257+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-06-10T10:55:23.558930+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-06-10T10:55:23.559620+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.quantity AS quantity_3, p0_.description AS description_4, p0_.model AS model_5, p0_.serial AS serial_6, p0_.isavailable AS isavailable_7, p0_.brand_id AS brand_id_8, p0_.category_id AS category_id_9, p0_.store_id AS store_id_10, p0_.product_type_id AS product_type_id_11 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-06-10T10:55:23.564840+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-06-10T10:55:23.565637+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-06-10T10:55:23.566464+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-06-10T10:55:23.567131+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-06-10T10:55:23.576482+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-06-10T10:55:23.928231+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"53919e"},"request_uri":"http://localhost:8000/_wdt/53919e","method":"GET"} []
[2020-07-05T16:49:26.510123+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-07-05T16:49:26.725892+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e24759"},"request_uri":"http://localhost:8000/_wdt/e24759","method":"GET"} []
[2020-07-05T16:49:32.120260+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-07-05T16:49:32.130924+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T16:49:32.131029+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T16:49:32.131092+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T16:49:32.142185+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T16:49:32.720586+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7be526"},"request_uri":"http://localhost:8000/_wdt/7be526","method":"GET"} []
[2020-07-05T16:49:38.149565+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-07-05T16:49:38.153488+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T16:49:38.153564+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T16:49:38.153619+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T16:49:38.250440+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-07-05T16:49:38.477555+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T16:49:38.851115+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"93a1fb"},"request_uri":"http://localhost:8000/_wdt/93a1fb","method":"GET"} []
[2020-07-05T16:49:54.069856+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-07-05T16:49:54.072078+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T16:49:54.072148+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T16:49:54.072205+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T16:49:54.076223+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T16:49:54.350716+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"10e2ae"},"request_uri":"http://localhost:8000/_wdt/10e2ae","method":"GET"} []
[2020-07-05T18:04:56.531502+02:00] console.ERROR: Error thrown while running command "make:entity". Message: "The target-entity App\Entity\Order cannot be found in 'App\Entity\User#orders'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Order cannot be found in 'App\\Entity\\User#orders'. at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/MappingException.php:772)","command":"make:entity","message":"The target-entity App\\Entity\\Order cannot be found in 'App\\Entity\\User#orders'."} []
[2020-07-05T18:04:56.532592+02:00] console.DEBUG: Command "make:entity" exited with code "1" {"command":"make:entity","code":1} []
[2020-07-05T18:06:41.195865+02:00] console.ERROR: Error thrown while running command "make:entity". Message: "The target-entity App\Entity\Order cannot be found in 'App\Entity\User#orders'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Order cannot be found in 'App\\Entity\\User#orders'. at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/MappingException.php:772)","command":"make:entity","message":"The target-entity App\\Entity\\Order cannot be found in 'App\\Entity\\User#orders'."} []
[2020-07-05T18:06:41.197002+02:00] console.DEBUG: Command "make:entity" exited with code "1" {"command":"make:entity","code":1} []
[2020-07-05T18:06:47.315026+02:00] console.ERROR: Error thrown while running command "make:entity". Message: "The target-entity App\Entity\Order cannot be found in 'App\Entity\User#orders'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\Order cannot be found in 'App\\Entity\\User#orders'. at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/MappingException.php:772)","command":"make:entity","message":"The target-entity App\\Entity\\Order cannot be found in 'App\\Entity\\User#orders'."} []
[2020-07-05T18:06:47.316176+02:00] console.DEBUG: Command "make:entity" exited with code "1" {"command":"make:entity","code":1} []
[2020-07-05T18:13:08.632525+02:00] console.ERROR: Error thrown while running command "doctrine:schema:update --force". Message: "An exception occurred in driver: SQLSTATE[HY000] [1049] Unknown database 'inventory'" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1049] Unknown database 'inventory' at /var/www/inventory/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'inventory' at /var/www/inventory/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'inventory' at /var/www/inventory/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)","command":"doctrine:schema:update --force","message":"An exception occurred in driver: SQLSTATE[HY000] [1049] Unknown database 'inventory'"} []
[2020-07-05T18:13:08.633573+02:00] console.DEBUG: Command "doctrine:schema:update --force" exited with code "1" {"command":"doctrine:schema:update --force","code":1} []
[2020-07-05T18:13:29.844916+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-07-05T18:13:29.849132+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-07-05T18:13:29.850170+02:00] doctrine.DEBUG: CREATE TABLE college (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:30.141460+02:00] doctrine.DEBUG: CREATE TABLE department (id INT AUTO_INCREMENT NOT NULL, college_id INT NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(255) DEFAULT NULL, INDEX IDX_CD1DE18A770124B2 (college_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:30.631153+02:00] doctrine.DEBUG: CREATE TABLE attribute (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, is_active TINYINT(1) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:30.953956+02:00] doctrine.DEBUG: CREATE TABLE user_type (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:31.243561+02:00] doctrine.DEBUG: CREATE TABLE stock (id INT AUTO_INCREMENT NOT NULL, product_id INT DEFAULT NULL, store_id INT DEFAULT NULL, quantity INT NOT NULL, date DATE NOT NULL, INDEX IDX_4B3656604584665A (product_id), INDEX IDX_4B365660B092A811 (store_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:31.701296+02:00] doctrine.DEBUG: CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, department_id INT DEFAULT NULL, user_type_id INT DEFAULT NULL, username VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, first_name VARCHAR(255) NOT NULL, middle_name VARCHAR(255) DEFAULT NULL, last_name VARCHAR(255) DEFAULT NULL, UNIQUE INDEX UNIQ_8D93D649F85E0677 (username), INDEX IDX_8D93D649AE80F5DF (department_id), INDEX IDX_8D93D6499D419299 (user_type_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:32.135744+02:00] doctrine.DEBUG: CREATE TABLE `order` (id INT AUTO_INCREMENT NOT NULL, product_id INT DEFAULT NULL, receiver_id INT DEFAULT NULL, quantity INT NOT NULL, requested_date DATE NOT NULL, recieved_date DATE DEFAULT NULL, INDEX IDX_F52993984584665A (product_id), INDEX IDX_F5299398CD53EDB6 (receiver_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:32.614229+02:00] doctrine.DEBUG: CREATE TABLE categories (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:32.925814+02:00] doctrine.DEBUG: CREATE TABLE product (id INT AUTO_INCREMENT NOT NULL, brand_id INT DEFAULT NULL, category_id INT DEFAULT NULL, product_type_id INT DEFAULT NULL, name VARCHAR(255) NOT NULL, price DOUBLE PRECISION DEFAULT NULL, description VARCHAR(255) DEFAULT NULL, INDEX IDX_D34A04AD44F5D008 (brand_id), INDEX IDX_D34A04AD12469DE2 (category_id), INDEX IDX_D34A04AD14959723 (product_type_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:33.435354+02:00] doctrine.DEBUG: CREATE TABLE product_type (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:33.840205+02:00] doctrine.DEBUG: CREATE TABLE attribute_value (id INT AUTO_INCREMENT NOT NULL, attribute_id INT DEFAULT NULL, value VARCHAR(255) NOT NULL, INDEX IDX_FE4FBB82B6E62EFA (attribute_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:34.173893+02:00] doctrine.DEBUG: CREATE TABLE store (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(255) NOT NULL, is_active TINYINT(1) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:34.586313+02:00] doctrine.DEBUG: CREATE TABLE brand (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:34.920466+02:00] doctrine.DEBUG: CREATE TABLE transfer (id INT AUTO_INCREMENT NOT NULL, to_id_id INT DEFAULT NULL, status SMALLINT NOT NULL, INDEX IDX_4034A3C07478AF67 (to_id_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-07-05T18:13:35.243502+02:00] doctrine.DEBUG: ALTER TABLE department ADD CONSTRAINT FK_CD1DE18A770124B2 FOREIGN KEY (college_id) REFERENCES college (id) [] []
[2020-07-05T18:13:35.913522+02:00] doctrine.DEBUG: ALTER TABLE stock ADD CONSTRAINT FK_4B3656604584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2020-07-05T18:13:36.692356+02:00] doctrine.DEBUG: ALTER TABLE stock ADD CONSTRAINT FK_4B365660B092A811 FOREIGN KEY (store_id) REFERENCES store (id) [] []
[2020-07-05T18:13:37.440095+02:00] doctrine.DEBUG: ALTER TABLE user ADD CONSTRAINT FK_8D93D649AE80F5DF FOREIGN KEY (department_id) REFERENCES department (id) [] []
[2020-07-05T18:13:38.286676+02:00] doctrine.DEBUG: ALTER TABLE user ADD CONSTRAINT FK_8D93D6499D419299 FOREIGN KEY (user_type_id) REFERENCES user_type (id) [] []
[2020-07-05T18:13:39.034640+02:00] doctrine.DEBUG: ALTER TABLE `order` ADD CONSTRAINT FK_F52993984584665A FOREIGN KEY (product_id) REFERENCES product (id) [] []
[2020-07-05T18:13:39.903432+02:00] doctrine.DEBUG: ALTER TABLE `order` ADD CONSTRAINT FK_F5299398CD53EDB6 FOREIGN KEY (receiver_id) REFERENCES user (id) [] []
[2020-07-05T18:13:40.606048+02:00] doctrine.DEBUG: ALTER TABLE product ADD CONSTRAINT FK_D34A04AD44F5D008 FOREIGN KEY (brand_id) REFERENCES brand (id) [] []
[2020-07-05T18:13:41.430850+02:00] doctrine.DEBUG: ALTER TABLE product ADD CONSTRAINT FK_D34A04AD12469DE2 FOREIGN KEY (category_id) REFERENCES categories (id) [] []
[2020-07-05T18:13:42.280045+02:00] doctrine.DEBUG: ALTER TABLE product ADD CONSTRAINT FK_D34A04AD14959723 FOREIGN KEY (product_type_id) REFERENCES product_type (id) [] []
[2020-07-05T18:13:43.170766+02:00] doctrine.DEBUG: ALTER TABLE attribute_value ADD CONSTRAINT FK_FE4FBB82B6E62EFA FOREIGN KEY (attribute_id) REFERENCES attribute (id) [] []
[2020-07-05T18:13:43.872984+02:00] doctrine.DEBUG: ALTER TABLE transfer ADD CONSTRAINT FK_4034A3C07478AF67 FOREIGN KEY (to_id_id) REFERENCES user (id) [] []
[2020-07-05T18:14:57.039964+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/stock/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"stock_index"},"request_uri":"http://localhost:8000/stock","method":"GET"} []
[2020-07-05T18:14:57.045669+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:14:57.045785+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:14:57.045885+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:14:57.062893+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:14:57.088072+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T18:14:57.089947+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:14:57.090023+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:14:57.090076+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:14:57.103194+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 [] []
[2020-07-05T18:14:57.137490+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "order_index" as such route does not exist.")." at /var/www/inventory/templates/base.html.twig line 233 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"order_index\" as such route does not exist.\"). at /var/www/inventory/templates/base.html.twig:233)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"order_index\" as such route does not exist. at /var/www/inventory/vendor/symfony/routing/Generator/CompiledUrlGenerator.php:50)"} []
[2020-07-05T18:14:57.275576+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:14:57.393996+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4eaa10"},"request_uri":"http://localhost:8000/_wdt/4eaa10","method":"GET"} []
[2020-07-05T18:17:00.585516+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T18:17:00.588698+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:17:00.588783+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:17:00.588841+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:17:00.594632+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 [] []
[2020-07-05T18:17:00.611151+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:17:01.088293+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be67e1"},"request_uri":"http://localhost:8000/_wdt/be67e1","method":"GET"} []
[2020-07-05T18:17:03.026362+02:00] request.INFO: Matched route "stock_new". {"route":"stock_new","route_parameters":{"_route":"stock_new","_controller":"App\\Controller\\StockController::new"},"request_uri":"http://localhost:8000/stock/new","method":"GET"} []
[2020-07-05T18:17:03.029502+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:17:03.029594+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:17:03.029655+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:17:03.477555+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.description AS description_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T18:17:03.480420+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T18:17:03.559286+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:17:03.997459+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c8bbc8"},"request_uri":"http://localhost:8000/_wdt/c8bbc8","method":"GET"} []
[2020-07-05T18:19:07.972849+02:00] request.INFO: Matched route "stock_new". {"route":"stock_new","route_parameters":{"_route":"stock_new","_controller":"App\\Controller\\StockController::new"},"request_uri":"http://localhost:8000/stock/new","method":"GET"} []
[2020-07-05T18:19:07.975848+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:19:07.975944+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:19:07.975999+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:19:07.998910+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.description AS description_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T18:19:07.999938+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T18:19:08.010426+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:19:08.278654+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2a5e5a"},"request_uri":"http://localhost:8000/_wdt/2a5e5a","method":"GET"} []
[2020-07-05T18:19:12.961338+02:00] request.INFO: Matched route "stock_new". {"route":"stock_new","route_parameters":{"_route":"stock_new","_controller":"App\\Controller\\StockController::new"},"request_uri":"http://localhost:8000/stock/new","method":"GET"} []
[2020-07-05T18:19:12.966269+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:19:12.966423+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:19:12.966506+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:19:12.978220+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.description AS description_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T18:19:12.978943+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T18:19:12.987040+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:19:13.260070+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dab19d"},"request_uri":"http://localhost:8000/_wdt/dab19d","method":"GET"} []
[2020-07-05T18:19:38.711402+02:00] request.INFO: Matched route "stock_new". {"route":"stock_new","route_parameters":{"_route":"stock_new","_controller":"App\\Controller\\StockController::new"},"request_uri":"http://localhost:8000/stock/new","method":"GET"} []
[2020-07-05T18:19:38.713980+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:19:38.714064+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:19:38.714110+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:19:38.732607+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.price AS price_2, p0_.description AS description_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T18:19:38.733187+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T18:19:38.741082+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:19:38.986110+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"67904c"},"request_uri":"http://localhost:8000/_wdt/67904c","method":"GET"} []
[2020-07-05T18:20:32.513737+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-07-05T18:20:32.515457+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.516716+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.517257+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.517572+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-07-05T18:20:32.517867+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.518399+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.518890+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.519251+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-07-05T18:20:32.519628+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.520250+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.520649+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.520950+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-07-05T18:20:32.521257+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.521773+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.522168+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.522443+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-07-05T18:20:32.522775+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.523335+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.523671+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.523959+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-07-05T18:20:32.524211+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.524726+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.525206+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.525510+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-07-05T18:20:32.525749+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.526232+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.526621+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.526927+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-07-05T18:20:32.527166+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.527715+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.528165+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.528509+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-07-05T18:20:32.528772+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.529207+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.529535+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.529801+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-07-05T18:20:32.530078+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.530565+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.530970+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.531302+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-07-05T18:20:32.531593+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.532246+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.532685+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.532973+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-07-05T18:20:32.533265+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.533759+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.534262+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.534600+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-07-05T18:20:32.534884+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.535482+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.536004+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.536364+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-07-05T18:20:32.536649+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.537121+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.537528+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.537822+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-07-05T18:20:32.541153+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-07-05T18:20:32.541958+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.542519+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.542972+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.543276+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-07-05T18:20:32.543536+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.544032+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.544455+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.544792+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-07-05T18:20:32.545071+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.545568+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.545936+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.546230+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-07-05T18:20:32.546519+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.546978+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.547334+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.547596+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-07-05T18:20:32.547860+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.548447+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.548861+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.549124+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-07-05T18:20:32.549355+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.549816+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.550152+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.550449+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-07-05T18:20:32.550735+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.551800+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.552436+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.552866+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-07-05T18:20:32.553178+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.553833+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.556205+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.556747+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-07-05T18:20:32.557078+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.557643+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.558029+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.558319+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-07-05T18:20:32.558596+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.559116+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.559541+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.559904+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-07-05T18:20:32.560211+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.560757+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.561125+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.561411+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-07-05T18:20:32.561728+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.562253+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.562662+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.562980+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-07-05T18:20:32.563251+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.563849+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.564301+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.565679+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-07-05T18:20:32.566056+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-07-05T18:20:32.566695+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-07-05T18:20:32.568107+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-07-05T18:20:32.569430+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-07-05T18:20:32.573290+02:00] doctrine.DEBUG: ALTER TABLE product CHANGE price price DOUBLE PRECISION NOT NULL [] []
[2020-07-05T18:20:38.398726+02:00] request.INFO: Matched route "stock_new". {"route":"stock_new","route_parameters":{"_route":"stock_new","_controller":"App\\Controller\\StockController::new"},"request_uri":"http://localhost:8000/stock/new","method":"GET"} []
[2020-07-05T18:20:38.401220+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:20:38.401292+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:20:38.401333+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:20:38.421794+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T18:20:38.422798+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T18:20:38.429779+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:20:38.695120+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eb8809"},"request_uri":"http://localhost:8000/_wdt/eb8809","method":"GET"} []
[2020-07-05T18:20:42.572894+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:20:42.575146+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:20:42.575210+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:20:42.575248+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:20:42.655067+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\PropertyAccess\Exception\NoSuchPropertyException: "Neither the property "quantity" nor one of the methods "getQuantity()", "quantity()", "isQuantity()", "hasQuantity()", "__get()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/vendor/symfony/property-access/PropertyAccessor.php line 429 {"exception":"[object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Neither the property \"quantity\" nor one of the methods \"getQuantity()\", \"quantity()\", \"isQuantity()\", \"hasQuantity()\", \"__get()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/vendor/symfony/property-access/PropertyAccessor.php:429)"} []
[2020-07-05T18:20:42.689723+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:20:42.784570+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5bb6f3"},"request_uri":"http://localhost:8000/_wdt/5bb6f3","method":"GET"} []
[2020-07-05T18:21:05.465712+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/store/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"store_index"},"request_uri":"http://localhost:8000/store","method":"GET"} []
[2020-07-05T18:21:05.468938+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:21:05.469026+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:05.469080+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:05.473631+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:21:05.492029+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-07-05T18:21:05.493699+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:21:05.493775+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:05.493814+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:05.498038+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-07-05T18:21:05.503747+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:21:05.784024+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6ea5d8"},"request_uri":"http://localhost:8000/_wdt/6ea5d8","method":"GET"} []
[2020-07-05T18:21:07.030058+02:00] request.INFO: Matched route "store_new". {"route":"store_new","route_parameters":{"_route":"store_new","_controller":"App\\Controller\\StoreController::new"},"request_uri":"http://localhost:8000/store/new","method":"GET"} []
[2020-07-05T18:21:07.032271+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:21:07.032346+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:07.032395+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:07.059717+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:21:07.357531+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"535e08"},"request_uri":"http://localhost:8000/_wdt/535e08","method":"GET"} []
[2020-07-05T18:21:24.781392+02:00] request.INFO: Matched route "store_new". {"route":"store_new","route_parameters":{"_route":"store_new","_controller":"App\\Controller\\StoreController::new"},"request_uri":"http://localhost:8000/store/new","method":"POST"} []
[2020-07-05T18:21:24.784815+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:21:24.784886+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:24.784937+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:24.785102+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:21:25.056332+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:21:25.057496+02:00] doctrine.DEBUG: INSERT INTO store (name, description, is_active) VALUES (?, ?, ?) {"1":"Bigger store","2":"ahah","3":true} []
[2020-07-05T18:21:25.057897+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:21:25.140278+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-07-05T18:21:25.142360+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:21:25.142455+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:25.142516+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:25.145807+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-07-05T18:21:25.150434+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:21:25.430432+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"568177"},"request_uri":"http://localhost:8000/_wdt/568177","method":"GET"} []
[2020-07-05T18:21:26.555106+02:00] request.INFO: Matched route "store_new". {"route":"store_new","route_parameters":{"_route":"store_new","_controller":"App\\Controller\\StoreController::new"},"request_uri":"http://localhost:8000/store/new","method":"GET"} []
[2020-07-05T18:21:26.556652+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:21:26.556718+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:26.556756+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:26.568855+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:21:26.841414+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"241237"},"request_uri":"http://localhost:8000/_wdt/241237","method":"GET"} []
[2020-07-05T18:21:44.211032+02:00] request.INFO: Matched route "store_new". {"route":"store_new","route_parameters":{"_route":"store_new","_controller":"App\\Controller\\StoreController::new"},"request_uri":"http://localhost:8000/store/new","method":"POST"} []
[2020-07-05T18:21:44.214285+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:21:44.214387+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:44.214449+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:44.214698+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:21:44.232324+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:21:44.232871+02:00] doctrine.DEBUG: INSERT INTO store (name, description, is_active) VALUES (?, ?, ?) {"1":"Salvage Store","2":"dfa","3":true} []
[2020-07-05T18:21:44.233354+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:21:44.457762+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-07-05T18:21:44.459207+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:21:44.459262+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:44.459300+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:44.463572+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-07-05T18:21:44.480217+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:21:44.755856+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d9eb4d"},"request_uri":"http://localhost:8000/_wdt/d9eb4d","method":"GET"} []
[2020-07-05T18:21:57.040620+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/product/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"product_index"},"request_uri":"http://localhost:8000/product","method":"GET"} []
[2020-07-05T18:21:57.043394+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:21:57.043528+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:57.043638+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:57.048173+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:21:57.071999+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:21:57.074174+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:21:57.074245+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:57.074302+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:21:57.085126+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\PropertyAccess\Exception\NoSuchPropertyException: "Neither the property "quantity" nor one of the methods "getQuantity()", "quantity()", "isQuantity()", "hasQuantity()", "__get()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/vendor/symfony/property-access/PropertyAccessor.php line 429 {"exception":"[object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Neither the property \"quantity\" nor one of the methods \"getQuantity()\", \"quantity()\", \"isQuantity()\", \"hasQuantity()\", \"__get()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/vendor/symfony/property-access/PropertyAccessor.php:429)"} []
[2020-07-05T18:21:57.117329+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:21:57.222993+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"54fa99"},"request_uri":"http://localhost:8000/_wdt/54fa99","method":"GET"} []
[2020-07-05T18:22:08.082421+02:00] console.DEBUG: Command "make:crud" exited with code "1" {"command":"make:crud","code":1} []
[2020-07-05T18:22:12.675331+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:22:12.677727+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:22:12.677800+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:22:12.677841+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:22:12.687142+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\PropertyAccess\Exception\NoSuchPropertyException: "Neither the property "quantity" nor one of the methods "getQuantity()", "quantity()", "isQuantity()", "hasQuantity()", "__get()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/vendor/symfony/property-access/PropertyAccessor.php line 429 {"exception":"[object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Neither the property \"quantity\" nor one of the methods \"getQuantity()\", \"quantity()\", \"isQuantity()\", \"hasQuantity()\", \"__get()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/vendor/symfony/property-access/PropertyAccessor.php:429)"} []
[2020-07-05T18:22:12.716482+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:22:12.809712+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"227795"},"request_uri":"http://localhost:8000/_wdt/227795","method":"GET"} []
[2020-07-05T18:24:16.881122+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:24:16.884184+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:24:16.884264+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:24:16.884318+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:24:16.903350+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\PropertyAccess\Exception\NoSuchPropertyException: "Neither the property "quantity" nor one of the methods "getQuantity()", "quantity()", "isQuantity()", "hasQuantity()", "__get()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/vendor/symfony/property-access/PropertyAccessor.php line 429 {"exception":"[object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Neither the property \"quantity\" nor one of the methods \"getQuantity()\", \"quantity()\", \"isQuantity()\", \"hasQuantity()\", \"__get()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/vendor/symfony/property-access/PropertyAccessor.php:429)"} []
[2020-07-05T18:24:16.960048+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:24:17.113121+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1d966a"},"request_uri":"http://localhost:8000/_wdt/1d966a","method":"GET"} []
[2020-07-05T18:26:27.562897+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:26:27.565290+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:26:27.565356+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:26:27.565396+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:26:27.585414+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T18:26:27.587366+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T18:26:27.591087+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T18:26:27.591864+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T18:26:27.592427+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T18:26:27.605397+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "store" nor one of the methods "store()", "getstore()"/"isstore()"/"hasstore()" or "__call()" exist and have public access in class "Symfony\Component\Form\FormView"." at /var/www/inventory/templates/product/_form.html.twig line 7 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"store\" nor one of the methods \"store()\", \"getstore()\"/\"isstore()\"/\"hasstore()\" or \"__call()\" exist and have public access in class \"Symfony\\Component\\Form\\FormView\". at /var/www/inventory/templates/product/_form.html.twig:7)"} []
[2020-07-05T18:26:27.652652+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:26:27.760718+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6ff89f"},"request_uri":"http://localhost:8000/_wdt/6ff89f","method":"GET"} []
[2020-07-05T18:26:52.912428+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:26:52.915278+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:26:52.915354+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:26:52.915398+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:26:52.926000+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T18:26:52.926646+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T18:26:52.927590+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T18:26:52.928035+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T18:26:52.928346+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T18:26:52.943312+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "model" nor one of the methods "model()", "getmodel()"/"ismodel()"/"hasmodel()" or "__call()" exist and have public access in class "Symfony\Component\Form\FormView"." at /var/www/inventory/templates/product/_form.html.twig line 36 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"model\" nor one of the methods \"model()\", \"getmodel()\"/\"ismodel()\"/\"hasmodel()\" or \"__call()\" exist and have public access in class \"Symfony\\Component\\Form\\FormView\". at /var/www/inventory/templates/product/_form.html.twig:36)"} []
[2020-07-05T18:26:52.989541+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:26:53.089701+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d91034"},"request_uri":"http://localhost:8000/_wdt/d91034","method":"GET"} []
[2020-07-05T18:27:16.993441+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:27:16.996612+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:27:16.996689+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:27:16.996732+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:27:17.008860+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T18:27:17.009494+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T18:27:17.010512+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T18:27:17.010944+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T18:27:17.011275+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T18:27:17.026214+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:27:17.345649+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1524e2"},"request_uri":"http://localhost:8000/_wdt/1524e2","method":"GET"} []
[2020-07-05T18:27:31.194905+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /category"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /category\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/category/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-05T18:27:31.324808+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b4c9c3"},"request_uri":"http://localhost:8000/_wdt/b4c9c3","method":"GET"} []
[2020-07-05T18:27:36.393242+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /catagory"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /catagory\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/catagory/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-05T18:27:36.518209+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5a76d"},"request_uri":"http://localhost:8000/_wdt/d5a76d","method":"GET"} []
[2020-07-05T18:27:43.264819+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /category"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /category\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/category/\". at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-07-05T18:27:43.395136+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ad86a0"},"request_uri":"http://localhost:8000/_wdt/ad86a0","method":"GET"} []
[2020-07-05T18:27:56.628730+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/categories/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"categories_index"},"request_uri":"http://localhost:8000/categories","method":"GET"} []
[2020-07-05T18:27:56.630960+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:27:56.631031+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:27:56.631091+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:27:56.635285+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:27:56.656035+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-07-05T18:27:56.658669+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:27:56.658751+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:27:56.658828+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:27:56.662852+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-07-05T18:27:56.667277+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:27:56.935979+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0e3a27"},"request_uri":"http://localhost:8000/_wdt/0e3a27","method":"GET"} []
[2020-07-05T18:27:58.331936+02:00] request.INFO: Matched route "categories_new". {"route":"categories_new","route_parameters":{"_route":"categories_new","_controller":"App\\Controller\\CategoriesController::new"},"request_uri":"http://localhost:8000/categories/new","method":"GET"} []
[2020-07-05T18:27:58.334173+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:27:58.334380+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:27:58.334467+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:27:58.357131+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:27:58.692557+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c7fcc5"},"request_uri":"http://localhost:8000/_wdt/c7fcc5","method":"GET"} []
[2020-07-05T18:28:09.570085+02:00] request.INFO: Matched route "categories_new". {"route":"categories_new","route_parameters":{"_route":"categories_new","_controller":"App\\Controller\\CategoriesController::new"},"request_uri":"http://localhost:8000/categories/new","method":"POST"} []
[2020-07-05T18:28:09.573591+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:09.573687+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:09.573750+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:09.573972+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:09.593371+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:28:09.593853+02:00] doctrine.DEBUG: INSERT INTO categories (name, description) VALUES (?, ?) {"1":"Electronics","2":"sds"} []
[2020-07-05T18:28:09.594191+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:28:09.721266+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-07-05T18:28:09.723468+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:09.723540+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:09.723579+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:09.726882+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-07-05T18:28:09.732107+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:10.002387+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e9e17d"},"request_uri":"http://localhost:8000/_wdt/e9e17d","method":"GET"} []
[2020-07-05T18:28:11.438545+02:00] request.INFO: Matched route "categories_new". {"route":"categories_new","route_parameters":{"_route":"categories_new","_controller":"App\\Controller\\CategoriesController::new"},"request_uri":"http://localhost:8000/categories/new","method":"GET"} []
[2020-07-05T18:28:11.440986+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:11.441075+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:11.441128+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:11.453563+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:11.742657+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f94a14"},"request_uri":"http://localhost:8000/_wdt/f94a14","method":"GET"} []
[2020-07-05T18:28:15.363422+02:00] request.INFO: Matched route "categories_new". {"route":"categories_new","route_parameters":{"_route":"categories_new","_controller":"App\\Controller\\CategoriesController::new"},"request_uri":"http://localhost:8000/categories/new","method":"POST"} []
[2020-07-05T18:28:15.366795+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:15.366928+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:15.366994+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:15.367215+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:15.384094+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:28:15.384698+02:00] doctrine.DEBUG: INSERT INTO categories (name, description) VALUES (?, ?) {"1":"Stationary","2":"s"} []
[2020-07-05T18:28:15.385116+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:28:15.514619+02:00] request.INFO: Matched route "categories_index". {"route":"categories_index","route_parameters":{"_route":"categories_index","_controller":"App\\Controller\\CategoriesController::index"},"request_uri":"http://localhost:8000/categories/","method":"GET"} []
[2020-07-05T18:28:15.516814+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:15.516908+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:15.516965+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:15.520890+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-07-05T18:28:15.525556+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:15.781223+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aec37c"},"request_uri":"http://localhost:8000/_wdt/aec37c","method":"GET"} []
[2020-07-05T18:28:21.769470+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:28:21.772081+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:21.772156+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:21.772208+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:21.782914+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T18:28:21.783658+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T18:28:21.784703+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T18:28:21.785126+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T18:28:21.785860+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T18:28:21.794985+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:22.072820+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"29088f"},"request_uri":"http://localhost:8000/_wdt/29088f","method":"GET"} []
[2020-07-05T18:28:34.965514+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/producttype/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"product_type_index"},"request_uri":"http://localhost:8000/producttype","method":"GET"} []
[2020-07-05T18:28:34.968614+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:34.968721+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:34.968794+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:34.975463+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:35.006412+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-07-05T18:28:35.008222+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:35.008295+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:35.008352+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:35.011986+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-07-05T18:28:35.018469+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:35.328474+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"94911b"},"request_uri":"http://localhost:8000/_wdt/94911b","method":"GET"} []
[2020-07-05T18:28:36.868700+02:00] request.INFO: Matched route "product_type_new". {"route":"product_type_new","route_parameters":{"_route":"product_type_new","_controller":"App\\Controller\\ProductTypeController::new"},"request_uri":"http://localhost:8000/producttype/new","method":"GET"} []
[2020-07-05T18:28:36.870667+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:36.870781+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:36.870856+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:36.894122+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:37.152519+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"30cba1"},"request_uri":"http://localhost:8000/_wdt/30cba1","method":"GET"} []
[2020-07-05T18:28:44.114765+02:00] request.INFO: Matched route "product_type_new". {"route":"product_type_new","route_parameters":{"_route":"product_type_new","_controller":"App\\Controller\\ProductTypeController::new"},"request_uri":"http://localhost:8000/producttype/new","method":"POST"} []
[2020-07-05T18:28:44.117388+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:44.117497+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:44.117553+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:44.117782+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:44.132776+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:28:44.133298+02:00] doctrine.DEBUG: INSERT INTO product_type (name, description) VALUES (?, ?) {"1":"Alaki","2":"s"} []
[2020-07-05T18:28:44.133667+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:28:44.257841+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-07-05T18:28:44.259960+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:44.260044+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:44.260095+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:44.263765+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-07-05T18:28:44.268477+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:44.562738+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bacac4"},"request_uri":"http://localhost:8000/_wdt/bacac4","method":"GET"} []
[2020-07-05T18:28:45.718661+02:00] request.INFO: Matched route "product_type_new". {"route":"product_type_new","route_parameters":{"_route":"product_type_new","_controller":"App\\Controller\\ProductTypeController::new"},"request_uri":"http://localhost:8000/producttype/new","method":"GET"} []
[2020-07-05T18:28:45.720330+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:45.720399+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:45.720440+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:45.730984+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:45.984272+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"18c57f"},"request_uri":"http://localhost:8000/_wdt/18c57f","method":"GET"} []
[2020-07-05T18:28:49.818019+02:00] request.INFO: Matched route "product_type_new". {"route":"product_type_new","route_parameters":{"_route":"product_type_new","_controller":"App\\Controller\\ProductTypeController::new"},"request_uri":"http://localhost:8000/producttype/new","method":"POST"} []
[2020-07-05T18:28:49.820857+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:49.820940+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:49.820992+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:49.821168+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:49.838197+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:28:49.838695+02:00] doctrine.DEBUG: INSERT INTO product_type (name, description) VALUES (?, ?) {"1":"Quami","2":"q"} []
[2020-07-05T18:28:49.839033+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:28:50.045977+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-07-05T18:28:50.048014+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:50.048185+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:50.048231+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:50.051075+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-07-05T18:28:50.055208+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:50.308888+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7e320c"},"request_uri":"http://localhost:8000/_wdt/7e320c","method":"GET"} []
[2020-07-05T18:28:51.498415+02:00] request.INFO: Matched route "product_type_new". {"route":"product_type_new","route_parameters":{"_route":"product_type_new","_controller":"App\\Controller\\ProductTypeController::new"},"request_uri":"http://localhost:8000/producttype/new","method":"GET"} []
[2020-07-05T18:28:51.500676+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:51.500775+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:51.500830+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:51.512752+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:51.806373+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b3fb8a"},"request_uri":"http://localhost:8000/_wdt/b3fb8a","method":"GET"} []
[2020-07-05T18:28:55.899599+02:00] request.INFO: Matched route "product_type_new". {"route":"product_type_new","route_parameters":{"_route":"product_type_new","_controller":"App\\Controller\\ProductTypeController::new"},"request_uri":"http://localhost:8000/producttype/new","method":"POST"} []
[2020-07-05T18:28:55.902436+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:55.902517+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:55.902566+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:55.902755+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:55.918403+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:28:55.918949+02:00] doctrine.DEBUG: INSERT INTO product_type (name, description) VALUES (?, ?) {"1":"Both","2":"q"} []
[2020-07-05T18:28:55.919345+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:28:56.064709+02:00] request.INFO: Matched route "product_type_index". {"route":"product_type_index","route_parameters":{"_route":"product_type_index","_controller":"App\\Controller\\ProductTypeController::index"},"request_uri":"http://localhost:8000/producttype/","method":"GET"} []
[2020-07-05T18:28:56.066770+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:28:56.066850+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:56.066902+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:28:56.070519+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 [] []
[2020-07-05T18:28:56.076236+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:28:56.343860+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4a24c5"},"request_uri":"http://localhost:8000/_wdt/4a24c5","method":"GET"} []
[2020-07-05T18:29:02.030782+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/brand/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"brand_index"},"request_uri":"http://localhost:8000/brand","method":"GET"} []
[2020-07-05T18:29:02.032856+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:29:02.032925+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:02.032965+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:02.036960+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:29:02.054964+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-07-05T18:29:02.057173+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:29:02.057265+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:02.057323+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:02.062352+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-07-05T18:29:02.066344+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:29:02.329740+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ecb428"},"request_uri":"http://localhost:8000/_wdt/ecb428","method":"GET"} []
[2020-07-05T18:29:03.901260+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"GET"} []
[2020-07-05T18:29:03.903094+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:29:03.903169+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:03.903224+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:03.924232+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:29:04.194149+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"517526"},"request_uri":"http://localhost:8000/_wdt/517526","method":"GET"} []
[2020-07-05T18:29:10.109628+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"POST"} []
[2020-07-05T18:29:10.112368+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:29:10.112440+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:10.112483+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:10.112648+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:29:10.128683+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:29:10.129415+02:00] doctrine.DEBUG: INSERT INTO brand (name, description) VALUES (?, ?) {"1":"HP","2":"d"} []
[2020-07-05T18:29:10.129812+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:29:10.267689+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-07-05T18:29:10.269821+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:29:10.269898+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:10.269938+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:10.273230+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-07-05T18:29:10.280033+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:29:10.552470+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6560ac"},"request_uri":"http://localhost:8000/_wdt/6560ac","method":"GET"} []
[2020-07-05T18:29:11.404018+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"GET"} []
[2020-07-05T18:29:11.407552+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:29:11.407676+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:11.407736+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:11.423298+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:29:11.705115+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"70aace"},"request_uri":"http://localhost:8000/_wdt/70aace","method":"GET"} []
[2020-07-05T18:29:15.799415+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"POST"} []
[2020-07-05T18:29:15.802676+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:29:15.802774+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:15.802836+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:15.803071+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:29:15.824490+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:29:15.825078+02:00] doctrine.DEBUG: INSERT INTO brand (name, description) VALUES (?, ?) {"1":"Toshiba","2":"s"} []
[2020-07-05T18:29:15.825581+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:29:15.902836+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-07-05T18:29:15.904868+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:29:15.904949+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:15.905002+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:15.908380+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-07-05T18:29:15.981055+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:29:16.239185+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d1b32c"},"request_uri":"http://localhost:8000/_wdt/d1b32c","method":"GET"} []
[2020-07-05T18:29:17.160861+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"GET"} []
[2020-07-05T18:29:17.163114+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:29:17.163216+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:17.163277+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:17.174706+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:29:17.460016+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"537c77"},"request_uri":"http://localhost:8000/_wdt/537c77","method":"GET"} []
[2020-07-05T18:29:21.509179+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"POST"} []
[2020-07-05T18:29:21.512417+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:29:21.512510+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:21.512577+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:21.512825+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:29:21.534945+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:29:21.535484+02:00] doctrine.DEBUG: INSERT INTO brand (name, description) VALUES (?, ?) {"1":"Lenovo","2":"sd"} []
[2020-07-05T18:29:21.535887+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:29:21.644456+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-07-05T18:29:21.646396+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:29:21.646489+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:21.646547+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:21.650001+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-07-05T18:29:21.654158+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:29:21.917144+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a081d7"},"request_uri":"http://localhost:8000/_wdt/a081d7","method":"GET"} []
[2020-07-05T18:29:28.211383+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:29:28.213865+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:29:28.213965+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:28.214027+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:29:28.225789+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T18:29:28.226504+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T18:29:28.227655+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T18:29:28.228712+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T18:29:28.229198+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T18:29:28.236565+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:29:28.513584+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"83ce1c"},"request_uri":"http://localhost:8000/_wdt/83ce1c","method":"GET"} []
[2020-07-05T18:30:11.837274+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-07-05T18:30:11.840933+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:30:11.841038+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:30:11.841102+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:30:11.841322+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:30:11.964280+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["2"]] []
[2020-07-05T18:30:11.975806+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-07-05T18:30:11.980145+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-07-05T18:30:12.025724+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:30:12.026993+02:00] doctrine.DEBUG: INSERT INTO product (name, description, price, brand_id, category_id, product_type_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"Toshiba laptop","2":"very nice laptop","3":16500.0,"4":2,"5":1,"6":2} []
[2020-07-05T18:30:12.027778+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:30:12.148323+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:30:12.152314+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:30:12.152503+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:30:12.152656+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:30:12.177890+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T18:30:12.180226+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T18:30:12.186656+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1]] []
[2020-07-05T18:30:12.214868+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T18:30:12.216860+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T18:30:12.218331+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T18:30:12.240151+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:30:12.507190+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"477ec3"},"request_uri":"http://localhost:8000/_wdt/477ec3","method":"GET"} []
[2020-07-05T18:30:54.039106+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-07-05T18:30:54.043617+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:30:54.043771+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:30:54.043905+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:30:54.044317+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:30:54.062956+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["1"]] []
[2020-07-05T18:30:54.064791+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-07-05T18:30:54.065825+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-07-05T18:30:54.082852+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:30:54.083763+02:00] doctrine.DEBUG: INSERT INTO product (name, description, price, brand_id, category_id, product_type_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"Laptop","2":"nice","3":15200.0,"4":1,"5":1,"6":2} []
[2020-07-05T18:30:54.084350+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:30:54.216501+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:30:54.218352+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:30:54.218446+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:30:54.218508+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:30:54.228621+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T18:30:54.229639+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T18:30:54.230432+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2]] []
[2020-07-05T18:30:54.235618+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T18:30:54.236515+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T18:30:54.237862+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T18:30:54.244933+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:30:54.501560+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f0a28"},"request_uri":"http://localhost:8000/_wdt/8f0a28","method":"GET"} []
[2020-07-05T18:31:20.992337+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T18:31:20.996654+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:31:20.997033+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:31:20.997235+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:31:21.002028+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 [] []
[2020-07-05T18:31:21.006194+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:31:21.270923+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9bbde6"},"request_uri":"http://localhost:8000/_wdt/9bbde6","method":"GET"} []
[2020-07-05T18:31:22.837254+02:00] request.INFO: Matched route "stock_new". {"route":"stock_new","route_parameters":{"_route":"stock_new","_controller":"App\\Controller\\StockController::new"},"request_uri":"http://localhost:8000/stock/new","method":"GET"} []
[2020-07-05T18:31:22.839327+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:31:22.839426+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:31:22.839493+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:31:22.851798+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T18:31:22.855442+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T18:31:22.864219+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:31:23.155922+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"58c586"},"request_uri":"http://localhost:8000/_wdt/58c586","method":"GET"} []
[2020-07-05T18:32:53.009126+02:00] request.INFO: Matched route "stock_new". {"route":"stock_new","route_parameters":{"_route":"stock_new","_controller":"App\\Controller\\StockController::new"},"request_uri":"http://localhost:8000/stock/new","method":"POST"} []
[2020-07-05T18:32:53.011409+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:32:53.011473+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:32:53.011512+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:32:53.011680+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:32:53.023440+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-07-05T18:32:53.027002+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["1"]] []
[2020-07-05T18:32:53.035741+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:32:53.036134+02:00] doctrine.DEBUG: INSERT INTO stock (quantity, date, product_id, store_id) VALUES (?, ?, ?, ?) {"1":20,"2":"2015-05-01T00:00:00+03:00","3":2,"4":1} []
[2020-07-05T18:32:53.036521+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:32:53.187041+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T18:32:53.189042+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:32:53.189130+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:32:53.189173+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:32:53.192962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 [] []
[2020-07-05T18:32:53.199852+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:32:53.468896+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"07e712"},"request_uri":"http://localhost:8000/_wdt/07e712","method":"GET"} []
[2020-07-05T18:32:55.287766+02:00] request.INFO: Matched route "stock_new". {"route":"stock_new","route_parameters":{"_route":"stock_new","_controller":"App\\Controller\\StockController::new"},"request_uri":"http://localhost:8000/stock/new","method":"GET"} []
[2020-07-05T18:32:55.290856+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:32:55.291102+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:32:55.291211+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:32:55.302152+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T18:32:55.305306+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T18:32:55.313499+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:32:55.569000+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f311dd"},"request_uri":"http://localhost:8000/_wdt/f311dd","method":"GET"} []
[2020-07-05T18:33:05.271405+02:00] request.INFO: Matched route "stock_new". {"route":"stock_new","route_parameters":{"_route":"stock_new","_controller":"App\\Controller\\StockController::new"},"request_uri":"http://localhost:8000/stock/new","method":"POST"} []
[2020-07-05T18:33:05.274014+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:33:05.274085+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:33:05.274128+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:33:05.274284+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:33:05.285743+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["1"]] []
[2020-07-05T18:33:05.290008+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["1"]] []
[2020-07-05T18:33:05.299492+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:33:05.299887+02:00] doctrine.DEBUG: INSERT INTO stock (quantity, date, product_id, store_id) VALUES (?, ?, ?, ?) {"1":23,"2":"2015-01-01T00:00:00+03:00","3":1,"4":1} []
[2020-07-05T18:33:05.300296+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:33:05.436746+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T18:33:05.438526+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:33:05.438615+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:33:05.438666+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:33:05.443075+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 [] []
[2020-07-05T18:33:05.448694+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:33:05.709503+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"69ba5b"},"request_uri":"http://localhost:8000/_wdt/69ba5b","method":"GET"} []
[2020-07-05T18:33:24.116128+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/order/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"order_index"},"request_uri":"http://localhost:8000/order","method":"GET"} []
[2020-07-05T18:33:24.118601+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:33:24.118672+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:33:24.118714+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:33:24.123162+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:33:24.141174+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-07-05T18:33:24.142969+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:33:24.143042+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:33:24.143081+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:33:24.151034+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.requested_date AS requested_date_3, t0.recieved_date AS recieved_date_4, t0.product_id AS product_id_5, t0.receiver_id AS receiver_id_6 FROM `order` t0 [] []
[2020-07-05T18:33:24.159596+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:33:24.420459+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b0bc0b"},"request_uri":"http://localhost:8000/_wdt/b0bc0b","method":"GET"} []
[2020-07-05T18:33:26.106916+02:00] request.INFO: Matched route "order_new". {"route":"order_new","route_parameters":{"_route":"order_new","_controller":"App\\Controller\\OrderController::new"},"request_uri":"http://localhost:8000/order/new","method":"GET"} []
[2020-07-05T18:33:26.108757+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:33:26.108831+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:33:26.108874+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:33:26.130500+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T18:33:26.134600+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.first_name AS first_name_4, u0_.middle_name AS middle_name_5, u0_.last_name AS last_name_6, u0_.department_id AS department_id_7, u0_.user_type_id AS user_type_id_8 FROM user u0_ [] []
[2020-07-05T18:33:26.147477+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:33:26.446322+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6c18d5"},"request_uri":"http://localhost:8000/_wdt/6c18d5","method":"GET"} []
[2020-07-05T18:34:13.342292+02:00] request.INFO: Matched route "order_new". {"route":"order_new","route_parameters":{"_route":"order_new","_controller":"App\\Controller\\OrderController::new"},"request_uri":"http://localhost:8000/order/new","method":"POST"} []
[2020-07-05T18:34:13.347201+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:34:13.347374+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:34:13.347500+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:34:13.347973+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:34:13.367479+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["1"]] []
[2020-07-05T18:34:13.380979+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:34:13.381421+02:00] doctrine.DEBUG: INSERT INTO `order` (quantity, requested_date, recieved_date, product_id, receiver_id) VALUES (?, ?, ?, ?, ?) {"1":1,"2":"2015-01-01T00:00:00+03:00","3":"2025-09-12T00:00:00+02:00","4":1,"5":null} []
[2020-07-05T18:34:13.381852+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:34:13.548558+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-07-05T18:34:13.550722+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:34:13.550874+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:34:13.550938+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:34:13.557052+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.requested_date AS requested_date_3, t0.recieved_date AS recieved_date_4, t0.product_id AS product_id_5, t0.receiver_id AS receiver_id_6 FROM `order` t0 [] []
[2020-07-05T18:34:13.564937+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:34:13.903114+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1aeaff"},"request_uri":"http://localhost:8000/_wdt/1aeaff","method":"GET"} []
[2020-07-05T18:34:27.738168+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:34:27.741577+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:34:27.741660+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:34:27.741702+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:34:27.752739+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T18:34:27.753444+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T18:34:27.754082+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2]] []
[2020-07-05T18:34:27.758037+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T18:34:27.758826+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T18:34:27.759390+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T18:34:27.766917+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:34:28.045678+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a0dfc1"},"request_uri":"http://localhost:8000/_wdt/a0dfc1","method":"GET"} []
[2020-07-05T18:34:50.190713+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T18:34:50.194193+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:34:50.194280+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:34:50.194336+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:34:50.199162+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 [] []
[2020-07-05T18:34:50.205581+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:34:50.479675+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aade7d"},"request_uri":"http://localhost:8000/_wdt/aade7d","method":"GET"} []
[2020-07-05T18:35:42.207138+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T18:35:42.220851+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:35:42.221258+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:35:42.221488+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:35:42.270854+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 [] []
[2020-07-05T18:35:42.294311+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:35:42.560796+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7fe579"},"request_uri":"http://localhost:8000/_wdt/7fe579","method":"GET"} []
[2020-07-05T18:35:44.720688+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T18:35:44.722634+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:35:44.722711+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:35:44.722753+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:35:44.727560+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 [] []
[2020-07-05T18:35:44.734335+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:35:44.985356+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a0a5d4"},"request_uri":"http://localhost:8000/_wdt/a0a5d4","method":"GET"} []
[2020-07-05T18:35:47.145711+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T18:35:47.149672+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:35:47.149793+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:35:47.149867+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:35:47.180183+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T18:35:47.180869+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T18:35:47.181519+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2]] []
[2020-07-05T18:35:47.187967+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T18:35:47.188912+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T18:35:47.189595+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T18:35:47.201341+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:35:47.509968+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"249bfd"},"request_uri":"http://localhost:8000/_wdt/249bfd","method":"GET"} []
[2020-07-05T18:50:52.916945+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T18:50:52.917929+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:50:52.918021+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:50:52.918085+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:50:52.930704+02:00] request.CRITICAL: Uncaught PHP Exception BadMethodCallException: "Undefined method 'findStock'. The method name must start with either findBy, findOneBy or countBy!" at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/EntityRepository.php line 235 {"exception":"[object] (BadMethodCallException(code: 0): Undefined method 'findStock'. The method name must start with either findBy, findOneBy or countBy! at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/EntityRepository.php:235)"} []
[2020-07-05T18:50:52.943730+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:50:53.054247+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"24627a"},"request_uri":"http://localhost:8000/_wdt/24627a","method":"GET"} []
[2020-07-05T18:52:28.997841+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T18:52:29.000162+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:52:29.000242+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:52:29.000311+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:52:29.013841+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T18:52:29.014830+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T18:52:29.015754+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2]] []
[2020-07-05T18:52:29.022204+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T18:52:29.025559+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T18:52:29.044277+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:52:29.329570+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d7bf24"},"request_uri":"http://localhost:8000/_wdt/d7bf24","method":"GET"} []
[2020-07-05T18:53:18.288364+02:00] request.INFO: Matched route "department_show". {"route":"department_show","route_parameters":{"_route":"department_show","_controller":"App\\Controller\\DepartmentController::show","id":"1"},"request_uri":"http://localhost:8000/department/1","method":"GET"} []
[2020-07-05T18:53:18.290893+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:53:18.290994+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:53:18.291061+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:53:18.297699+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? ["1"] []
[2020-07-05T18:53:18.300299+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "App\Entity\Department object not found by the @ParamConverter annotation." at /var/www/inventory/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DoctrineParamConverter.php line 107 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): App\\Entity\\Department object not found by the @ParamConverter annotation. at /var/www/inventory/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DoctrineParamConverter.php:107)"} []
[2020-07-05T18:53:18.318816+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:53:18.438570+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c05fc3"},"request_uri":"http://localhost:8000/_wdt/c05fc3","method":"GET"} []
[2020-07-05T18:54:02.424885+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/department/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"department_index"},"request_uri":"http://localhost:8000/department","method":"GET"} []
[2020-07-05T18:54:02.426873+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:54:02.426952+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:02.426994+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:02.431073+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:54:02.445748+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-07-05T18:54:02.447180+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:54:02.447235+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:02.447273+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:02.553821+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-07-05T18:54:02.555944+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-07-05T18:54:02.559012+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-07-05T18:54:02.570885+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:54:02.835944+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"da46a4"},"request_uri":"http://localhost:8000/_wdt/da46a4","method":"GET"} []
[2020-07-05T18:54:12.312522+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/college/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"college_index"},"request_uri":"http://localhost:8000/college","method":"GET"} []
[2020-07-05T18:54:12.314486+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:54:12.314553+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:12.314594+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:12.317554+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:54:12.336378+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T18:54:12.338435+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:54:12.338544+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:12.338606+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:12.403619+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T18:54:12.406662+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T18:54:12.426745+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:54:12.714062+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6ee7c8"},"request_uri":"http://localhost:8000/_wdt/6ee7c8","method":"GET"} []
[2020-07-05T18:54:20.317570+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-07-05T18:54:20.319864+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:54:20.319953+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:20.320011+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:20.320215+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:54:20.345234+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:54:20.346603+02:00] doctrine.DEBUG: INSERT INTO college (name, description) VALUES (?, ?) {"1":"Social Science","2":null} []
[2020-07-05T18:54:20.347008+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:54:20.517979+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T18:54:20.520388+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:54:20.520492+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:20.520553+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:20.528811+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T18:54:20.529790+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T18:54:20.530707+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T18:54:20.539129+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:54:20.867178+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0fb85b"},"request_uri":"http://localhost:8000/_wdt/0fb85b","method":"GET"} []
[2020-07-05T18:54:27.535205+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-07-05T18:54:27.538261+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:54:27.538344+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:27.538387+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:27.546803+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-07-05T18:54:27.547615+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-07-05T18:54:27.548822+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-07-05T18:54:27.556039+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:54:27.826707+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b9ec44"},"request_uri":"http://localhost:8000/_wdt/b9ec44","method":"GET"} []
[2020-07-05T18:54:42.970657+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"POST"} []
[2020-07-05T18:54:42.973725+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:54:42.973807+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:42.973858+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:42.974062+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:54:42.986441+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-07-05T18:54:42.995777+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:54:42.996335+02:00] doctrine.DEBUG: INSERT INTO department (name, description, college_id) VALUES (?, ?, ?) {"1":"Biology","2":"d","3":1} []
[2020-07-05T18:54:42.996876+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:54:43.163750+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-07-05T18:54:43.167174+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:54:43.167333+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:43.167429+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:54:43.179526+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-07-05T18:54:43.180986+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-07-05T18:54:43.182004+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1]] []
[2020-07-05T18:54:43.186112+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-07-05T18:54:43.196265+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:54:43.472086+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9d754a"},"request_uri":"http://localhost:8000/_wdt/9d754a","method":"GET"} []
[2020-07-05T18:55:12.325735+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-07-05T18:55:12.329267+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:55:12.329376+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:55:12.329441+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:55:12.343800+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-07-05T18:55:12.344782+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-07-05T18:55:12.345799+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1]] []
[2020-07-05T18:55:12.349936+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-07-05T18:55:12.413922+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:55:12.819514+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"26d80a"},"request_uri":"http://localhost:8000/_wdt/26d80a","method":"GET"} []
[2020-07-05T18:55:37.687766+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"POST"} []
[2020-07-05T18:55:37.690912+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:55:37.690987+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:55:37.691039+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:55:37.691264+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:55:37.700524+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-07-05T18:55:37.710618+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T18:55:37.711226+02:00] doctrine.DEBUG: INSERT INTO department (name, description, college_id) VALUES (?, ?, ?) {"1":"xx","2":"xx","3":1} []
[2020-07-05T18:55:37.711633+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T18:55:37.909549+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-07-05T18:55:37.911918+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:55:37.912030+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:55:37.912091+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:55:37.921038+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-07-05T18:55:37.922028+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-07-05T18:55:37.922747+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2]] []
[2020-07-05T18:55:37.925953+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-07-05T18:55:37.934597+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:55:38.204585+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba0507"},"request_uri":"http://localhost:8000/_wdt/ba0507","method":"GET"} []
[2020-07-05T18:58:22.941235+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T18:58:22.943880+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T18:58:22.943964+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:58:22.944004+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T18:58:22.955436+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T18:58:22.956162+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T18:58:22.957120+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2]] []
[2020-07-05T18:58:22.963035+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T18:58:22.966359+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T18:58:22.976819+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T18:58:23.264489+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"48b2c6"},"request_uri":"http://localhost:8000/_wdt/48b2c6","method":"GET"} []
[2020-07-05T19:01:11.174675+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:01:11.178298+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:01:11.178404+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:01:11.178457+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:01:11.190517+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:01:11.191567+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:01:11.192417+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2]] []
[2020-07-05T19:01:11.196568+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:01:11.199822+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:01:11.214250+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:01:11.483115+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6027a1"},"request_uri":"http://localhost:8000/_wdt/6027a1","method":"GET"} []
[2020-07-05T19:01:50.204332+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:01:50.207167+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:01:50.207252+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:01:50.207305+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:01:50.219588+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:01:50.220402+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:01:50.221668+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2]] []
[2020-07-05T19:01:50.225960+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:01:50.228640+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:01:50.242884+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:01:50.511926+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aa5999"},"request_uri":"http://localhost:8000/_wdt/aa5999","method":"GET"} []
[2020-07-05T19:02:13.621406+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: "No route found for "POST /stock/": Method Not Allowed (Allow: GET)" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException(code: 0): No route found for \"POST /stock/\": Method Not Allowed (Allow: GET) at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:140)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:42)"} []
[2020-07-05T19:02:13.746263+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"762a58"},"request_uri":"http://localhost:8000/_wdt/762a58","method":"GET"} []
[2020-07-05T19:02:26.558016+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: "No route found for "POST /stock/": Method Not Allowed (Allow: GET)" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException(code: 0): No route found for \"POST /stock/\": Method Not Allowed (Allow: GET) at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:140)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:42)"} []
[2020-07-05T19:02:26.686258+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"690b72"},"request_uri":"http://localhost:8000/_wdt/690b72","method":"GET"} []
[2020-07-05T19:02:58.163109+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:02:58.166338+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:02:58.166431+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:02:58.166487+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:02:58.166778+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:02:58.178872+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-07-05T19:02:58.195759+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [2] []
[2020-07-05T19:02:58.200507+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [1] []
[2020-07-05T19:02:58.205359+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:02:58.206216+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:02:58.207707+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2]] []
[2020-07-05T19:02:58.211008+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:02:58.211856+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:02:58.851402+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e5bf74"},"request_uri":"http://localhost:8000/_wdt/e5bf74","method":"GET"} []
[2020-07-05T19:03:13.713957+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:03:13.717346+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:03:13.717429+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:03:13.717468+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:03:13.717623+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:03:13.722826+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-07-05T19:03:13.731334+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [2] []
[2020-07-05T19:03:13.734480+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [1] []
[2020-07-05T19:03:13.736828+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-07-05T19:03:13.737688+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-07-05T19:03:13.753122+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:03:13.753472+02:00] doctrine.DEBUG: UPDATE stock SET quantity = ?, store_id = ? WHERE id = ? [1200,2,1] []
[2020-07-05T19:03:13.753980+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:03:13.951725+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T19:03:13.954244+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:03:13.954329+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:03:13.954390+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:03:13.962898+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:03:13.963751+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:03:13.964564+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:03:13.974106+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:03:14.312795+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4dd309"},"request_uri":"http://localhost:8000/_wdt/4dd309","method":"GET"} []
[2020-07-05T19:03:19.716262+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-07-05T19:03:19.719536+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:03:19.719621+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:03:19.719685+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:03:19.719905+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:03:19.725174+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-07-05T19:03:19.731462+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:03:19.732840+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:03:19.733471+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:03:20.005079+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d7b3f2"},"request_uri":"http://localhost:8000/_wdt/d7b3f2","method":"GET"} []
[2020-07-05T19:04:05.658044+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"POST"} []
[2020-07-05T19:04:05.661266+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:04:05.661344+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:05.661386+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:05.661541+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:04:05.664781+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-07-05T19:04:05.669925+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:04:05.670566+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:04:05.671325+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:04:05.922378+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"02f816"},"request_uri":"http://localhost:8000/_wdt/02f816","method":"GET"} []
[2020-07-05T19:04:12.388979+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T19:04:12.391560+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:04:12.391673+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:12.391717+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:12.399434+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:04:12.400180+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:04:12.400789+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:04:12.408593+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:04:12.650020+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"253b0c"},"request_uri":"http://localhost:8000/_wdt/253b0c","method":"GET"} []
[2020-07-05T19:04:16.134884+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:04:16.137503+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:04:16.137574+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:16.137613+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:16.137754+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:04:16.141834+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-07-05T19:04:16.150425+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [2] []
[2020-07-05T19:04:16.154015+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-07-05T19:04:16.156614+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-07-05T19:04:16.157239+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-07-05T19:04:16.196022+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T19:04:16.197900+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:04:16.197977+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:16.198017+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:16.205482+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:04:16.206320+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:04:16.206962+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:04:16.215149+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:04:16.489235+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"034506"},"request_uri":"http://localhost:8000/_wdt/034506","method":"GET"} []
[2020-07-05T19:04:50.627312+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:04:50.630513+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:04:50.630590+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:50.630630+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:50.630810+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:04:50.635463+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-07-05T19:04:50.643927+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [2] []
[2020-07-05T19:04:50.646449+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-07-05T19:04:50.648935+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:04:50.649750+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:04:50.650552+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2]] []
[2020-07-05T19:04:50.652268+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:04:50.652824+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:04:51.040973+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e6f202"},"request_uri":"http://localhost:8000/_wdt/e6f202","method":"GET"} []
[2020-07-05T19:04:53.399778+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:04:53.402483+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:04:53.402551+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:53.402605+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:53.402817+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:04:53.407373+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-07-05T19:04:53.417760+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [2] []
[2020-07-05T19:04:53.420950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-07-05T19:04:53.423252+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-07-05T19:04:53.424043+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-07-05T19:04:53.462810+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T19:04:53.465283+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:04:53.465366+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:53.465407+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:04:53.472184+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:04:53.472765+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:04:53.473306+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:04:53.481833+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:04:53.785865+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bdac25"},"request_uri":"http://localhost:8000/_wdt/bdac25","method":"GET"} []
[2020-07-05T19:05:22.131021+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:05:22.133539+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:05:22.133613+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:05:22.133655+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:05:22.145798+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:05:22.146555+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:05:22.147330+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2]] []
[2020-07-05T19:05:22.152161+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:05:22.156036+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:05:22.165853+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:05:22.451593+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dc779d"},"request_uri":"http://localhost:8000/_wdt/dc779d","method":"GET"} []
[2020-07-05T19:05:31.674190+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:05:31.677284+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:05:31.677366+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:05:31.677418+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:05:31.677614+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:05:31.693553+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-07-05T19:05:31.698090+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-07-05T19:05:31.709599+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:05:31.710032+02:00] doctrine.DEBUG: INSERT INTO stock (quantity, date, product_id, store_id) VALUES (?, ?, ?, ?) {"1":1000,"2":"2015-01-01T00:00:00+03:00","3":2,"4":2} []
[2020-07-05T19:05:31.710501+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:05:31.874724+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T19:05:31.877243+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:05:31.877345+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:05:31.877409+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:05:31.884473+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:05:31.885065+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:05:31.885692+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:05:31.894292+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:05:32.301532+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"75b09f"},"request_uri":"http://localhost:8000/_wdt/75b09f","method":"GET"} []
[2020-07-05T19:05:37.110698+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:05:37.114328+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:05:37.114435+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:05:37.114511+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:05:37.127266+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:05:37.128396+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:05:37.129393+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2,3]] []
[2020-07-05T19:05:37.134423+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:05:37.137730+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:05:37.148931+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:05:37.413173+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d80d8d"},"request_uri":"http://localhost:8000/_wdt/d80d8d","method":"GET"} []
[2020-07-05T19:06:29.956088+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:06:29.959590+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:06:29.959672+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:29.959729+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:29.959928+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:06:29.974226+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-07-05T19:06:29.977942+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-07-05T19:06:29.988414+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:06:29.988774+02:00] doctrine.DEBUG: INSERT INTO stock (quantity, date, product_id, store_id) VALUES (?, ?, ?, ?) {"1":1000,"2":"2015-01-01T00:00:00+03:00","3":2,"4":2} []
[2020-07-05T19:06:29.989146+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:06:30.168071+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T19:06:30.170556+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:06:30.170660+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:30.170789+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:30.179635+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:06:30.180389+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:06:30.181055+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:06:30.189889+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:06:30.509308+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c57bc8"},"request_uri":"http://localhost:8000/_wdt/c57bc8","method":"GET"} []
[2020-07-05T19:06:32.885574+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:06:32.888358+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:06:32.888435+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:32.888497+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:32.901601+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:06:32.902646+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:06:32.903691+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2,3,4]] []
[2020-07-05T19:06:32.907887+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:06:32.910666+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:06:32.926474+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:06:33.223675+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a7054a"},"request_uri":"http://localhost:8000/_wdt/a7054a","method":"GET"} []
[2020-07-05T19:06:40.856880+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:06:40.859784+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:06:40.859857+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:40.859931+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:40.860158+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:06:40.873743+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-07-05T19:06:40.877438+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-07-05T19:06:40.887812+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:06:40.888178+02:00] doctrine.DEBUG: INSERT INTO stock (quantity, date, product_id, store_id) VALUES (?, ?, ?, ?) {"1":1000,"2":"2015-01-01T00:00:00+03:00","3":2,"4":2} []
[2020-07-05T19:06:40.888541+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:06:41.016210+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T19:06:41.017632+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:06:41.017687+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:41.017765+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:41.025545+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:06:41.026250+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:06:41.026860+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:06:41.034393+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:06:41.367823+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f57567"},"request_uri":"http://localhost:8000/_wdt/f57567","method":"GET"} []
[2020-07-05T19:06:45.790747+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:06:45.793437+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:06:45.793517+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:45.793562+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:45.804521+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:06:45.805437+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:06:45.806244+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2,3,4,5]] []
[2020-07-05T19:06:45.811081+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:06:45.815304+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:06:45.824072+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:06:46.123404+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd0178"},"request_uri":"http://localhost:8000/_wdt/fd0178","method":"GET"} []
[2020-07-05T19:06:57.584211+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:06:57.586647+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:06:57.586712+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:57.586751+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:57.586894+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:06:57.600511+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["1"]] []
[2020-07-05T19:06:57.604081+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-07-05T19:06:57.614491+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:06:57.614846+02:00] doctrine.DEBUG: INSERT INTO stock (quantity, date, product_id, store_id) VALUES (?, ?, ?, ?) {"1":11,"2":"2015-01-01T00:00:00+03:00","3":1,"4":2} []
[2020-07-05T19:06:57.615156+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:06:57.732841+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T19:06:57.735171+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:06:57.735255+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:57.735301+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:06:57.743442+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:06:57.744122+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:06:57.744689+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:06:57.752609+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:06:58.072721+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2a5515"},"request_uri":"http://localhost:8000/_wdt/2a5515","method":"GET"} []
[2020-07-05T19:09:04.255311+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T19:09:04.257786+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:09:04.257858+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:09:04.257909+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:09:04.266420+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:09:04.267166+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:09:04.267847+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:09:04.275284+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:09:04.544341+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff1f6b"},"request_uri":"http://localhost:8000/_wdt/ff1f6b","method":"GET"} []
[2020-07-05T19:09:06.675637+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T19:09:06.678023+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:09:06.678123+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:09:06.678185+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:09:06.691568+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T19:09:06.692283+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T19:09:06.692882+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2]] []
[2020-07-05T19:09:06.696982+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T19:09:06.697661+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T19:09:06.698091+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T19:09:06.705143+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:09:07.001855+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8808f3"},"request_uri":"http://localhost:8000/_wdt/8808f3","method":"GET"} []
[2020-07-05T19:09:07.720335+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:09:07.723117+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:09:07.723194+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:09:07.723257+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:09:07.735468+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:09:07.736553+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:09:07.737439+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2,3,4,5,6]] []
[2020-07-05T19:09:07.742919+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:09:07.747023+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:09:07.762325+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:09:08.063719+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e004f2"},"request_uri":"http://localhost:8000/_wdt/e004f2","method":"GET"} []
[2020-07-05T19:09:10.963321+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:09:10.966687+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:09:10.966758+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:09:10.966812+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:09:10.967053+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:09:10.972456+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["6"] []
[2020-07-05T19:09:10.982432+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [1] []
[2020-07-05T19:09:10.986761+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-07-05T19:09:10.989665+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:09:10.990332+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:09:10.991194+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2,3,4,5,6]] []
[2020-07-05T19:09:10.992982+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:09:10.993564+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:09:11.289175+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4c4775"},"request_uri":"http://localhost:8000/_wdt/4c4775","method":"GET"} []
[2020-07-05T19:09:13.541859+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:09:13.545248+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:09:13.545373+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:09:13.545436+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:09:13.545641+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:09:13.551266+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["6"] []
[2020-07-05T19:09:13.560555+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [1] []
[2020-07-05T19:09:13.563194+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-07-05T19:09:13.565703+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["1"]] []
[2020-07-05T19:09:13.566380+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-07-05T19:09:13.609557+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T19:09:13.611151+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:09:13.611214+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:09:13.611252+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:09:13.618597+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:09:13.619218+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:09:13.619771+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:09:13.627876+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:09:13.926630+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"46166a"},"request_uri":"http://localhost:8000/_wdt/46166a","method":"GET"} []
[2020-07-05T19:10:44.960256+02:00] php.DEBUG: Warning: include(/var/www/inventory/var/cache/de_/App_KernelDevDebugContainer.php): failed to open stream: No such file or directory {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/var/www/inventory/vendor/symfony/http-kernel/Kernel.php","line":456,"trace":[{"file":"/var/www/inventory/vendor/symfony/http-kernel/Kernel.php","line":456,"function":"include"}],"count":1}}} []
[2020-07-05T19:10:44.961271+02:00] php.DEBUG: Warning: include(): Failed opening '/var/www/inventory/var/cache/de_/App_KernelDevDebugContainer.php' for inclusion (include_path='.:/usr/share/php') [] []
[2020-07-05T19:10:49.742909+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T19:10:49.745823+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:10:49.745893+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:10:49.745934+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:10:49.775791+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:10:49.776562+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:10:49.777268+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:10:49.829906+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:10:50.250178+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ed94c1"},"request_uri":"http://localhost:8000/_wdt/ed94c1","method":"GET"} []
[2020-07-05T19:10:51.957816+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:10:51.960355+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:10:51.960458+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:10:51.960524+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:10:52.016264+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:10:52.017202+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:10:52.020581+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2,3,4,5,6]] []
[2020-07-05T19:10:52.044611+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:10:52.047281+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:10:52.060825+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:10:52.583430+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7631fe"},"request_uri":"http://localhost:8000/_wdt/7631fe","method":"GET"} []
[2020-07-05T19:10:54.508663+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:10:54.511225+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:10:54.511302+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:10:54.511345+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:10:54.511538+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:10:54.516329+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["6"] []
[2020-07-05T19:10:54.526456+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [1] []
[2020-07-05T19:10:54.529069+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-07-05T19:10:54.531990+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:10:54.532620+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:10:54.533339+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2,3,4,5,6]] []
[2020-07-05T19:10:54.535124+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:10:54.535764+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:10:54.866306+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"40898f"},"request_uri":"http://localhost:8000/_wdt/40898f","method":"GET"} []
[2020-07-05T19:10:56.860699+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:10:56.863572+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:10:56.863662+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:10:56.863716+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:10:56.863863+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:10:56.868399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["6"] []
[2020-07-05T19:10:56.877809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [1] []
[2020-07-05T19:10:56.880967+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-07-05T19:10:56.883213+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["1"]] []
[2020-07-05T19:10:56.883998+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-07-05T19:10:56.934922+02:00] request.INFO: Matched route "college_index". {"route":"college_index","route_parameters":{"_route":"college_index","_controller":"App\\Controller\\CollegeController::index"},"request_uri":"http://localhost:8000/college/","method":"GET"} []
[2020-07-05T19:10:56.936753+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:10:56.936825+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:10:56.936865+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:10:56.944416+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM college c0_ [] []
[2020-07-05T19:10:56.945027+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM college c0_ ORDER BY c0_.id ASC LIMIT 18 [] []
[2020-07-05T19:10:56.945532+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1]] []
[2020-07-05T19:10:56.953064+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:10:57.221374+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d89c8d"},"request_uri":"http://localhost:8000/_wdt/d89c8d","method":"GET"} []
[2020-07-05T19:12:11.831749+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:12:11.834277+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:12:11.834349+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:11.834387+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:11.848812+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:12:11.849732+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:12:11.850680+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2,3,4,5,6]] []
[2020-07-05T19:12:11.855177+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:12:11.859266+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:12:11.875215+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:12:12.250449+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f41263"},"request_uri":"http://localhost:8000/_wdt/f41263","method":"GET"} []
[2020-07-05T19:12:14.913427+02:00] request.INFO: Matched route "stock_delete". {"route":"stock_delete","route_parameters":{"_route":"stock_delete","_controller":"App\\Controller\\StockController::delete","id":"6"},"request_uri":"http://localhost:8000/stock/6","method":"DELETE"} []
[2020-07-05T19:12:14.917077+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:12:14.917153+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:14.917195+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:14.917351+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:12:14.921308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? ["6"] []
[2020-07-05T19:12:14.924846+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:12:14.925097+02:00] doctrine.DEBUG: DELETE FROM stock WHERE id = ? [6] []
[2020-07-05T19:12:14.925459+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:12:15.049787+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:12:15.051559+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:12:15.051625+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:15.051683+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:15.063704+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:12:15.065144+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:12:15.066146+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2,3,4,5]] []
[2020-07-05T19:12:15.070550+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:12:15.073211+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:12:15.081393+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:12:15.355333+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7f6500"},"request_uri":"http://localhost:8000/_wdt/7f6500","method":"GET"} []
[2020-07-05T19:12:17.184912+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:12:17.187612+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:12:17.187689+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:17.187746+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:17.187976+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:12:17.193908+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["5"] []
[2020-07-05T19:12:17.201800+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [2] []
[2020-07-05T19:12:17.204292+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-07-05T19:12:17.206824+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:12:17.207445+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:12:17.208082+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2,3,4,5]] []
[2020-07-05T19:12:17.210353+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:12:17.210989+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:12:17.574045+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"510bdd"},"request_uri":"http://localhost:8000/_wdt/510bdd","method":"GET"} []
[2020-07-05T19:12:18.835271+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:12:18.837531+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:12:18.837614+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:18.837664+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:18.837802+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:12:18.843082+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["5"] []
[2020-07-05T19:12:18.852139+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [2] []
[2020-07-05T19:12:18.854560+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [2] []
[2020-07-05T19:12:18.856884+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-07-05T19:12:18.857643+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-07-05T19:12:18.891883+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:12:18.893730+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:12:18.893797+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:18.893853+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:18.904017+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:12:18.904724+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:12:18.905735+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2,3,4,5]] []
[2020-07-05T19:12:18.910580+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:12:18.913980+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:12:18.921418+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:12:19.186563+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"148f3e"},"request_uri":"http://localhost:8000/_wdt/148f3e","method":"GET"} []
[2020-07-05T19:12:27.707271+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:12:27.710384+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:12:27.710466+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:27.710515+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:27.710712+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:12:27.728399+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["1"]] []
[2020-07-05T19:12:27.734962+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["2"]] []
[2020-07-05T19:12:27.749274+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:12:27.749932+02:00] doctrine.DEBUG: INSERT INTO stock (quantity, date, product_id, store_id) VALUES (?, ?, ?, ?) {"1":120,"2":"2015-01-01T00:00:00+03:00","3":1,"4":2} []
[2020-07-05T19:12:27.751384+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:12:27.884735+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:12:27.887043+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:12:27.887137+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:27.887190+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:12:27.898164+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:12:27.899222+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id ASC LIMIT 18 [] []
[2020-07-05T19:12:27.900368+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id ASC [[1,2,3,4,5,7]] []
[2020-07-05T19:12:27.906596+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:12:27.909451+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:12:27.917590+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:12:28.217385+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"242eeb"},"request_uri":"http://localhost:8000/_wdt/242eeb","method":"GET"} []
[2020-07-05T19:13:03.324787+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:13:03.327638+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:13:03.327721+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:13:03.327773+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:13:03.341824+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:13:03.342533+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 18 [] []
[2020-07-05T19:13:03.343386+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[7,5,4,3,2,1]] []
[2020-07-05T19:13:03.347874+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:13:03.350828+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:13:03.359713+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:13:03.644948+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9f8c2f"},"request_uri":"http://localhost:8000/_wdt/9f8c2f","method":"GET"} []
[2020-07-05T19:13:15.347345+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:13:15.349966+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:13:15.350034+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:13:15.350088+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:13:15.350285+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:13:15.363529+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-07-05T19:13:15.366675+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["1"]] []
[2020-07-05T19:13:15.375298+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:13:15.375830+02:00] doctrine.DEBUG: INSERT INTO stock (quantity, date, product_id, store_id) VALUES (?, ?, ?, ?) {"1":12345,"2":"2015-01-01T00:00:00+03:00","3":2,"4":1} []
[2020-07-05T19:13:15.376460+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:13:15.521129+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:13:15.522827+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:13:15.522894+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:13:15.522950+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:13:15.534208+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:13:15.535325+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 18 [] []
[2020-07-05T19:13:15.536240+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[8,7,5,4,3,2,1]] []
[2020-07-05T19:13:15.540446+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:13:15.543655+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:13:15.551604+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:13:15.821929+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d07da6"},"request_uri":"http://localhost:8000/_wdt/d07da6","method":"GET"} []
[2020-07-05T19:14:18.407805+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:14:18.410496+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:14:18.410582+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:18.410651+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:18.429002+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:14:18.429923+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:14:18.431158+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[8,7,5,4,3]] []
[2020-07-05T19:14:18.437801+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:14:18.441796+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:14:18.455218+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:14:18.904688+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"532c00"},"request_uri":"http://localhost:8000/_wdt/532c00","method":"GET"} []
[2020-07-05T19:14:23.265283+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?page=2","method":"GET"} []
[2020-07-05T19:14:23.267596+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:14:23.267668+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:23.267724+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:23.278803+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:14:23.279547+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 OFFSET 5 [] []
[2020-07-05T19:14:23.280423+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[2,1]] []
[2020-07-05T19:14:23.284579+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:14:23.287232+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:14:23.296472+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:14:23.583922+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"923b83"},"request_uri":"http://localhost:8000/_wdt/923b83","method":"GET"} []
[2020-07-05T19:14:25.502094+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?page=1","method":"GET"} []
[2020-07-05T19:14:25.503986+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:14:25.504060+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:25.504119+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:25.515994+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:14:25.516687+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:14:25.517340+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[8,7,5,4,3]] []
[2020-07-05T19:14:25.521507+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:14:25.525122+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:14:25.536808+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:14:25.837772+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bfb201"},"request_uri":"http://localhost:8000/_wdt/bfb201","method":"GET"} []
[2020-07-05T19:14:30.289753+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-07-05T19:14:30.291884+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:14:30.291963+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:30.292001+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:30.296951+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-07-05T19:14:30.304404+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:14:30.590306+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f59495"},"request_uri":"http://localhost:8000/_wdt/f59495","method":"GET"} []
[2020-07-05T19:14:37.159229+02:00] request.INFO: Matched route "store_index". {"route":"store_index","route_parameters":{"_route":"store_index","_controller":"App\\Controller\\StoreController::index"},"request_uri":"http://localhost:8000/store/","method":"GET"} []
[2020-07-05T19:14:37.161072+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:14:37.161136+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:37.161185+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:37.164366+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 [] []
[2020-07-05T19:14:37.168937+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:14:37.437133+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dbd407"},"request_uri":"http://localhost:8000/_wdt/dbd407","method":"GET"} []
[2020-07-05T19:14:40.025657+02:00] request.INFO: Matched route "store_show". {"route":"store_show","route_parameters":{"_route":"store_show","_controller":"App\\Controller\\StoreController::show","id":"1"},"request_uri":"http://localhost:8000/store/1","method":"GET"} []
[2020-07-05T19:14:40.028254+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:14:40.028330+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:40.028393+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:40.031673+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? ["1"] []
[2020-07-05T19:14:40.038873+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:14:40.328075+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"339097"},"request_uri":"http://localhost:8000/_wdt/339097","method":"GET"} []
[2020-07-05T19:14:57.218237+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?page=2","method":"GET"} []
[2020-07-05T19:14:57.220980+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:14:57.221059+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:57.221100+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:57.231550+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:14:57.232208+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 OFFSET 5 [] []
[2020-07-05T19:14:57.232880+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[2,1]] []
[2020-07-05T19:14:57.237192+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:14:57.239978+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:14:57.247838+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:14:57.532009+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cfdd3a"},"request_uri":"http://localhost:8000/_wdt/cfdd3a","method":"GET"} []
[2020-07-05T19:14:59.931741+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?page=1","method":"GET"} []
[2020-07-05T19:14:59.933268+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:14:59.933333+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:59.933371+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:14:59.942345+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:14:59.943111+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:14:59.943742+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[8,7,5,4,3]] []
[2020-07-05T19:14:59.947490+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:14:59.949981+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:14:59.958095+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:15:00.244401+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6f42f4"},"request_uri":"http://localhost:8000/_wdt/6f42f4","method":"GET"} []
[2020-07-05T19:15:03.171311+02:00] request.INFO: Matched route "stock_show". {"route":"stock_show","route_parameters":{"_route":"stock_show","_controller":"App\\Controller\\StockController::show","id":"3"},"request_uri":"http://localhost:8000/stock/3","method":"GET"} []
[2020-07-05T19:15:03.177040+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:15:03.177460+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:15:03.177597+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:15:03.188447+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? ["3"] []
[2020-07-05T19:15:03.200565+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:15:03.481628+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"08b2b9"},"request_uri":"http://localhost:8000/_wdt/08b2b9","method":"GET"} []
[2020-07-05T19:15:05.790755+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:15:05.794677+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:15:05.794790+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:15:05.794872+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:15:05.812776+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:15:05.813933+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:15:05.814972+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[8,7,5,4,3]] []
[2020-07-05T19:15:05.822344+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:15:05.826491+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:15:05.838278+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:15:06.120774+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f364f1"},"request_uri":"http://localhost:8000/_wdt/f364f1","method":"GET"} []
[2020-07-05T19:15:25.793840+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?search=Toshiba","method":"GET"} []
[2020-07-05T19:15:25.795951+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:15:25.796024+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:15:25.796065+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:15:25.810442+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:15:25.811201+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:15:25.811867+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[8,7,5,4,3]] []
[2020-07-05T19:15:25.815798+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:15:25.818472+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:15:25.827188+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:15:26.100596+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"28e52e"},"request_uri":"http://localhost:8000/_wdt/28e52e","method":"GET"} []
[2020-07-05T19:15:32.163625+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?search=Toshiba","method":"GET"} []
[2020-07-05T19:15:32.166476+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:15:32.166592+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:15:32.166653+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:15:32.178705+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:15:32.179514+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:15:32.180382+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[8,7,5,4,3]] []
[2020-07-05T19:15:32.186269+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:15:32.188841+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:15:32.196533+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:15:32.478716+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5b2dd3"},"request_uri":"http://localhost:8000/_wdt/5b2dd3","method":"GET"} []
[2020-07-05T19:18:43.830578+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?search=tosh","method":"GET"} []
[2020-07-05T19:18:43.832803+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:18:43.832869+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:18:43.832908+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:18:43.845571+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%tosh%' [] []
[2020-07-05T19:18:43.846831+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%tosh%' ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:18:43.848054+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%tosh%' AND s0_.id IN (?) ORDER BY s0_.id DESC [[7,2]] []
[2020-07-05T19:18:43.852290+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:18:43.854780+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:18:43.863405+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:18:44.161809+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4379f3"},"request_uri":"http://localhost:8000/_wdt/4379f3","method":"GET"} []
[2020-07-05T19:18:48.640395+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?search=tosh","method":"GET"} []
[2020-07-05T19:18:48.643036+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:18:48.643104+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:18:48.643162+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:18:48.655285+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%tosh%' [] []
[2020-07-05T19:18:48.656081+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%tosh%' ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:18:48.656785+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%tosh%' AND s0_.id IN (?) ORDER BY s0_.id DESC [[7,2]] []
[2020-07-05T19:18:48.660700+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:18:48.663126+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:18:48.671031+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:18:48.951330+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ef7ab0"},"request_uri":"http://localhost:8000/_wdt/ef7ab0","method":"GET"} []
[2020-07-05T19:18:51.607002+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?search=","method":"GET"} []
[2020-07-05T19:18:51.610772+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:18:51.610876+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:18:51.610970+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:18:51.625503+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:18:51.626309+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:18:51.627115+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[8,7,5,4,3]] []
[2020-07-05T19:18:51.631390+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:18:51.635147+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:18:51.643536+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:18:51.929101+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"657073"},"request_uri":"http://localhost:8000/_wdt/657073","method":"GET"} []
[2020-07-05T19:18:55.573930+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?search=lap","method":"GET"} []
[2020-07-05T19:18:55.576316+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:18:55.576383+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:18:55.576439+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:18:55.589499+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%lap%' [] []
[2020-07-05T19:18:55.590643+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%lap%' ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:18:55.591580+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%lap%' AND s0_.id IN (?) ORDER BY s0_.id DESC [[8,7,5,4,3]] []
[2020-07-05T19:18:55.597138+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:18:55.599752+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:18:55.608863+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:18:55.883155+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c89ca8"},"request_uri":"http://localhost:8000/_wdt/c89ca8","method":"GET"} []
[2020-07-05T19:19:00.137633+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?search=tosh","method":"GET"} []
[2020-07-05T19:19:00.140098+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:19:00.140170+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:19:00.140209+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:19:00.152017+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%tosh%' [] []
[2020-07-05T19:19:00.152772+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%tosh%' ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:19:00.153438+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%tosh%' AND s0_.id IN (?) ORDER BY s0_.id DESC [[7,2]] []
[2020-07-05T19:19:00.157299+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:19:00.159670+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:19:00.167340+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:19:00.444362+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ad3752"},"request_uri":"http://localhost:8000/_wdt/ad3752","method":"GET"} []
[2020-07-05T19:20:40.389741+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T19:20:40.392148+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:20:40.392217+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:20:40.392257+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:20:40.414166+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T19:20:40.415052+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T19:20:40.416091+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2]] []
[2020-07-05T19:20:40.420770+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T19:20:40.421537+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T19:20:40.422024+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T19:20:40.431286+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:20:40.710136+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"91d048"},"request_uri":"http://localhost:8000/_wdt/91d048","method":"GET"} []
[2020-07-05T19:20:50.987546+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-07-05T19:20:50.989995+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:20:50.990098+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:20:50.990157+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:20:50.995215+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-07-05T19:20:51.000372+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:20:51.288169+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c08031"},"request_uri":"http://localhost:8000/_wdt/c08031","method":"GET"} []
[2020-07-05T19:20:52.643469+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"GET"} []
[2020-07-05T19:20:52.645339+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:20:52.645408+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:20:52.645450+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:20:52.663081+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:20:52.951891+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c9f3be"},"request_uri":"http://localhost:8000/_wdt/c9f3be","method":"GET"} []
[2020-07-05T19:21:25.057393+02:00] request.INFO: Matched route "brand_new". {"route":"brand_new","route_parameters":{"_route":"brand_new","_controller":"App\\Controller\\BrandController::new"},"request_uri":"http://localhost:8000/brand/new","method":"POST"} []
[2020-07-05T19:21:25.061005+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:21:25.061107+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:21:25.061171+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:21:25.061395+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:21:25.084543+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:21:25.085378+02:00] doctrine.DEBUG: INSERT INTO brand (name, description) VALUES (?, ?) {"1":"Double A","2":"s"} []
[2020-07-05T19:21:25.085982+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:21:25.859824+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-07-05T19:21:25.861409+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:21:25.861476+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:21:25.861531+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:21:25.864698+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-07-05T19:21:25.869713+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:21:26.130452+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"580754"},"request_uri":"http://localhost:8000/_wdt/580754","method":"GET"} []
[2020-07-05T19:21:27.343566+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T19:21:27.345594+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:21:27.345709+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:21:27.345772+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:21:27.355162+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T19:21:27.355948+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T19:21:27.356847+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2]] []
[2020-07-05T19:21:27.360719+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T19:21:27.361735+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T19:21:27.362419+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T19:21:27.369779+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:21:27.660140+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9eed82"},"request_uri":"http://localhost:8000/_wdt/9eed82","method":"GET"} []
[2020-07-05T19:22:21.353160+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-07-05T19:22:21.356907+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:22:21.356986+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:22:21.357031+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:22:21.357218+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:22:21.368242+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["4"]] []
[2020-07-05T19:22:21.369290+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["2"]] []
[2020-07-05T19:22:21.369943+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["1"]] []
[2020-07-05T19:22:21.379830+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:22:21.380376+02:00] doctrine.DEBUG: INSERT INTO product (name, description, price, brand_id, category_id, product_type_id) VALUES (?, ?, ?, ?, ?, ?) {"1":"Double A paper","2":"very nice","3":300.0,"4":4,"5":2,"6":1} []
[2020-07-05T19:22:21.380821+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:22:21.532568+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-07-05T19:22:21.534938+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:22:21.535077+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:22:21.535163+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:22:21.545672+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-07-05T19:22:21.546676+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-07-05T19:22:21.547631+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-07-05T19:22:21.552544+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-07-05T19:22:21.553407+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-07-05T19:22:21.553962+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-07-05T19:22:21.562115+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:22:21.838789+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"192e4f"},"request_uri":"http://localhost:8000/_wdt/192e4f","method":"GET"} []
[2020-07-05T19:22:32.540546+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:22:32.542867+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:22:32.542935+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:22:32.542976+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:22:32.555116+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:22:32.556843+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:22:32.557627+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[8,7,5,4,3]] []
[2020-07-05T19:22:32.561868+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:22:32.564814+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:22:32.574161+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:22:32.871198+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8e0b36"},"request_uri":"http://localhost:8000/_wdt/8e0b36","method":"GET"} []
[2020-07-05T19:23:10.868114+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:23:10.874542+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:23:10.874679+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:23:10.874760+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:23:10.875044+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:23:10.893811+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["3"]] []
[2020-07-05T19:23:10.897654+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["1"]] []
[2020-07-05T19:23:10.907789+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:23:10.908151+02:00] doctrine.DEBUG: INSERT INTO stock (quantity, date, product_id, store_id) VALUES (?, ?, ?, ?) {"1":240,"2":"2015-01-01T00:00:00+03:00","3":3,"4":1} []
[2020-07-05T19:23:10.908550+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:23:11.031487+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:23:11.034785+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:23:11.034924+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:23:11.035009+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:23:11.057457+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:23:11.058889+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:23:11.060305+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[9,8,7,5,4]] []
[2020-07-05T19:23:11.066703+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:23:11.070085+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:23:11.079045+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:23:11.351137+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"62e123"},"request_uri":"http://localhost:8000/_wdt/62e123","method":"GET"} []
[2020-07-05T19:25:41.352664+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:25:41.355151+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:25:41.355237+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:25:41.355282+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:25:41.366833+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:25:41.367701+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:25:41.368594+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[9,8,7,5,4]] []
[2020-07-05T19:25:41.373151+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:25:41.375694+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:25:41.389794+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:25:41.694267+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f2de33"},"request_uri":"http://localhost:8000/_wdt/f2de33","method":"GET"} []
[2020-07-05T19:25:48.364720+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:25:48.368319+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:25:48.368408+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:25:48.368459+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:25:48.368648+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:25:48.374388+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["9"] []
[2020-07-05T19:25:48.386012+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [3] []
[2020-07-05T19:25:48.389256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [1] []
[2020-07-05T19:25:48.393165+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:25:48.394078+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:25:48.394945+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[9,8,7,5,4]] []
[2020-07-05T19:25:48.397222+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:25:48.398458+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:25:48.693834+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e5c792"},"request_uri":"http://localhost:8000/_wdt/e5c792","method":"GET"} []
[2020-07-05T19:26:09.212643+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:26:09.215160+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:26:09.215230+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:26:09.215270+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:26:09.215422+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:26:09.220093+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["9"] []
[2020-07-05T19:26:09.227971+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [3] []
[2020-07-05T19:26:09.230326+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [1] []
[2020-07-05T19:26:09.232902+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:26:09.233448+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:26:09.234034+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[9,8,7,5,4]] []
[2020-07-05T19:26:09.235626+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:26:09.236200+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:26:09.498943+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c62d6"},"request_uri":"http://localhost:8000/_wdt/7c62d6","method":"GET"} []
[2020-07-05T19:26:21.837000+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:26:21.839546+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:26:21.839618+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:26:21.839658+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:26:21.839854+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:26:21.844735+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["9"] []
[2020-07-05T19:26:21.854020+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [3] []
[2020-07-05T19:26:21.856473+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [1] []
[2020-07-05T19:26:21.859098+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:26:21.859791+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:26:21.860655+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[9,8,7,5,4]] []
[2020-07-05T19:26:21.863118+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:26:21.863868+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:26:22.142109+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fa9fb0"},"request_uri":"http://localhost:8000/_wdt/fa9fb0","method":"GET"} []
[2020-07-05T19:27:07.328540+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:27:07.331669+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:27:07.331738+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:27:07.331780+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:27:07.331972+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:27:07.336482+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["9"] []
[2020-07-05T19:27:07.343611+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [3] []
[2020-07-05T19:27:07.347223+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [1] []
[2020-07-05T19:27:07.350004+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:27:07.350678+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:27:07.351518+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[9,8,7,5,4]] []
[2020-07-05T19:27:07.352986+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:27:07.353743+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:27:07.709397+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"559729"},"request_uri":"http://localhost:8000/_wdt/559729","method":"GET"} []
[2020-07-05T19:27:10.627159+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:27:10.629751+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:27:10.629820+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:27:10.629863+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:27:10.630031+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:27:10.635719+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? LIMIT 1 ["9"] []
[2020-07-05T19:27:10.643456+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? [3] []
[2020-07-05T19:27:10.645888+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.is_active AS is_active_4 FROM store t0 WHERE t0.id = ? [1] []
[2020-07-05T19:27:10.648197+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["3"]] []
[2020-07-05T19:27:10.649187+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["1"]] []
[2020-07-05T19:27:10.686152+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:27:10.688054+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:27:10.688151+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:27:10.688210+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:27:10.697166+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:27:10.698302+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:27:10.699344+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[9,8,7,5,4]] []
[2020-07-05T19:27:10.703798+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:27:10.707709+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:27:10.715254+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:27:10.977292+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"861947"},"request_uri":"http://localhost:8000/_wdt/861947","method":"GET"} []
[2020-07-05T19:28:04.267966+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-07-05T19:28:04.271198+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:28:04.271283+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:28:04.271344+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:28:04.295504+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-07-05T19:28:04.296500+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-07-05T19:28:04.297494+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2]] []
[2020-07-05T19:28:04.300421+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-07-05T19:28:04.310360+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:28:04.596415+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"63a6fc"},"request_uri":"http://localhost:8000/_wdt/63a6fc","method":"GET"} []
[2020-07-05T19:28:06.855052+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"POST"} []
[2020-07-05T19:28:06.857529+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:28:06.857608+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:28:06.857660+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:28:06.857838+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:28:06.862346+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-07-05T19:28:06.867288+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? [1] []
[2020-07-05T19:28:06.869490+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-07-05T19:28:06.870111+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-07-05T19:28:06.870831+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2]] []
[2020-07-05T19:28:06.872197+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-07-05T19:28:07.157731+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7f03de"},"request_uri":"http://localhost:8000/_wdt/7f03de","method":"GET"} []
[2020-07-05T19:28:35.018955+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"POST"} []
[2020-07-05T19:28:35.022046+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:28:35.022119+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:28:35.022160+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:28:35.022325+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:28:35.026597+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-07-05T19:28:35.032163+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? [1] []
[2020-07-05T19:28:35.034567+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-07-05T19:28:35.035146+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-07-05T19:28:35.035789+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2]] []
[2020-07-05T19:28:35.036929+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-07-05T19:28:35.304324+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"96ca88"},"request_uri":"http://localhost:8000/_wdt/96ca88","method":"GET"} []
[2020-07-05T19:28:38.725378+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"POST"} []
[2020-07-05T19:28:38.727988+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:28:38.728059+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:28:38.728102+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:28:38.728279+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:28:38.732690+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-07-05T19:28:38.738239+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM college t0 WHERE t0.id = ? [1] []
[2020-07-05T19:28:38.740400+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-07-05T19:28:38.774711+02:00] request.INFO: Matched route "department_index". {"route":"department_index","route_parameters":{"_route":"department_index","_controller":"App\\Controller\\DepartmentController::index"},"request_uri":"http://localhost:8000/department/","method":"GET"} []
[2020-07-05T19:28:38.776182+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:28:38.776245+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:28:38.776284+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:28:38.784219+02:00] doctrine.DEBUG: SELECT count(DISTINCT d0_.id) AS sclr_0 FROM department d0_ [] []
[2020-07-05T19:28:38.784944+02:00] doctrine.DEBUG: SELECT DISTINCT d0_.id AS id_0, d0_.id AS id_1 FROM department d0_ ORDER BY d0_.id ASC LIMIT 18 [] []
[2020-07-05T19:28:38.785532+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) ORDER BY d0_.id ASC [[1,2]] []
[2020-07-05T19:28:38.788773+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM college c0_ [] []
[2020-07-05T19:28:38.796916+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:28:39.042048+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4fcbfb"},"request_uri":"http://localhost:8000/_wdt/4fcbfb","method":"GET"} []
[2020-07-05T19:28:43.857867+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:28:43.860248+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:28:43.860320+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:28:43.860360+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:28:43.869931+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:28:43.870656+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:28:43.871383+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[9,8,7,5,4]] []
[2020-07-05T19:28:43.875189+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:28:43.878096+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:28:43.885057+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:28:44.170955+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3afa42"},"request_uri":"http://localhost:8000/_wdt/3afa42","method":"GET"} []
[2020-07-05T19:31:02.162842+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:31:02.165221+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:31:02.165286+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:31:02.165325+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:31:02.175223+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:31:02.176239+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:31:02.177159+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[9,8,7,5,4]] []
[2020-07-05T19:31:02.181185+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:31:02.183858+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:31:02.193661+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:31:02.442645+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e02cbd"},"request_uri":"http://localhost:8000/_wdt/e02cbd","method":"GET"} []
[2020-07-05T19:31:14.175458+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:31:14.178424+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:31:14.178506+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:31:14.178556+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:31:14.178768+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:31:14.191443+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["3"]] []
[2020-07-05T19:31:14.194354+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["1"]] []
[2020-07-05T19:31:14.203790+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:31:14.204277+02:00] doctrine.DEBUG: INSERT INTO stock (quantity, date, product_id, store_id) VALUES (?, ?, ?, ?) {"1":22,"2":"2020-07-05T19:31:14+02:00","3":3,"4":1} []
[2020-07-05T19:31:14.205490+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:31:14.359878+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:31:14.361403+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:31:14.361464+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:31:14.361502+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:31:14.372026+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:31:14.372908+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:31:14.374122+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[10,9,8,7,5]] []
[2020-07-05T19:31:14.378207+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:31:14.384335+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:31:14.391580+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:31:14.644041+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3a58e8"},"request_uri":"http://localhost:8000/_wdt/3a58e8","method":"GET"} []
[2020-07-05T19:32:35.029333+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:32:35.031722+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:32:35.031788+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:32:35.031826+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:32:35.031993+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:32:35.042245+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["1"]] []
[2020-07-05T19:32:35.046322+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["1"]] []
[2020-07-05T19:32:35.056059+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Stock::setReceiver() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Stock::setReceiver() at /var/www/inventory/src/Controller/StockController.php:60)"} []
[2020-07-05T19:32:35.057821+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setReceiver" of class "App\Entity\Stock"." at /var/www/inventory/src/Controller/StockController.php line 60 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setReceiver\" of class \"App\\Entity\\Stock\". at /var/www/inventory/src/Controller/StockController.php:60)"} []
[2020-07-05T19:32:35.161851+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c6f1a2"},"request_uri":"http://localhost:8000/_wdt/c6f1a2","method":"GET"} []
[2020-07-05T19:33:17.824868+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"POST"} []
[2020-07-05T19:33:17.827224+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:33:17.827312+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:33:17.827377+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:33:17.827602+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:33:17.838519+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["1"]] []
[2020-07-05T19:33:17.841571+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ WHERE s0_.id IN (?) [["1"]] []
[2020-07-05T19:33:17.850359+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:33:17.850801+02:00] doctrine.DEBUG: INSERT INTO stock (quantity, date, product_id, store_id) VALUES (?, ?, ?, ?) {"1":33,"2":"2020-07-05T19:33:17+02:00","3":1,"4":1} []
[2020-07-05T19:33:17.851131+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:33:18.010446+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:33:18.012630+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:33:18.012731+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:33:18.012794+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:33:18.021930+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:33:18.022920+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:33:18.023797+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-07-05T19:33:18.027815+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:33:18.031065+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:33:18.038981+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:33:18.321229+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e95f38"},"request_uri":"http://localhost:8000/_wdt/e95f38","method":"GET"} []
[2020-07-05T19:33:40.282607+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-07-05T19:33:40.284945+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:33:40.285016+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:33:40.285054+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:33:40.289651+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.requested_date AS requested_date_3, t0.recieved_date AS recieved_date_4, t0.product_id AS product_id_5, t0.receiver_id AS receiver_id_6 FROM `order` t0 [] []
[2020-07-05T19:33:40.296396+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:33:40.560399+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5b89ac"},"request_uri":"http://localhost:8000/_wdt/5b89ac","method":"GET"} []
[2020-07-05T19:33:42.478327+02:00] request.INFO: Matched route "order_new". {"route":"order_new","route_parameters":{"_route":"order_new","_controller":"App\\Controller\\OrderController::new"},"request_uri":"http://localhost:8000/order/new","method":"GET"} []
[2020-07-05T19:33:42.480617+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:33:42.480707+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:33:42.480782+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:33:42.501015+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:33:42.505124+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.first_name AS first_name_4, u0_.middle_name AS middle_name_5, u0_.last_name AS last_name_6, u0_.department_id AS department_id_7, u0_.user_type_id AS user_type_id_8 FROM user u0_ [] []
[2020-07-05T19:33:42.514335+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:33:42.794816+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"64aa2c"},"request_uri":"http://localhost:8000/_wdt/64aa2c","method":"GET"} []
[2020-07-05T19:33:59.668449+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/user/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"user_index"},"request_uri":"http://localhost:8000/user","method":"GET"} []
[2020-07-05T19:33:59.673086+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:33:59.673188+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:33:59.673250+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:33:59.678900+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:33:59.695037+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-07-05T19:33:59.696788+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:33:59.696879+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:33:59.696937+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:33:59.701845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-07-05T19:33:59.707393+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:33:59.997522+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5cf8ac"},"request_uri":"http://localhost:8000/_wdt/5cf8ac","method":"GET"} []
[2020-07-05T19:34:01.563448+02:00] request.INFO: Matched route "user_new". {"route":"user_new","route_parameters":{"_route":"user_new","_controller":"App\\Controller\\UserController::new"},"request_uri":"http://localhost:8000/user/new","method":"GET"} []
[2020-07-05T19:34:01.565959+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:34:01.566093+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:01.566202+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:01.601033+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ [] []
[2020-07-05T19:34:01.603198+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-07-05T19:34:01.612411+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:34:01.872064+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"72b00a"},"request_uri":"http://localhost:8000/_wdt/72b00a","method":"GET"} []
[2020-07-05T19:34:27.590408+02:00] request.INFO: Matched route "user_type_index". {"route":"user_type_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/usertype/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"user_type_index"},"request_uri":"http://localhost:8000/usertype","method":"GET"} []
[2020-07-05T19:34:27.592652+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:34:27.592731+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:27.592771+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:27.596480+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:34:27.613447+02:00] request.INFO: Matched route "user_type_index". {"route":"user_type_index","route_parameters":{"_route":"user_type_index","_controller":"App\\Controller\\UserTypeController::index"},"request_uri":"http://localhost:8000/usertype/","method":"GET"} []
[2020-07-05T19:34:27.615395+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:34:27.615475+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:27.615532+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:27.619500+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 [] []
[2020-07-05T19:34:27.623842+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:34:27.901898+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a74051"},"request_uri":"http://localhost:8000/_wdt/a74051","method":"GET"} []
[2020-07-05T19:34:29.502362+02:00] request.INFO: Matched route "user_type_new". {"route":"user_type_new","route_parameters":{"_route":"user_type_new","_controller":"App\\Controller\\UserTypeController::new"},"request_uri":"http://localhost:8000/usertype/new","method":"GET"} []
[2020-07-05T19:34:29.504554+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:34:29.504648+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:29.504728+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:29.525125+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:34:29.787707+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3184c6"},"request_uri":"http://localhost:8000/_wdt/3184c6","method":"GET"} []
[2020-07-05T19:34:43.429088+02:00] request.INFO: Matched route "user_type_new". {"route":"user_type_new","route_parameters":{"_route":"user_type_new","_controller":"App\\Controller\\UserTypeController::new"},"request_uri":"http://localhost:8000/usertype/new","method":"POST"} []
[2020-07-05T19:34:43.431444+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:34:43.431509+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:43.431559+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:43.431710+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:34:43.446705+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:34:43.447257+02:00] doctrine.DEBUG: INSERT INTO user_type (name, description) VALUES (?, ?) {"1":"Administration","2":"d"} []
[2020-07-05T19:34:43.447605+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:34:43.587765+02:00] request.INFO: Matched route "user_type_index". {"route":"user_type_index","route_parameters":{"_route":"user_type_index","_controller":"App\\Controller\\UserTypeController::index"},"request_uri":"http://localhost:8000/usertype/","method":"GET"} []
[2020-07-05T19:34:43.589375+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:34:43.589456+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:43.589512+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:43.592982+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 [] []
[2020-07-05T19:34:43.597769+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:34:43.883697+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c92e5e"},"request_uri":"http://localhost:8000/_wdt/c92e5e","method":"GET"} []
[2020-07-05T19:34:44.724638+02:00] request.INFO: Matched route "user_type_new". {"route":"user_type_new","route_parameters":{"_route":"user_type_new","_controller":"App\\Controller\\UserTypeController::new"},"request_uri":"http://localhost:8000/usertype/new","method":"GET"} []
[2020-07-05T19:34:44.726998+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:34:44.727088+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:44.727140+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:44.741220+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:34:45.016881+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c75df7"},"request_uri":"http://localhost:8000/_wdt/c75df7","method":"GET"} []
[2020-07-05T19:34:48.830647+02:00] request.INFO: Matched route "user_type_new". {"route":"user_type_new","route_parameters":{"_route":"user_type_new","_controller":"App\\Controller\\UserTypeController::new"},"request_uri":"http://localhost:8000/usertype/new","method":"POST"} []
[2020-07-05T19:34:48.835011+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:34:48.835142+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:48.835224+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:48.835525+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:34:48.855463+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:34:48.856068+02:00] doctrine.DEBUG: INSERT INTO user_type (name, description) VALUES (?, ?) {"1":"Academic","2":"d"} []
[2020-07-05T19:34:48.856490+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:34:49.033336+02:00] request.INFO: Matched route "user_type_index". {"route":"user_type_index","route_parameters":{"_route":"user_type_index","_controller":"App\\Controller\\UserTypeController::index"},"request_uri":"http://localhost:8000/usertype/","method":"GET"} []
[2020-07-05T19:34:49.035224+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:34:49.035316+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:49.035377+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:49.039154+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 [] []
[2020-07-05T19:34:49.058501+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:34:49.312714+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"95fd42"},"request_uri":"http://localhost:8000/_wdt/95fd42","method":"GET"} []
[2020-07-05T19:34:50.723315+02:00] request.INFO: Matched route "user_type_new". {"route":"user_type_new","route_parameters":{"_route":"user_type_new","_controller":"App\\Controller\\UserTypeController::new"},"request_uri":"http://localhost:8000/usertype/new","method":"GET"} []
[2020-07-05T19:34:50.725838+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:34:50.725927+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:50.726004+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:50.739162+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:34:51.001845+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4aa957"},"request_uri":"http://localhost:8000/_wdt/4aa957","method":"GET"} []
[2020-07-05T19:34:57.794000+02:00] request.INFO: Matched route "user_new". {"route":"user_new","route_parameters":{"_route":"user_new","_controller":"App\\Controller\\UserController::new"},"request_uri":"http://localhost:8000/user/new","method":"GET"} []
[2020-07-05T19:34:57.795866+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:34:57.795944+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:57.795985+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:34:57.806658+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ [] []
[2020-07-05T19:34:57.808483+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ [] []
[2020-07-05T19:34:57.816433+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:34:58.059844+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"099a7c"},"request_uri":"http://localhost:8000/_wdt/099a7c","method":"GET"} []
[2020-07-05T19:35:14.001669+02:00] request.INFO: Matched route "user_new". {"route":"user_new","route_parameters":{"_route":"user_new","_controller":"App\\Controller\\UserController::new"},"request_uri":"http://localhost:8000/user/new","method":"POST"} []
[2020-07-05T19:35:14.004121+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:35:14.004184+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:35:14.004222+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:35:14.004371+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:35:14.016410+02:00] doctrine.DEBUG: SELECT d0_.id AS id_0, d0_.name AS name_1, d0_.description AS description_2, d0_.college_id AS college_id_3 FROM department d0_ WHERE d0_.id IN (?) [["1"]] []
[2020-07-05T19:35:14.018561+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1, u0_.description AS description_2 FROM user_type u0_ WHERE u0_.id IN (?) [["1"]] []
[2020-07-05T19:35:14.280271+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:35:14.280755+02:00] doctrine.DEBUG: INSERT INTO user (username, roles, password, first_name, middle_name, last_name, department_id, user_type_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"amtadesse","2":[],"3":"$argon2id$v=19$m=65536,t=4 [...]","4":"Amsalu","5":"Tadesse","6":"Desta","7":1,"8":1} []
[2020-07-05T19:35:14.281157+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:35:14.355519+02:00] request.INFO: Matched route "user_index". {"route":"user_index","route_parameters":{"_route":"user_index","_controller":"App\\Controller\\UserController::index"},"request_uri":"http://localhost:8000/user/","method":"GET"} []
[2020-07-05T19:35:14.357223+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:35:14.357315+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:35:14.357370+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:35:14.361752+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 [] []
[2020-07-05T19:35:14.366170+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-07-05T19:35:14.367194+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? [1] []
[2020-07-05T19:35:14.370037+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:35:14.649788+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8c2496"},"request_uri":"http://localhost:8000/_wdt/8c2496","method":"GET"} []
[2020-07-05T19:35:17.831339+02:00] request.INFO: Matched route "user_show". {"route":"user_show","route_parameters":{"_route":"user_show","_controller":"App\\Controller\\UserController::show","id":"1"},"request_uri":"http://localhost:8000/user/1","method":"GET"} []
[2020-07-05T19:35:17.833564+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:35:17.833631+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:35:17.833671+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:35:17.837524+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.username AS username_2, t0.roles AS roles_3, t0.password AS password_4, t0.first_name AS first_name_5, t0.middle_name AS middle_name_6, t0.last_name AS last_name_7, t0.department_id AS department_id_8, t0.user_type_id AS user_type_id_9 FROM user t0 WHERE t0.id = ? ["1"] []
[2020-07-05T19:35:17.843564+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.college_id AS college_id_4 FROM department t0 WHERE t0.id = ? [1] []
[2020-07-05T19:35:17.844629+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM user_type t0 WHERE t0.id = ? [1] []
[2020-07-05T19:35:17.847275+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:35:18.110665+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d1b53b"},"request_uri":"http://localhost:8000/_wdt/d1b53b","method":"GET"} []
[2020-07-05T19:36:20.737384+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-07-05T19:36:20.740360+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:36:20.740469+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:36:20.740508+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:36:20.745441+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.requested_date AS requested_date_3, t0.recieved_date AS recieved_date_4, t0.product_id AS product_id_5, t0.receiver_id AS receiver_id_6 FROM `order` t0 [] []
[2020-07-05T19:36:20.750672+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:36:21.005357+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"087a6d"},"request_uri":"http://localhost:8000/_wdt/087a6d","method":"GET"} []
[2020-07-05T19:36:22.871765+02:00] request.INFO: Matched route "order_new". {"route":"order_new","route_parameters":{"_route":"order_new","_controller":"App\\Controller\\OrderController::new"},"request_uri":"http://localhost:8000/order/new","method":"GET"} []
[2020-07-05T19:36:22.874133+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:36:22.874243+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:36:22.874313+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:36:22.886518+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:36:22.890803+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.first_name AS first_name_4, u0_.middle_name AS middle_name_5, u0_.last_name AS last_name_6, u0_.department_id AS department_id_7, u0_.user_type_id AS user_type_id_8 FROM user u0_ [] []
[2020-07-05T19:36:22.894357+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\User could not be converted to string" at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php line 57 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\User could not be converted to string at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php:57)"} []
[2020-07-05T19:36:22.926825+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:36:23.043653+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"36498b"},"request_uri":"http://localhost:8000/_wdt/36498b","method":"GET"} []
[2020-07-05T19:38:47.060325+02:00] request.INFO: Matched route "order_new". {"route":"order_new","route_parameters":{"_route":"order_new","_controller":"App\\Controller\\OrderController::new"},"request_uri":"http://localhost:8000/order/new","method":"GET"} []
[2020-07-05T19:38:47.063031+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:38:47.063103+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:38:47.063153+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:38:47.088480+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:38:47.093845+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.first_name AS first_name_4, u0_.middle_name AS middle_name_5, u0_.last_name AS last_name_6, u0_.department_id AS department_id_7, u0_.user_type_id AS user_type_id_8 FROM user u0_ [] []
[2020-07-05T19:38:47.104898+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:38:47.387155+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"24b19e"},"request_uri":"http://localhost:8000/_wdt/24b19e","method":"GET"} []
[2020-07-05T19:40:17.231866+02:00] request.INFO: Matched route "order_new". {"route":"order_new","route_parameters":{"_route":"order_new","_controller":"App\\Controller\\OrderController::new"},"request_uri":"http://localhost:8000/order/new","method":"GET"} []
[2020-07-05T19:40:17.234546+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:40:17.234618+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:40:17.234675+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:40:17.246821+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:40:17.257719+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:40:17.545966+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"720596"},"request_uri":"http://localhost:8000/_wdt/720596","method":"GET"} []
[2020-07-05T19:40:27.567258+02:00] request.INFO: Matched route "order_new". {"route":"order_new","route_parameters":{"_route":"order_new","_controller":"App\\Controller\\OrderController::new"},"request_uri":"http://localhost:8000/order/new","method":"POST"} []
[2020-07-05T19:40:27.571071+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:40:27.571171+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:40:27.571238+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:40:27.571485+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:40:27.591157+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) [["1"]] []
[2020-07-05T19:40:27.613345+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-05T19:40:27.613858+02:00] doctrine.DEBUG: INSERT INTO `order` (quantity, requested_date, recieved_date, product_id, receiver_id) VALUES (?, ?, ?, ?, ?) {"1":22,"2":"2015-01-01T00:00:00+03:00","3":"2024-11-11T00:00:00+02:00","4":1,"5":null} []
[2020-07-05T19:40:27.615056+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-05T19:40:27.765796+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-07-05T19:40:27.767638+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:40:27.767707+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:40:27.767763+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:40:27.772092+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.requested_date AS requested_date_3, t0.recieved_date AS recieved_date_4, t0.product_id AS product_id_5, t0.receiver_id AS receiver_id_6 FROM `order` t0 [] []
[2020-07-05T19:40:27.777237+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:40:28.052812+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"553daf"},"request_uri":"http://localhost:8000/_wdt/553daf","method":"GET"} []
[2020-07-05T19:42:34.517200+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-07-05T19:42:34.520283+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:42:34.520363+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:42:34.520407+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:42:34.524156+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-07-05T19:42:34.528694+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:42:34.794771+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c80435"},"request_uri":"http://localhost:8000/_wdt/c80435","method":"GET"} []
[2020-07-05T19:42:36.941866+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:42:36.944029+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:42:36.944105+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:42:36.944162+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:42:36.954034+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:42:36.954864+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:42:36.955725+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-07-05T19:42:36.959759+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:42:36.962358+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:42:36.969777+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:42:37.251699+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e25964"},"request_uri":"http://localhost:8000/_wdt/e25964","method":"GET"} []
[2020-07-05T19:43:00.021818+02:00] request.INFO: Matched route "stock_show". {"route":"stock_show","route_parameters":{"_route":"stock_show","_controller":"App\\Controller\\StockController::show","id":"9"},"request_uri":"http://localhost:8000/stock/9","method":"GET"} []
[2020-07-05T19:43:00.025892+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:43:00.026006+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:43:00.026074+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:43:00.030603+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? ["9"] []
[2020-07-05T19:43:00.037002+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:43:00.291113+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9a6c44"},"request_uri":"http://localhost:8000/_wdt/9a6c44","method":"GET"} []
[2020-07-05T19:43:02.447260+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-07-05T19:43:02.448834+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:43:02.448906+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:43:02.448946+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:43:02.458419+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:43:02.459403+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-07-05T19:43:02.460629+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-07-05T19:43:02.465051+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:43:02.468466+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:43:02.476318+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:43:02.735939+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"13b22b"},"request_uri":"http://localhost:8000/_wdt/13b22b","method":"GET"} []
[2020-07-05T19:43:06.111164+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?page=2","method":"GET"} []
[2020-07-05T19:43:06.113464+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:43:06.113531+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:43:06.113586+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:43:06.123743+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-07-05T19:43:06.124962+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 OFFSET 5 [] []
[2020-07-05T19:43:06.125995+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[5,4,3,2,1]] []
[2020-07-05T19:43:06.130095+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-07-05T19:43:06.132696+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-07-05T19:43:06.140260+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:43:06.403491+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"65e17e"},"request_uri":"http://localhost:8000/_wdt/65e17e","method":"GET"} []
[2020-07-05T19:43:09.518845+02:00] request.INFO: Matched route "brand_index". {"route":"brand_index","route_parameters":{"_route":"brand_index","_controller":"App\\Controller\\BrandController::index"},"request_uri":"http://localhost:8000/brand/","method":"GET"} []
[2020-07-05T19:43:09.521652+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-07-05T19:43:09.521723+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:43:09.521779+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-07-05T19:43:09.525511+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 [] []
[2020-07-05T19:43:09.530087+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-07-05T19:43:09.776837+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"35b63d"},"request_uri":"http://localhost:8000/_wdt/35b63d","method":"GET"} []
[2020-08-07T21:04:10.400427+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-08-07T21:04:10.592834+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d94306"},"request_uri":"http://localhost:8000/_wdt/d94306","method":"GET"} []
[2020-08-07T21:04:15.117374+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8000/home","method":"GET"} []
[2020-08-07T21:04:15.124954+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:04:15.125024+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:04:15.125064+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:04:15.164889+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:04:15.630010+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"91ea73"},"request_uri":"http://localhost:8000/_wdt/91ea73","method":"GET"} []
[2020-08-07T21:04:28.867005+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-08-07T21:04:28.870028+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:04:28.870105+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:04:28.870144+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:04:29.324933+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:04:29.695550+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:04:29.722432+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:04:29.816405+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:04:29.906701+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:04:30.036546+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:04:30.298920+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a2acc9"},"request_uri":"http://localhost:8000/_wdt/a2acc9","method":"GET"} []
[2020-08-07T21:04:49.433068+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?page=2","method":"GET"} []
[2020-08-07T21:04:49.435827+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:04:49.435930+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:04:49.435986+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:04:49.446150+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:04:49.446755+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 OFFSET 5 [] []
[2020-08-07T21:04:49.447625+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[5,4,3,2,1]] []
[2020-08-07T21:04:49.452405+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:04:49.456192+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:04:49.464879+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:04:49.749774+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"578193"},"request_uri":"http://localhost:8000/_wdt/578193","method":"GET"} []
[2020-08-07T21:04:55.834982+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/?page=1","method":"GET"} []
[2020-08-07T21:04:55.837530+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:04:55.837613+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:04:55.837663+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:04:55.847851+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:04:55.848575+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:04:55.849309+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:04:55.853741+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:04:55.856878+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:04:55.863866+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:04:56.128914+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cefd8a"},"request_uri":"http://localhost:8000/_wdt/cefd8a","method":"GET"} []
[2020-08-07T21:05:14.583623+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T21:05:14.586965+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:05:14.587057+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:05:14.587130+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:05:14.679737+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T21:05:14.680873+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T21:05:14.681689+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T21:05:14.685954+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T21:05:14.735612+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T21:05:14.757396+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T21:05:14.822343+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:05:15.104161+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ea69dc"},"request_uri":"http://localhost:8000/_wdt/ea69dc","method":"GET"} []
[2020-08-07T21:05:30.499811+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-08-07T21:05:30.502793+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:05:30.502866+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:05:30.502916+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:05:30.503173+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:05:30.508754+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? LIMIT 1 ["2"] []
[2020-08-07T21:05:30.687571+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-08-07T21:05:30.690420+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T21:05:30.693329+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T21:05:30.710039+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T21:05:30.713579+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T21:05:30.717363+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T21:05:30.725378+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T21:05:30.729228+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T21:05:30.732073+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T21:05:31.096697+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a43d4c"},"request_uri":"http://localhost:8000/_wdt/a43d4c","method":"GET"} []
[2020-08-07T21:05:47.246038+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T21:05:47.249857+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:05:47.249950+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:05:47.250001+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:05:47.262733+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T21:05:47.263435+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T21:05:47.264429+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T21:05:47.269345+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T21:05:47.270040+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T21:05:47.270482+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T21:05:47.278521+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:05:47.549857+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"741eab"},"request_uri":"http://localhost:8000/_wdt/741eab","method":"GET"} []
[2020-08-07T21:05:49.695878+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-08-07T21:05:49.702169+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:05:49.702330+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:05:49.702445+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:05:49.702834+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:05:49.711520+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? LIMIT 1 ["2"] []
[2020-08-07T21:05:49.722020+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-08-07T21:05:49.722490+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T21:05:49.722843+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T21:05:49.725107+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T21:05:49.725720+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T21:05:49.726475+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T21:05:49.728297+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T21:05:49.729075+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T21:05:49.729588+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T21:05:50.005634+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6a4b8c"},"request_uri":"http://localhost:8000/_wdt/6a4b8c","method":"GET"} []
[2020-08-07T21:05:55.984970+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T21:05:55.987599+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:05:55.987690+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:05:55.987752+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:05:56.000345+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T21:05:56.001031+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T21:05:56.001723+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T21:05:56.005709+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T21:05:56.006375+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T21:05:56.006773+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T21:05:56.016999+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:05:56.296802+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1ebb5e"},"request_uri":"http://localhost:8000/_wdt/1ebb5e","method":"GET"} []
[2020-08-07T21:05:58.180667+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-08-07T21:05:58.183233+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:05:58.183326+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:05:58.183384+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:05:58.183599+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:05:58.188331+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? LIMIT 1 ["1"] []
[2020-08-07T21:05:58.196722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [2] []
[2020-08-07T21:05:58.197531+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T21:05:58.197990+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T21:05:58.202172+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T21:05:58.202892+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T21:05:58.203725+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T21:05:58.205254+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T21:05:58.205840+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T21:05:58.206236+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T21:05:58.485591+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"73817e"},"request_uri":"http://localhost:8000/_wdt/73817e","method":"GET"} []
[2020-08-07T21:06:07.570398+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T21:06:07.580741+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:06:07.580964+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:06:07.581093+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:06:07.601087+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T21:06:07.601979+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T21:06:07.602953+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T21:06:07.609319+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T21:06:07.610183+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T21:06:07.610695+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T21:06:07.618902+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:06:07.900542+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"704c15"},"request_uri":"http://localhost:8000/_wdt/704c15","method":"GET"} []
[2020-08-07T21:06:09.615316+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-08-07T21:06:09.617704+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:06:09.617773+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:06:09.617811+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:06:09.617939+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:06:09.621712+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? LIMIT 1 ["2"] []
[2020-08-07T21:06:09.628810+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-08-07T21:06:09.629362+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T21:06:09.629729+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T21:06:09.632635+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T21:06:09.633228+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T21:06:09.633868+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T21:06:09.635041+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T21:06:09.635726+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T21:06:09.636246+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T21:06:09.914694+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e9beb8"},"request_uri":"http://localhost:8000/_wdt/e9beb8","method":"GET"} []
[2020-08-07T21:06:16.321729+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-08-07T21:06:16.324832+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:06:16.325106+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:06:16.325200+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:06:16.325545+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:06:16.333222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7 FROM product t0 WHERE t0.id = ? LIMIT 1 ["2"] []
[2020-08-07T21:06:16.344002+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [1] []
[2020-08-07T21:06:16.344630+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T21:06:16.345226+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T21:06:16.429376+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["1"]] []
[2020-08-07T21:06:16.432069+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["1"]] []
[2020-08-07T21:06:16.434340+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["2"]] []
[2020-08-07T21:06:16.725755+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T21:06:16.726045+02:00] doctrine.DEBUG: UPDATE product SET name = ? WHERE id = ? ["HP Laptop",2] []
[2020-08-07T21:06:16.759219+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T21:06:16.851380+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T21:06:16.853139+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:06:16.853230+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:06:16.853289+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:06:16.863564+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T21:06:16.864822+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T21:06:16.865770+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T21:06:16.870315+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T21:06:16.871213+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T21:06:16.871881+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T21:06:16.879027+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:06:17.132298+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0bc097"},"request_uri":"http://localhost:8000/_wdt/0bc097","method":"GET"} []
[2020-08-07T21:07:32.489544+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-08-07T21:07:32.491890+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:07:32.491960+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:07:32.491998+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:07:32.502346+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:07:32.503067+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:07:32.503887+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:07:32.508279+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:07:32.511215+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:07:32.518580+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:07:32.821375+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e5464d"},"request_uri":"http://localhost:8000/_wdt/e5464d","method":"GET"} []
[2020-08-07T21:23:39.501560+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-07T21:23:39.502985+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.504068+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.504563+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.504850+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-08-07T21:23:39.505104+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.505546+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.506008+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.506318+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-08-07T21:23:39.506563+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.506991+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.507293+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.507589+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-08-07T21:23:39.507834+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.508263+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.508567+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.508847+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-08-07T21:23:39.509087+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.509507+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.509842+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.510090+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-08-07T21:23:39.510318+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.510744+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.511094+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.511375+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-08-07T21:23:39.511633+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.512104+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.512492+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.512802+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-08-07T21:23:39.513075+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.513627+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.513998+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.514331+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-08-07T21:23:39.514568+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.514992+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.515284+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.515538+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-08-07T21:23:39.515780+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.516217+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.516590+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.516889+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-08-07T21:23:39.517120+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.517723+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.518148+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.518443+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-08-07T21:23:39.518728+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.519328+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.519748+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.520084+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-08-07T21:23:39.520413+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.521002+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.521431+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.521766+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-07T21:23:39.522055+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.522627+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.523019+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.523306+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-08-07T21:23:39.526849+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-07T21:23:39.527555+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.528143+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.528525+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.528827+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-08-07T21:23:39.529097+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.529565+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.529981+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.530294+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-08-07T21:23:39.530549+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.531013+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.531366+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.531685+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-08-07T21:23:39.531974+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.532456+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.532881+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.533176+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-08-07T21:23:39.533449+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.533957+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.534341+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.534635+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-08-07T21:23:39.534911+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.535382+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.535834+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.536146+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-08-07T21:23:39.536414+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.537066+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.537609+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.537966+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-08-07T21:23:39.538222+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.538763+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.539208+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.539626+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-08-07T21:23:39.539956+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.541526+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.542954+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.543297+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-08-07T21:23:39.543578+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.544095+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.544471+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.544795+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-08-07T21:23:39.545049+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.545513+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.545821+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.546103+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-08-07T21:23:39.546379+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.546868+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.547273+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.547613+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-08-07T21:23:39.547873+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.548448+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.548847+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.549201+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-07T21:23:39.549450+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T21:23:39.549897+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T21:23:39.550215+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T21:23:39.550465+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-08-07T21:23:39.551601+02:00] doctrine.DEBUG: ALTER TABLE `order` ADD approval1 TINYINT(1) DEFAULT NULL, ADD approval2 TINYINT(1) DEFAULT NULL [] []
[2020-08-07T21:29:13.341426+02:00] console.DEBUG: Command "make:controller" exited with code "1" {"command":"make:controller","code":1} []
[2020-08-07T21:29:47.257821+02:00] request.INFO: Matched route "order_index". {"route":"order_index","route_parameters":{"_route":"order_index","_controller":"App\\Controller\\OrderController::index"},"request_uri":"http://localhost:8000/order/","method":"GET"} []
[2020-08-07T21:29:47.263536+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:29:47.263651+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:29:47.263712+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:29:47.279599+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.requested_date AS requested_date_3, t0.recieved_date AS recieved_date_4, t0.approval1 AS approval1_5, t0.approval2 AS approval2_6, t0.product_id AS product_id_7, t0.receiver_id AS receiver_id_8 FROM `order` t0 [] []
[2020-08-07T21:29:47.293022+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:29:47.952778+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"282f32"},"request_uri":"http://localhost:8000/_wdt/282f32","method":"GET"} []
[2020-08-07T21:31:56.397703+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-08-07T21:31:56.400574+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:31:56.400652+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:31:56.400708+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:31:56.412868+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:31:56.413568+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:31:56.414259+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:31:56.419911+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:31:56.423723+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:31:56.432692+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:31:56.703419+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5936c0"},"request_uri":"http://localhost:8000/_wdt/5936c0","method":"GET"} []
[2020-08-07T21:37:00.562059+02:00] console.ERROR: Error thrown while running command "debug:router --format=json". Message: "[Syntax Error] Expected Doctrine\Common\Annotations\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\Controller\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from "/var/www/inventory/config/routes/annotations.yaml"). Make sure annotations are installed and enabled." {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): [Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from \"/var/www/inventory/config/routes/annotations.yaml\"). Make sure annotations are installed and enabled. at /var/www/inventory/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\Common\\Annotations\\AnnotationException(code: 0): [Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index(). at /var/www/inventory/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/AnnotationException.php:42)","command":"debug:router --format=json","message":"[Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from \"/var/www/inventory/config/routes/annotations.yaml\"). Make sure annotations are installed and enabled."} []
[2020-08-07T21:37:00.562494+02:00] console.DEBUG: Command "debug:router --format=json" exited with code "1" {"command":"debug:router --format=json","code":1} []
[2020-08-07T21:37:01.853520+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Config\Exception\LoaderLoadException: "[Syntax Error] Expected Doctrine\Common\Annotations\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\Controller\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from "/var/www/inventory/config/routes/annotations.yaml"). Make sure annotations are installed and enabled." at /var/www/inventory/vendor/symfony/config/Loader/FileLoader.php line 173 {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): [Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from \"/var/www/inventory/config/routes/annotations.yaml\"). Make sure annotations are installed and enabled. at /var/www/inventory/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\Common\\Annotations\\AnnotationException(code: 0): [Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index(). at /var/www/inventory/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/AnnotationException.php:42)"} []
[2020-08-07T21:37:41.401259+02:00] console.ERROR: Error thrown while running command "debug:router --format=json". Message: "[Syntax Error] Expected Doctrine\Common\Annotations\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\Controller\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from "/var/www/inventory/config/routes/annotations.yaml"). Make sure annotations are installed and enabled." {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): [Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from \"/var/www/inventory/config/routes/annotations.yaml\"). Make sure annotations are installed and enabled. at /var/www/inventory/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\Common\\Annotations\\AnnotationException(code: 0): [Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index(). at /var/www/inventory/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/AnnotationException.php:42)","command":"debug:router --format=json","message":"[Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from \"/var/www/inventory/config/routes/annotations.yaml\"). Make sure annotations are installed and enabled."} []
[2020-08-07T21:37:41.402243+02:00] console.DEBUG: Command "debug:router --format=json" exited with code "1" {"command":"debug:router --format=json","code":1} []
[2020-08-07T21:37:45.692757+02:00] console.ERROR: Error thrown while running command "debug:router --format=json". Message: "[Syntax Error] Expected Doctrine\Common\Annotations\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\Controller\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from "/var/www/inventory/config/routes/annotations.yaml"). Make sure annotations are installed and enabled." {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): [Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from \"/var/www/inventory/config/routes/annotations.yaml\"). Make sure annotations are installed and enabled. at /var/www/inventory/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\Common\\Annotations\\AnnotationException(code: 0): [Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index(). at /var/www/inventory/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/AnnotationException.php:42)","command":"debug:router --format=json","message":"[Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from \"/var/www/inventory/config/routes/annotations.yaml\"). Make sure annotations are installed and enabled."} []
[2020-08-07T21:37:45.693753+02:00] console.DEBUG: Command "debug:router --format=json" exited with code "1" {"command":"debug:router --format=json","code":1} []
[2020-08-07T21:37:52.164511+02:00] console.ERROR: Error thrown while running command "debug:router --format=json". Message: "[Syntax Error] Expected Doctrine\Common\Annotations\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\Controller\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from "/var/www/inventory/config/routes/annotations.yaml"). Make sure annotations are installed and enabled." {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): [Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from \"/var/www/inventory/config/routes/annotations.yaml\"). Make sure annotations are installed and enabled. at /var/www/inventory/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\Common\\Annotations\\AnnotationException(code: 0): [Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index(). at /var/www/inventory/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/AnnotationException.php:42)","command":"debug:router --format=json","message":"[Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from \"/var/www/inventory/config/routes/annotations.yaml\"). Make sure annotations are installed and enabled."} []
[2020-08-07T21:37:52.165749+02:00] console.DEBUG: Command "debug:router --format=json" exited with code "1" {"command":"debug:router --format=json","code":1} []
[2020-08-07T21:37:56.628441+02:00] console.ERROR: Error thrown while running command "debug:router --format=json". Message: "[Syntax Error] Expected Doctrine\Common\Annotations\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\Controller\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from "/var/www/inventory/config/routes/annotations.yaml"). Make sure annotations are installed and enabled." {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): [Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from \"/var/www/inventory/config/routes/annotations.yaml\"). Make sure annotations are installed and enabled. at /var/www/inventory/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\Common\\Annotations\\AnnotationException(code: 0): [Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index(). at /var/www/inventory/vendor/doctrine/annotations/lib/Doctrine/Common/Annotations/AnnotationException.php:42)","command":"debug:router --format=json","message":"[Syntax Error] Expected Doctrine\\Common\\Annotations\\DocLexer::T_CLOSE_CURLY_BRACES, got ')' at position 49 in method App\\Controller\\BalanceController::index() in /var/www/inventory/config/routes/../../src/Controller/ (which is being imported from \"/var/www/inventory/config/routes/annotations.yaml\"). Make sure annotations are installed and enabled."} []
[2020-08-07T21:37:56.629719+02:00] console.DEBUG: Command "debug:router --format=json" exited with code "1" {"command":"debug:router --format=json","code":1} []
[2020-08-07T21:38:02.266233+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:38:02.269242+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:38:02.269325+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:38:02.269387+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:38:02.273830+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-08-07T21:38:02.284744+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "categories" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 18 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"categories\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:18)"} []
[2020-08-07T21:38:02.315343+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:38:02.432068+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"81cc9c"},"request_uri":"http://localhost:8000/_wdt/81cc9c","method":"GET"} []
[2020-08-07T21:38:04.865396+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:38:04.868134+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:38:04.868227+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:38:04.868275+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:38:04.872612+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-08-07T21:38:04.877944+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "categories" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 18 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"categories\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:18)"} []
[2020-08-07T21:38:04.908123+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:38:05.008416+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2f6a82"},"request_uri":"http://localhost:8000/_wdt/2f6a82","method":"GET"} []
[2020-08-07T21:38:20.087435+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:38:20.090598+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:38:20.090688+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:38:20.090749+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:38:20.095652+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-08-07T21:38:20.103416+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:38:20.380662+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cd36ef"},"request_uri":"http://localhost:8000/_wdt/cd36ef","method":"GET"} []
[2020-08-07T21:38:30.702309+02:00] request.INFO: Matched route "categories_show". {"route":"categories_show","route_parameters":{"_route":"categories_show","_controller":"App\\Controller\\CategoriesController::show","id":"1"},"request_uri":"http://localhost:8000/categories/1","method":"GET"} []
[2020-08-07T21:38:30.705855+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:38:30.705958+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:38:30.706020+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:38:30.710567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? ["1"] []
[2020-08-07T21:38:30.718800+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:38:30.953328+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"14cdcd"},"request_uri":"http://localhost:8000/_wdt/14cdcd","method":"GET"} []
[2020-08-07T21:38:32.713018+02:00] request.INFO: Matched route "categories_edit". {"route":"categories_edit","route_parameters":{"_route":"categories_edit","_controller":"App\\Controller\\CategoriesController::edit","id":"1"},"request_uri":"http://localhost:8000/categories/1/edit","method":"GET"} []
[2020-08-07T21:38:32.714639+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:38:32.714716+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:38:32.714756+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:38:32.717406+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? ["1"] []
[2020-08-07T21:38:32.840546+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:38:33.137619+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"57070a"},"request_uri":"http://localhost:8000/_wdt/57070a","method":"GET"} []
[2020-08-07T21:38:35.080670+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"14cdcd"},"request_uri":"http://localhost:8000/_wdt/14cdcd","method":"GET"} []
[2020-08-07T21:38:54.049708+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-08-07T21:38:54.053130+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:38:54.053237+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:38:54.053295+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:38:54.071195+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:38:54.072214+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:38:54.073197+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:38:54.079631+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:38:54.084304+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:38:54.095299+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:38:54.670321+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"772c16"},"request_uri":"http://localhost:8000/_wdt/772c16","method":"GET"} []
[2020-08-07T21:40:36.751644+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:40:36.754078+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:40:36.754145+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:40:36.754203+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:40:36.757715+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-08-07T21:40:36.770573+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "edit" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 21 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"edit\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:21)"} []
[2020-08-07T21:40:36.804123+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:40:36.920096+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"21e543"},"request_uri":"http://localhost:8000/_wdt/21e543","method":"GET"} []
[2020-08-07T21:41:36.548653+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:41:36.551351+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:41:36.551435+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:41:36.551513+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:41:36.555530+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-08-07T21:41:36.566358+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "edit" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 21 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"edit\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:21)"} []
[2020-08-07T21:41:36.600275+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:41:36.766370+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"610058"},"request_uri":"http://localhost:8000/_wdt/610058","method":"GET"} []
[2020-08-07T21:42:57.814424+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-08-07T21:42:57.816664+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:42:57.816731+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:42:57.816770+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:42:57.826283+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:42:57.827046+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:42:57.828265+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:42:57.832670+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:42:57.835400+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:42:57.847150+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:42:58.116430+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0afa53"},"request_uri":"http://localhost:8000/_wdt/0afa53","method":"GET"} []
[2020-08-07T21:43:21.211428+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:43:21.214448+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:43:21.214547+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:43:21.214608+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:43:21.219184+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-08-07T21:43:21.230532+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "edit" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 21 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"edit\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:21)"} []
[2020-08-07T21:43:21.266479+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:43:21.363876+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ac1cd7"},"request_uri":"http://localhost:8000/_wdt/ac1cd7","method":"GET"} []
[2020-08-07T21:43:54.509609+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:43:54.524080+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:43:54.524455+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:43:54.524808+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:43:54.540041+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-08-07T21:43:54.573159+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "edit" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 24 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"edit\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:24)"} []
[2020-08-07T21:43:54.631831+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:43:54.726824+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"69c3fa"},"request_uri":"http://localhost:8000/_wdt/69c3fa","method":"GET"} []
[2020-08-07T21:44:21.790212+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:44:21.792905+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:44:21.792979+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:44:21.793020+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:44:21.796486+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-08-07T21:44:21.808255+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "form" does not exist." at /var/www/inventory/templates/stock/_form.html.twig line 2 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"form\" does not exist. at /var/www/inventory/templates/stock/_form.html.twig:2)"} []
[2020-08-07T21:44:21.850452+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:44:21.942680+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f30329"},"request_uri":"http://localhost:8000/_wdt/f30329","method":"GET"} []
[2020-08-07T21:44:54.183294+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:44:54.186639+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:44:54.186754+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:44:54.186822+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:44:54.190742+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-08-07T21:44:54.195876+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "form" does not exist." at /var/www/inventory/templates/stock/_form.html.twig line 2 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"form\" does not exist. at /var/www/inventory/templates/stock/_form.html.twig:2)"} []
[2020-08-07T21:44:54.241037+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:44:54.336006+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c7e149"},"request_uri":"http://localhost:8000/_wdt/c7e149","method":"GET"} []
[2020-08-07T21:44:56.853255+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:44:56.855295+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:44:56.855391+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:44:56.855452+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:44:56.859319+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-08-07T21:44:56.863778+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "form" does not exist." at /var/www/inventory/templates/stock/_form.html.twig line 2 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"form\" does not exist. at /var/www/inventory/templates/stock/_form.html.twig:2)"} []
[2020-08-07T21:44:56.906562+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:44:57.007276+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f5fceb"},"request_uri":"http://localhost:8000/_wdt/f5fceb","method":"GET"} []
[2020-08-07T21:45:19.357187+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:45:19.360035+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:45:19.360105+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:45:19.360143+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:45:19.363762+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 [] []
[2020-08-07T21:45:19.369574+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "form" does not exist." at /var/www/inventory/templates/stock/_form.html.twig line 2 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"form\" does not exist. at /var/www/inventory/templates/stock/_form.html.twig:2)"} []
[2020-08-07T21:45:19.412430+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:45:19.516185+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b722b6"},"request_uri":"http://localhost:8000/_wdt/b722b6","method":"GET"} []
[2020-08-07T21:47:02.251055+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:47:02.253245+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:47:02.253310+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:47:02.253359+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:47:02.257020+02:00] php.CRITICAL: Uncaught Error: Class 'App\Controller\Stock' not found {"exception":"[object] (Error(code: 0): Class 'App\\Controller\\Stock' not found at /var/www/inventory/src/Controller/BalanceController.php:57)"} []
[2020-08-07T21:47:02.342452+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load class "Stock" from namespace "App\Controller". Did you forget a "use" statement for "App\Entity\Stock"?" at /var/www/inventory/src/Controller/BalanceController.php line 57 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load class \"Stock\" from namespace \"App\\Controller\".\nDid you forget a \"use\" statement for \"App\\Entity\\Stock\"? at /var/www/inventory/src/Controller/BalanceController.php:57)"} []
[2020-08-07T21:47:02.354610+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:47:02.446583+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc38c9"},"request_uri":"http://localhost:8000/_wdt/fc38c9","method":"GET"} []
[2020-08-07T21:47:24.166925+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:47:24.169332+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:47:24.169398+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:47:24.169454+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:47:24.180603+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:47:24.181245+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:47:24.181870+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:47:24.185840+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:47:24.188606+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:47:24.196809+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:47:24.455087+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"63fc11"},"request_uri":"http://localhost:8000/_wdt/63fc11","method":"GET"} []
[2020-08-07T21:48:18.310895+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:48:18.313456+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:48:18.313524+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:48:18.313591+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:48:18.323746+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:48:18.324466+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:48:18.325166+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:48:18.329818+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:48:18.333199+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:48:18.342860+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:48:18.685336+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6df8aa"},"request_uri":"http://localhost:8000/_wdt/6df8aa","method":"GET"} []
[2020-08-07T21:48:22.582376+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:48:22.584967+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:48:22.585050+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:48:22.585091+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:48:22.595321+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:48:22.596022+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:48:22.596698+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:48:22.601269+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:48:22.605480+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:48:22.613637+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:48:22.982377+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7cc6af"},"request_uri":"http://localhost:8000/_wdt/7cc6af","method":"GET"} []
[2020-08-07T21:48:51.636104+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:48:51.640663+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:48:51.640756+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:48:51.640801+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:48:51.650704+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:48:51.651444+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:48:51.652219+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:48:51.658283+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:48:51.661816+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:48:51.668975+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:48:51.934231+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5026ed"},"request_uri":"http://localhost:8000/_wdt/5026ed","method":"GET"} []
[2020-08-07T21:48:54.262088+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:48:54.264362+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:48:54.264442+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:48:54.264481+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:48:54.275153+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:48:54.275833+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:48:54.276511+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:48:54.280658+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:48:54.284025+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:48:54.292372+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:48:54.554263+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4e6b6d"},"request_uri":"http://localhost:8000/_wdt/4e6b6d","method":"GET"} []
[2020-08-07T21:49:24.731267+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:49:24.734734+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:49:24.734819+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:49:24.734894+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:49:24.747907+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:49:24.748661+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:49:24.749373+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:49:24.754119+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:49:24.757252+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:49:24.764926+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:49:25.041975+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3aa0f6"},"request_uri":"http://localhost:8000/_wdt/3aa0f6","method":"GET"} []
[2020-08-07T21:49:25.971279+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:49:25.973464+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:49:25.973547+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:49:25.973591+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:49:25.982741+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:49:25.983516+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:49:25.984109+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:49:25.989701+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:49:25.994288+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:49:26.001751+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:49:26.267842+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e381b7"},"request_uri":"http://localhost:8000/_wdt/e381b7","method":"GET"} []
[2020-08-07T21:50:19.496048+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:50:19.498183+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:50:19.498266+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:50:19.498324+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:50:19.508654+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:50:19.509331+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:50:19.509966+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:50:19.514075+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:50:19.517327+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:50:19.526647+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:50:19.870480+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dc241d"},"request_uri":"http://localhost:8000/_wdt/dc241d","method":"GET"} []
[2020-08-07T21:50:56.182426+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:50:56.185825+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:50:56.185930+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:50:56.185995+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:50:56.196903+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:50:56.197561+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:50:56.198491+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:50:56.203110+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:50:56.205902+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:50:56.214399+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:50:56.502125+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"13890f"},"request_uri":"http://localhost:8000/_wdt/13890f","method":"GET"} []
[2020-08-07T21:52:28.730125+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:52:28.733079+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:52:28.733152+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:52:28.733190+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:52:28.742804+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:52:28.743730+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:52:28.744719+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:52:28.750531+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:52:28.754500+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:52:28.771521+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:52:29.134229+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3ea789"},"request_uri":"http://localhost:8000/_wdt/3ea789","method":"GET"} []
[2020-08-07T21:52:52.597039+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:52:52.599556+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:52:52.599631+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:52:52.599688+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:52:52.610046+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:52:52.610814+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:52:52.611547+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:52:52.616315+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:52:52.619718+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:52:52.632824+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:52:52.885809+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bd2fcd"},"request_uri":"http://localhost:8000/_wdt/bd2fcd","method":"GET"} []
[2020-08-07T21:52:58.343090+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance?search=Dou","method":"GET"} []
[2020-08-07T21:52:58.346154+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:52:58.346235+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:52:58.346289+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:52:58.358715+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%Dou%' [] []
[2020-08-07T21:52:58.360505+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%Dou%' ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:52:58.362952+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE p1_.name LIKE '%Dou%' AND s0_.id IN (?) ORDER BY s0_.id DESC [[10,9]] []
[2020-08-07T21:52:58.367580+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:52:58.370348+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:52:58.376335+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:52:58.655360+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9348c0"},"request_uri":"http://localhost:8000/_wdt/9348c0","method":"GET"} []
[2020-08-07T21:53:02.389234+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance?search=","method":"GET"} []
[2020-08-07T21:53:02.391443+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:53:02.391525+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:02.391564+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:02.402407+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:53:02.403163+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:53:02.403822+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:53:02.407924+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:53:02.410644+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:53:02.417849+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:53:02.692192+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ae961"},"request_uri":"http://localhost:8000/_wdt/2ae961","method":"GET"} []
[2020-08-07T21:53:05.052758+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance?page=2&search=","method":"GET"} []
[2020-08-07T21:53:05.056027+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:53:05.056123+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:05.056184+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:05.068877+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:53:05.069607+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 OFFSET 5 [] []
[2020-08-07T21:53:05.070275+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[5,4,3,2,1]] []
[2020-08-07T21:53:05.074504+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:53:05.078233+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:53:05.086669+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:53:05.353328+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c16c1e"},"request_uri":"http://localhost:8000/_wdt/c16c1e","method":"GET"} []
[2020-08-07T21:53:08.399808+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance?page=1&search=","method":"GET"} []
[2020-08-07T21:53:08.402802+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:53:08.402877+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:08.402932+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:08.412921+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:53:08.413543+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:53:08.414167+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:53:08.419662+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:53:08.422439+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:53:08.428856+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:53:08.694449+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5b9388"},"request_uri":"http://localhost:8000/_wdt/5b9388","method":"GET"} []
[2020-08-07T21:53:10.218745+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance?page=2&search=","method":"GET"} []
[2020-08-07T21:53:10.220990+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:53:10.221095+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:10.221162+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:10.229789+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:53:10.230430+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 OFFSET 5 [] []
[2020-08-07T21:53:10.231013+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[5,4,3,2,1]] []
[2020-08-07T21:53:10.234605+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:53:10.237695+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:53:10.244838+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:53:10.512451+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fa35af"},"request_uri":"http://localhost:8000/_wdt/fa35af","method":"GET"} []
[2020-08-07T21:53:25.081642+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance?page=2&search=","method":"GET"} []
[2020-08-07T21:53:25.083924+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:53:25.084012+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:25.084070+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:25.094569+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:53:25.095392+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 25 OFFSET 25 [] []
[2020-08-07T21:53:25.097528+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:53:25.101349+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:53:25.107951+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:53:25.400122+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a991e5"},"request_uri":"http://localhost:8000/_wdt/a991e5","method":"GET"} []
[2020-08-07T21:53:29.959800+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:53:29.962525+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:53:29.962614+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:29.962676+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:29.973511+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:53:29.974187+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 25 [] []
[2020-08-07T21:53:29.975148+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7,5,4,3,2,1]] []
[2020-08-07T21:53:29.981433+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:53:29.985093+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:53:29.990626+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:53:30.255167+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"274450"},"request_uri":"http://localhost:8000/_wdt/274450","method":"GET"} []
[2020-08-07T21:53:50.976030+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:53:50.978658+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:53:50.978727+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:50.978770+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:50.990326+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:53:50.991321+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 10 [] []
[2020-08-07T21:53:50.992544+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7,5,4,3,2,1]] []
[2020-08-07T21:53:50.998155+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:53:51.002374+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:53:51.009479+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:53:51.264656+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"351f93"},"request_uri":"http://localhost:8000/_wdt/351f93","method":"GET"} []
[2020-08-07T21:53:53.400528+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:53:53.403716+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:53:53.403817+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:53.403874+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:53:53.415044+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:53:53.415785+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 10 [] []
[2020-08-07T21:53:53.416472+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7,5,4,3,2,1]] []
[2020-08-07T21:53:53.421398+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:53:53.425593+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:53:53.431810+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:53:53.696810+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6254ac"},"request_uri":"http://localhost:8000/_wdt/6254ac","method":"GET"} []
[2020-08-07T21:54:05.550721+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:54:05.553577+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:54:05.553656+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:54:05.553709+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:54:05.564131+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:54:05.564902+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 10 [] []
[2020-08-07T21:54:05.565788+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7,5,4,3,2,1]] []
[2020-08-07T21:54:05.571757+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:54:05.575354+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:54:05.579978+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:54:05.867265+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f2d028"},"request_uri":"http://localhost:8000/_wdt/f2d028","method":"GET"} []
[2020-08-07T21:54:07.796001+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: "No route found for "POST /balance": Method Not Allowed (Allow: GET)" at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException(code: 0): No route found for \"POST /balance\": Method Not Allowed (Allow: GET) at /var/www/inventory/vendor/symfony/http-kernel/EventListener/RouterListener.php:140)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException(code: 0):  at /var/www/inventory/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:42)"} []
[2020-08-07T21:54:07.917429+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"24f0d5"},"request_uri":"http://localhost:8000/_wdt/24f0d5","method":"GET"} []
[2020-08-07T21:54:09.753477+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:54:09.755989+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:54:09.756074+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:54:09.756124+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:54:09.765902+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:54:09.766720+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 10 [] []
[2020-08-07T21:54:09.767596+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7,5,4,3,2,1]] []
[2020-08-07T21:54:09.773381+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:54:09.776010+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:54:09.780829+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:54:10.032665+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5ccf35"},"request_uri":"http://localhost:8000/_wdt/5ccf35","method":"GET"} []
[2020-08-07T21:54:11.515877+02:00] request.INFO: Matched route "stock_show". {"route":"stock_show","route_parameters":{"_route":"stock_show","_controller":"App\\Controller\\StockController::show","id":"11"},"request_uri":"http://localhost:8000/stock/11","method":"GET"} []
[2020-08-07T21:54:11.522120+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:54:11.522387+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:54:11.522515+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:54:11.534387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? ["11"] []
[2020-08-07T21:54:11.561587+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:54:11.833242+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b2928a"},"request_uri":"http://localhost:8000/_wdt/b2928a","method":"GET"} []
[2020-08-07T21:54:18.716046+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-08-07T21:54:18.718685+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:54:18.718762+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:54:18.718822+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:54:18.730663+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:54:18.731329+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:54:18.731996+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:54:18.736121+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:54:18.739795+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:54:18.748429+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:54:19.033939+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ea2617"},"request_uri":"http://localhost:8000/_wdt/ea2617","method":"GET"} []
[2020-08-07T21:56:01.243433+02:00] request.INFO: Matched route "stock_index". {"route":"stock_index","route_parameters":{"_route":"stock_index","_controller":"App\\Controller\\StockController::index"},"request_uri":"http://localhost:8000/stock/","method":"GET"} []
[2020-08-07T21:56:01.247588+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:56:01.247695+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:56:01.247759+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:56:01.264132+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:56:01.265252+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 5 [] []
[2020-08-07T21:56:01.266529+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7]] []
[2020-08-07T21:56:01.273960+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:56:01.278467+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:56:01.287157+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:56:01.532956+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b84316"},"request_uri":"http://localhost:8000/_wdt/b84316","method":"GET"} []
[2020-08-07T21:56:14.159859+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:56:14.162607+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:56:14.162687+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:56:14.162739+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:56:14.172373+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:56:14.173185+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 10 [] []
[2020-08-07T21:56:14.174128+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7,5,4,3,2,1]] []
[2020-08-07T21:56:14.179875+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:56:14.182708+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:56:14.192828+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:56:14.454524+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eb0c4b"},"request_uri":"http://localhost:8000/_wdt/eb0c4b","method":"GET"} []
[2020-08-07T21:56:28.619187+02:00] request.INFO: Matched route "stock_show". {"route":"stock_show","route_parameters":{"_route":"stock_show","_controller":"App\\Controller\\StockController::show","id":"11"},"request_uri":"http://localhost:8000/stock/11","method":"GET"} []
[2020-08-07T21:56:28.622402+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:56:28.622483+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:56:28.622523+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:56:28.627193+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? ["11"] []
[2020-08-07T21:56:28.633710+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:56:28.901997+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b57e29"},"request_uri":"http://localhost:8000/_wdt/b57e29","method":"GET"} []
[2020-08-07T21:57:28.760071+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T21:57:28.762698+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:57:28.762776+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:57:28.762831+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:57:28.773242+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T21:57:28.774056+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 10 [] []
[2020-08-07T21:57:28.774808+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7,5,4,3,2,1]] []
[2020-08-07T21:57:28.780038+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T21:57:28.783559+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T21:57:28.790398+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:57:29.023640+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"90fb7e"},"request_uri":"http://localhost:8000/_wdt/90fb7e","method":"GET"} []
[2020-08-07T21:57:30.844878+02:00] request.INFO: Matched route "stock_show". {"route":"stock_show","route_parameters":{"_route":"stock_show","_controller":"App\\Controller\\StockController::show","id":"11"},"request_uri":"http://localhost:8000/stock/11","method":"GET"} []
[2020-08-07T21:57:30.850829+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T21:57:30.851016+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:57:30.851142+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T21:57:30.858766+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? ["11"] []
[2020-08-07T21:57:30.869675+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T21:57:31.127289+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2e8423"},"request_uri":"http://localhost:8000/_wdt/2e8423","method":"GET"} []
[2020-08-07T22:00:38.600868+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:00:38.603117+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:00:38.603182+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:00:38.603221+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:00:38.612641+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ [] []
[2020-08-07T22:00:38.613486+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.id AS id_1 FROM stock s0_ ORDER BY s0_.id DESC LIMIT 10 [] []
[2020-08-07T22:00:38.614208+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ WHERE s0_.id IN (?) ORDER BY s0_.id DESC [[11,10,9,8,7,5,4,3,2,1]] []
[2020-08-07T22:00:38.618474+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:00:38.621182+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:00:38.627676+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:00:38.890584+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a9d743"},"request_uri":"http://localhost:8000/_wdt/a9d743","method":"GET"} []
[2020-08-07T22:00:41.090098+02:00] request.INFO: Matched route "stock_show". {"route":"stock_show","route_parameters":{"_route":"stock_show","_controller":"App\\Controller\\StockController::show","id":"11"},"request_uri":"http://localhost:8000/stock/11","method":"GET"} []
[2020-08-07T22:00:41.092638+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:00:41.092733+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:00:41.092789+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:00:41.097905+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? ["11"] []
[2020-08-07T22:00:41.107185+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:00:41.382640+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"10da37"},"request_uri":"http://localhost:8000/_wdt/10da37","method":"GET"} []
[2020-08-07T22:08:08.539008+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:08:08.542362+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:08:08.542471+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:08:08.542532+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:08:08.556044+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:08:08.557542+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 10 [] []
[2020-08-07T22:08:08.559151+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:08:08.565732+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:08:08.570906+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:08:08.577422+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:08:08.873423+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e86455"},"request_uri":"http://localhost:8000/_wdt/e86455","method":"GET"} []
[2020-08-07T22:08:41.768055+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:08:41.770279+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:08:41.770350+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:08:41.770412+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:08:41.779483+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id [] []
[2020-08-07T22:08:41.780857+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id ORDER BY s0_.date ASC LIMIT 10 [] []
[2020-08-07T22:08:41.782035+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) ORDER BY s0_.date ASC [[2,3,4,5,7,8,9,1,10,11]] []
[2020-08-07T22:08:41.788033+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:08:41.791473+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:08:41.796310+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:08:42.041387+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"566cd6"},"request_uri":"http://localhost:8000/_wdt/566cd6","method":"GET"} []
[2020-08-07T22:08:58.494806+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:08:58.497292+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:08:58.497357+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:08:58.497412+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:08:58.508293+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id [] []
[2020-08-07T22:08:58.509005+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:08:58.510189+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) ORDER BY s0_.date ASC [[2,3,4,5,7,8,9,1,10,11]] []
[2020-08-07T22:08:58.515387+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:08:58.518736+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:08:58.526099+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:08:58.767376+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b65a1f"},"request_uri":"http://localhost:8000/_wdt/b65a1f","method":"GET"} []
[2020-08-07T22:09:00.914438+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:09:00.916227+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:09:00.916318+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:09:00.916379+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:09:00.925036+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id [] []
[2020-08-07T22:09:00.925655+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:09:00.926540+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) ORDER BY s0_.date ASC [[2,3,4,5,7,8,9,1,10,11]] []
[2020-08-07T22:09:00.931360+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:09:00.935074+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:09:00.940143+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:09:01.218045+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bf7032"},"request_uri":"http://localhost:8000/_wdt/bf7032","method":"GET"} []
[2020-08-07T22:10:27.004511+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:10:27.009900+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:10:27.010094+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:10:27.010214+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:10:27.034173+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:10:27.035612+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:10:27.037473+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:10:27.043538+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:10:27.048702+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:10:27.053656+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:10:27.291134+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d6cd1f"},"request_uri":"http://localhost:8000/_wdt/d6cd1f","method":"GET"} []
[2020-08-07T22:13:52.846482+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:13:52.848989+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:13:52.849062+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:13:52.849105+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:13:52.860670+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:13:52.862629+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:13:52.863630+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:13:52.865958+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:13:52.869171+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:13:52.872991+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Key "product" for array with keys "quantity" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 77 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Key \"product\" for array with keys \"quantity\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:77)"} []
[2020-08-07T22:13:52.909736+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:13:53.031261+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c4c20b"},"request_uri":"http://localhost:8000/_wdt/c4c20b","method":"GET"} []
[2020-08-07T22:15:41.713495+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:15:41.717813+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:15:41.717922+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:15:41.717986+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:15:41.734600+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:15:41.735814+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:15:41.737029+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:15:41.740495+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:15:41.745258+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:15:41.758104+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Key "id" for array with keys "quantity, product" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 85 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Key \"id\" for array with keys \"quantity, product\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:85)"} []
[2020-08-07T22:15:41.811509+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:15:41.920405+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"92882d"},"request_uri":"http://localhost:8000/_wdt/92882d","method":"GET"} []
[2020-08-07T22:16:04.454809+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:16:04.457593+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:16:04.457705+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:16:04.457767+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:16:04.469598+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:16:04.470703+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:16:04.471719+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:16:04.474100+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:16:04.478531+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:16:04.483707+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Key "id" for array with keys "quantity, product, sid" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 85 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Key \"id\" for array with keys \"quantity, product, sid\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:85)"} []
[2020-08-07T22:16:04.519900+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:16:04.632174+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0e3f1c"},"request_uri":"http://localhost:8000/_wdt/0e3f1c","method":"GET"} []
[2020-08-07T22:16:18.771883+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:16:18.774356+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:16:18.774431+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:16:18.774474+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:16:18.788042+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Syntax Error] line 0, col 68: Error: Expected Doctrine\ORM\Query\Lexer::T_FROM, got '.'" at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 54 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Syntax Error] line 0, col 68: Error: Expected Doctrine\\ORM\\Query\\Lexer::T_FROM, got '.' at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:54)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT sum(s.quantity) as quantity, p.name as product, s.id as stock.id FROM App\\Entity\\Stock s INNER JOIN s.product p GROUP BY p.id ORDER BY s.date asc at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)"} []
[2020-08-07T22:16:19.013812+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:16:19.139090+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f3b87f"},"request_uri":"http://localhost:8000/_wdt/f3b87f","method":"GET"} []
[2020-08-07T22:16:32.667437+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:16:32.669940+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:16:32.670044+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:16:32.670115+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:16:32.682213+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Syntax Error] line 0, col 68: Error: Expected Doctrine\ORM\Query\Lexer::T_FROM, got '.'" at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 54 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Syntax Error] line 0, col 68: Error: Expected Doctrine\\ORM\\Query\\Lexer::T_FROM, got '.' at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:54)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT sum(s.quantity) as quantity, p.name as product, s.id as stock.id FROM App\\Entity\\Stock s INNER JOIN s.product p GROUP BY p.id ORDER BY s.date asc at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)"} []
[2020-08-07T22:16:32.907499+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:16:33.032102+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"15d2d3"},"request_uri":"http://localhost:8000/_wdt/15d2d3","method":"GET"} []
[2020-08-07T22:16:52.235548+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:16:52.237663+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:16:52.237741+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:16:52.237808+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:16:52.248437+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:16:52.249402+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:16:52.250486+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:16:52.254776+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:16:52.257563+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:16:52.262418+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:16:52.557108+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dc1800"},"request_uri":"http://localhost:8000/_wdt/dc1800","method":"GET"} []
[2020-08-07T22:18:15.744359+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:18:15.747269+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:18:15.747349+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:18:15.747393+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:18:15.758516+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:18:15.759824+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:18:15.761008+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:18:15.763883+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:18:15.767235+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:18:15.771180+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Key "product" for array with keys "quantity" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 77 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Key \"product\" for array with keys \"quantity\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:77)"} []
[2020-08-07T22:18:15.810126+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:18:15.937372+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"802474"},"request_uri":"http://localhost:8000/_wdt/802474","method":"GET"} []
[2020-08-07T22:20:16.418630+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:20:16.420967+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:20:16.421039+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:20:16.421082+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:20:16.430754+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T22:20:16.434375+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\NonUniqueResultException: "The query returned multiple rows. Change the query or use a different result function like getScalarResult()." at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Internal/Hydration/SingleScalarHydrator.php line 47 {"exception":"[object] (Doctrine\\ORM\\NonUniqueResultException(code: 0): The query returned multiple rows. Change the query or use a different result function like getScalarResult(). at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Internal/Hydration/SingleScalarHydrator.php:47)"} []
[2020-08-07T22:20:16.462326+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:20:16.568158+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b9acfb"},"request_uri":"http://localhost:8000/_wdt/b9acfb","method":"GET"} []
[2020-08-07T22:20:32.554512+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:20:32.558805+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:20:32.558941+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:20:32.559021+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:20:32.577453+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T22:20:32.584111+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:20:32.591892+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:20:32.599483+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Key "product" for array with keys "quantity" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 77 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Key \"product\" for array with keys \"quantity\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:77)"} []
[2020-08-07T22:20:32.649371+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:20:32.758333+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"768d7e"},"request_uri":"http://localhost:8000/_wdt/768d7e","method":"GET"} []
[2020-08-07T22:20:45.679018+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:20:45.683414+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:20:45.683530+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:20:45.683601+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:20:45.695015+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T22:20:45.698770+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:20:45.703741+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:20:45.707788+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Key "product" for array with keys "quantityx" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 77 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Key \"product\" for array with keys \"quantityx\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:77)"} []
[2020-08-07T22:20:45.743914+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:20:45.854735+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d2ea71"},"request_uri":"http://localhost:8000/_wdt/d2ea71","method":"GET"} []
[2020-08-07T22:20:57.717479+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:20:57.722154+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:20:57.722289+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:20:57.722372+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:20:57.741351+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T22:20:57.746752+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:20:57.751425+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:20:57.756223+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Key "product" for array with keys "quantity" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 77 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Key \"product\" for array with keys \"quantity\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:77)"} []
[2020-08-07T22:20:57.793473+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:20:57.903230+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9cbd2d"},"request_uri":"http://localhost:8000/_wdt/9cbd2d","method":"GET"} []
[2020-08-07T22:21:10.804570+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:21:10.809147+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:21:10.809264+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:21:10.809334+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:21:10.823672+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T22:21:10.828611+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:21:10.834142+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:21:10.848203+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Key "id" for array with keys "quantity" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 85 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Key \"id\" for array with keys \"quantity\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:85)"} []
[2020-08-07T22:21:10.894306+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:21:11.008890+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0adcaf"},"request_uri":"http://localhost:8000/_wdt/0adcaf","method":"GET"} []
[2020-08-07T22:21:23.352481+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:21:23.360187+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:21:23.360381+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:21:23.360498+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:21:23.380638+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T22:21:23.386617+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:21:23.393213+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:21:23.408848+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Key "id" for array with keys "quantity" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 89 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Key \"id\" for array with keys \"quantity\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:89)"} []
[2020-08-07T22:21:23.452978+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:21:23.613407+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"16f11f"},"request_uri":"http://localhost:8000/_wdt/16f11f","method":"GET"} []
[2020-08-07T22:21:36.579013+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:21:36.582769+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:21:36.582908+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:21:36.582985+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:21:36.593722+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T22:21:36.597049+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:21:36.601592+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:21:36.610245+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:21:36.910567+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c1b4b5"},"request_uri":"http://localhost:8000/_wdt/c1b4b5","method":"GET"} []
[2020-08-07T22:24:18.488304+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:24:18.491697+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:24:18.492229+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:24:18.492344+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:24:18.505254+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T22:24:18.507406+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\NonUniqueResultException: "More than one result was found for query although one row or none was expected." at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/AbstractQuery.php line 803 {"exception":"[object] (Doctrine\\ORM\\NonUniqueResultException(code: 0): More than one result was found for query although one row or none was expected. at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/AbstractQuery.php:803)"} []
[2020-08-07T22:24:18.525632+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:24:18.629927+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"93b114"},"request_uri":"http://localhost:8000/_wdt/93b114","method":"GET"} []
[2020-08-07T22:24:41.812748+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:24:41.817384+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:24:41.817530+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:24:41.817663+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:24:41.839614+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:24:41.841621+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:24:41.843724+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:24:41.848799+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:24:41.857334+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:24:41.868210+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:24:42.178522+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b2eaed"},"request_uri":"http://localhost:8000/_wdt/b2eaed","method":"GET"} []
[2020-08-07T22:24:57.576083+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:24:57.581556+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:24:57.581704+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:24:57.581798+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:24:57.598481+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:24:57.599707+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:24:57.600717+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:24:57.602941+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:24:57.607306+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:24:57.618701+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:24:57.961945+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"743acd"},"request_uri":"http://localhost:8000/_wdt/743acd","method":"GET"} []
[2020-08-07T22:26:00.750359+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:26:00.753088+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:26:00.753164+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:26:00.753238+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:26:00.766825+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Syntax Error] line 0, col 35: Error: Expected Doctrine\ORM\Query\Lexer::T_FROM, got 'group'" at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 54 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Syntax Error] line 0, col 35: Error: Expected Doctrine\\ORM\\Query\\Lexer::T_FROM, got 'group' at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:54)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT sum(s.quantity) as quantity group by p.id FROM App\\Entity\\Stock s INNER JOIN s.product p GROUP BY p.id ORDER BY s.date asc at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)"} []
[2020-08-07T22:26:00.993770+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:26:01.113810+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"04b1fa"},"request_uri":"http://localhost:8000/_wdt/04b1fa","method":"GET"} []
[2020-08-07T22:26:10.138050+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:26:10.142647+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:26:10.142784+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:26:10.142904+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:26:10.158614+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:26:10.159696+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:26:10.160958+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:26:10.163287+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:26:10.167092+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:26:10.174131+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:26:10.485900+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2043ed"},"request_uri":"http://localhost:8000/_wdt/2043ed","method":"GET"} []
[2020-08-07T22:27:17.609036+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:27:17.612287+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:27:17.612407+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:27:17.612473+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:27:17.630384+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Syntax Error] line 0, col 68: Error: Expected Doctrine\ORM\Query\Lexer::T_FROM, got '.'" at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 54 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Syntax Error] line 0, col 68: Error: Expected Doctrine\\ORM\\Query\\Lexer::T_FROM, got '.' at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:54)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT sum(s.quantity) as quantity, p.name as product, s.id as stock.id FROM App\\Entity\\Stock s INNER JOIN s.product p GROUP BY p.id ORDER BY s.date asc at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)"} []
[2020-08-07T22:27:17.946660+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:27:18.066847+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b26470"},"request_uri":"http://localhost:8000/_wdt/b26470","method":"GET"} []
[2020-08-07T22:27:52.784228+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:27:52.788962+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:27:52.789053+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:27:52.789113+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:27:52.805452+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Syntax Error] line 0, col 68: Error: Expected Doctrine\ORM\Query\Lexer::T_FROM, got '.'" at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 54 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Syntax Error] line 0, col 68: Error: Expected Doctrine\\ORM\\Query\\Lexer::T_FROM, got '.' at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:54)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT sum(s.quantity) as quantity, p.name as product, s.id as stock.id FROM App\\Entity\\Stock s INNER JOIN s.product p GROUP BY p.id ORDER BY s.date asc at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)"} []
[2020-08-07T22:27:53.044165+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:27:53.162795+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6c730f"},"request_uri":"http://localhost:8000/_wdt/6c730f","method":"GET"} []
[2020-08-07T22:28:16.281808+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:28:16.284725+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:28:16.284811+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:28:16.284880+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:28:16.301160+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Syntax Error] line 0, col 68: Error: Expected Doctrine\ORM\Query\Lexer::T_FROM, got '.'" at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 54 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Syntax Error] line 0, col 68: Error: Expected Doctrine\\ORM\\Query\\Lexer::T_FROM, got '.' at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:54)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT sum(s.quantity) as quantity, p.name as product, s.id as stock.id FROM App\\Entity\\Stock s INNER JOIN s.product p GROUP BY p.id ORDER BY s.date asc at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)"} []
[2020-08-07T22:28:16.568674+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:28:16.735759+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b3dc4c"},"request_uri":"http://localhost:8000/_wdt/b3dc4c","method":"GET"} []
[2020-08-07T22:28:18.152815+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:28:18.154435+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:28:18.154505+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:28:18.154547+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:28:18.165331+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Syntax Error] line 0, col 68: Error: Expected Doctrine\ORM\Query\Lexer::T_FROM, got '.'" at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 54 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Syntax Error] line 0, col 68: Error: Expected Doctrine\\ORM\\Query\\Lexer::T_FROM, got '.' at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:54)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT sum(s.quantity) as quantity, p.name as product, s.id as stock.id FROM App\\Entity\\Stock s INNER JOIN s.product p GROUP BY p.id ORDER BY s.date asc at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)"} []
[2020-08-07T22:28:18.397187+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:28:18.515542+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2e3973"},"request_uri":"http://localhost:8000/_wdt/2e3973","method":"GET"} []
[2020-08-07T22:28:33.838780+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:28:33.841661+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:28:33.841757+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:28:33.841841+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:28:33.856828+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:28:33.857715+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:28:33.858631+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:28:33.866117+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:28:33.871695+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:28:33.882801+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:28:34.265255+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ab5f0c"},"request_uri":"http://localhost:8000/_wdt/ab5f0c","method":"GET"} []
[2020-08-07T22:28:54.373196+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:28:54.376272+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:28:54.376352+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:28:54.376396+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:28:54.388329+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Syntax Error] line 0, col 67: Error: Expected Doctrine\ORM\Query\Lexer::T_FROM, got '.'" at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 54 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Syntax Error] line 0, col 67: Error: Expected Doctrine\\ORM\\Query\\Lexer::T_FROM, got '.' at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:54)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT sum(s.quantity) as quantity,p.name as product, s.id as stock.id FROM App\\Entity\\Stock s INNER JOIN s.product p GROUP BY p.id ORDER BY s.date asc at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)"} []
[2020-08-07T22:28:54.615259+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:28:54.742725+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"83128b"},"request_uri":"http://localhost:8000/_wdt/83128b","method":"GET"} []
[2020-08-07T22:29:04.293165+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:29:04.295359+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:29:04.295444+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:29:04.295511+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:29:04.306026+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:29:04.307616+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:29:04.308761+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:29:04.311009+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:29:04.315522+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:29:04.321761+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:29:04.791090+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b37a21"},"request_uri":"http://localhost:8000/_wdt/b37a21","method":"GET"} []
[2020-08-07T22:29:49.871417+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:29:49.874378+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:29:49.874466+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:29:49.874535+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:29:49.887139+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:29:49.888275+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:29:49.889304+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:29:49.891416+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:29:49.896068+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:29:49.907569+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:29:50.209480+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"40657c"},"request_uri":"http://localhost:8000/_wdt/40657c","method":"GET"} []
[2020-08-07T22:30:00.967987+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:30:00.970324+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:30:00.970416+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:30:00.970459+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:30:00.981964+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:30:00.982895+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:30:00.983814+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:30:00.985756+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:30:00.989257+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:30:01.000340+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:30:01.301807+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6a61a0"},"request_uri":"http://localhost:8000/_wdt/6a61a0","method":"GET"} []
[2020-08-07T22:30:23.278407+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:30:23.281797+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:30:23.281906+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:30:23.281976+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:30:23.293637+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:30:23.294570+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:30:23.295389+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:30:23.297643+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:30:23.301862+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:30:23.311967+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Key "id" for array with keys "quantity, product, sid" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 87 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Key \"id\" for array with keys \"quantity, product, sid\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:87)"} []
[2020-08-07T22:30:23.349347+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:30:23.458442+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"435263"},"request_uri":"http://localhost:8000/_wdt/435263","method":"GET"} []
[2020-08-07T22:30:40.341694+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:30:40.345458+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:30:40.345560+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:30:40.345627+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:30:40.358787+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:30:40.359920+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:30:40.361289+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:30:40.364703+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:30:40.368055+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:30:40.375406+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:30:40.713490+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"25ed19"},"request_uri":"http://localhost:8000/_wdt/25ed19","method":"GET"} []
[2020-08-07T22:31:09.340457+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:31:09.343103+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:31:09.343182+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:31:09.343245+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:31:09.355326+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:31:09.356446+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:31:09.357497+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:31:09.359707+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:31:09.363862+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:31:09.375390+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:31:09.664299+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f2d961"},"request_uri":"http://localhost:8000/_wdt/f2d961","method":"GET"} []
[2020-08-07T22:31:29.201751+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:31:29.204394+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:31:29.204475+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:31:29.204538+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:31:29.216480+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:31:29.217586+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:31:29.218585+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:31:29.220721+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:31:29.225360+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:31:29.237351+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:31:29.517912+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3687f2"},"request_uri":"http://localhost:8000/_wdt/3687f2","method":"GET"} []
[2020-08-07T22:32:45.211798+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:32:45.216363+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:32:45.216493+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:32:45.216570+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:32:45.227812+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:32:45.228961+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:32:45.230090+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:32:45.232929+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:32:45.236388+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:32:45.242867+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:32:45.549275+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"585fe0"},"request_uri":"http://localhost:8000/_wdt/585fe0","method":"GET"} []
[2020-08-07T22:32:47.616049+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:32:47.618436+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:32:47.618572+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:32:47.618682+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:32:47.631858+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:32:47.633098+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:32:47.634193+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:32:47.637795+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:32:47.643297+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:32:47.652297+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:32:47.955614+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6cd257"},"request_uri":"http://localhost:8000/_wdt/6cd257","method":"GET"} []
[2020-08-07T22:33:01.776999+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:33:01.779613+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:33:01.779693+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:33:01.779755+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:33:01.793693+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:33:01.794666+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:33:01.795543+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:33:01.797474+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:33:01.800622+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:33:01.810790+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:33:02.095508+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f0f672"},"request_uri":"http://localhost:8000/_wdt/f0f672","method":"GET"} []
[2020-08-07T22:33:29.041348+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:33:29.044458+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:33:29.044548+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:33:29.044638+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:33:29.055899+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:33:29.056956+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:33:29.058027+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:33:29.060446+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:33:29.064967+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:33:29.070283+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:33:29.359866+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0aa762"},"request_uri":"http://localhost:8000/_wdt/0aa762","method":"GET"} []
[2020-08-07T22:33:37.842020+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:33:37.855048+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:33:37.855507+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:33:37.855838+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:33:37.886246+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:33:37.887345+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:33:37.888529+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:33:37.894968+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:33:37.898492+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:33:37.903941+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:33:38.201660+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6dc68d"},"request_uri":"http://localhost:8000/_wdt/6dc68d","method":"GET"} []
[2020-08-07T22:33:41.199365+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:33:41.203347+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:33:41.203453+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:33:41.203545+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:33:41.216770+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:33:41.217763+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:33:41.218811+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:33:41.224479+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:33:41.228290+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:33:41.233447+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:33:41.513924+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"39d9f1"},"request_uri":"http://localhost:8000/_wdt/39d9f1","method":"GET"} []
[2020-08-07T22:34:01.693237+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:34:01.699765+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:34:01.699979+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:34:01.700112+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:34:01.721461+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id [] []
[2020-08-07T22:34:01.722490+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:34:01.723776+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.quantity AS quantity_1, s0_.date AS date_2, s0_.product_id AS product_id_3, s0_.store_id AS store_id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) ORDER BY s0_.date ASC [[2,3,4,5,7,8,9,1,10,11]] []
[2020-08-07T22:34:01.729996+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:34:01.734022+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:34:01.739857+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:34:02.032664+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4a4e80"},"request_uri":"http://localhost:8000/_wdt/4a4e80","method":"GET"} []
[2020-08-07T22:36:04.968080+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:36:04.971288+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:36:04.971726+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:36:04.971828+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:36:04.983368+02:00] doctrine.DEBUG: SELECT count(DISTINCT s0_.id) AS sclr_0 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id [] []
[2020-08-07T22:36:04.984538+02:00] doctrine.DEBUG: SELECT DISTINCT s0_.id AS id_0, s0_.date AS date_1 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC LIMIT 100 [] []
[2020-08-07T22:36:04.985499+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id WHERE s0_.id IN (?) GROUP BY p1_.id ORDER BY s0_.date ASC [[2,9,1]] []
[2020-08-07T22:36:04.987576+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:36:04.992454+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:36:04.997259+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:36:05.269615+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a8b50e"},"request_uri":"http://localhost:8000/_wdt/a8b50e","method":"GET"} []
[2020-08-07T22:36:57.276812+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:36:57.280408+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:36:57.280518+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:36:57.280582+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:36:57.292396+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T22:36:57.296112+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:36:57.299973+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:36:57.305275+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:36:57.581705+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d59a84"},"request_uri":"http://localhost:8000/_wdt/d59a84","method":"GET"} []
[2020-08-07T22:37:51.731379+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:37:51.736380+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:37:51.736520+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:37:51.736637+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:37:51.751344+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, s0_.id AS id_2 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T22:37:51.755365+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6 FROM product p0_ [] []
[2020-08-07T22:37:51.759909+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:37:51.765054+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:37:52.040578+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c7e4a0"},"request_uri":"http://localhost:8000/_wdt/c7e4a0","method":"GET"} []
[2020-08-07T22:41:08.070297+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-07T22:41:08.072881+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.074589+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.075182+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.075598+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-08-07T22:41:08.075981+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.076640+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.077183+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.077624+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-08-07T22:41:08.077993+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.078533+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.078941+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.079255+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-08-07T22:41:08.079643+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.080243+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.080710+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.081042+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-08-07T22:41:08.081355+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.081916+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.082346+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.082695+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-08-07T22:41:08.083014+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.083571+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.084048+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.084463+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-08-07T22:41:08.084773+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.085590+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.086139+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.086573+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-08-07T22:41:08.086873+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.087608+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.088130+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.088570+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-08-07T22:41:08.088875+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.089456+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.089890+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.090184+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-08-07T22:41:08.090467+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.091004+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.091512+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.091933+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-08-07T22:41:08.092287+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.092896+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.093326+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.093631+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-08-07T22:41:08.093917+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.094428+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.094914+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.095292+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-08-07T22:41:08.095621+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.096309+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.096862+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.097303+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-07T22:41:08.097619+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.098195+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.098651+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.098945+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-08-07T22:41:08.102746+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-07T22:41:08.103395+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.104046+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.104492+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.104885+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-08-07T22:41:08.105221+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.105733+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.106210+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.106543+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-08-07T22:41:08.106826+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.107346+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.107758+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.108060+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-08-07T22:41:08.108341+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.108871+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.109224+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.109566+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-08-07T22:41:08.109858+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.110441+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.110838+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.111128+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-08-07T22:41:08.111405+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.112040+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.112510+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.113830+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-08-07T22:41:08.114203+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.114807+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.115299+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.115717+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-08-07T22:41:08.116047+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.119255+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.119932+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.120384+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-08-07T22:41:08.120711+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.121276+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.121673+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.122001+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-08-07T22:41:08.122284+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.122827+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.123330+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.123771+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-08-07T22:41:08.124334+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.125229+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.125751+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.126134+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-08-07T22:41:08.126570+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.127650+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.128270+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.128674+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-08-07T22:41:08.129473+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.130955+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.131562+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.132075+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-07T22:41:08.132525+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:41:08.135112+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:41:08.136299+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:41:08.136647+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-08-07T22:41:08.138041+02:00] doctrine.DEBUG: CREATE TABLE unit_of_measure (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-07T22:42:01.037268+02:00] request.INFO: Matched route "unit_of_measure_index". {"route":"unit_of_measure_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/unitofmeasure/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"unit_of_measure_index"},"request_uri":"http://localhost:8000/unitofmeasure","method":"GET"} []
[2020-08-07T22:42:01.038101+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:01.038192+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:01.038260+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:01.065082+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:01.097814+02:00] request.INFO: Matched route "unit_of_measure_index". {"route":"unit_of_measure_index","route_parameters":{"_route":"unit_of_measure_index","_controller":"App\\Controller\\UnitOfMeasureController::index"},"request_uri":"http://localhost:8000/unitofmeasure/","method":"GET"} []
[2020-08-07T22:42:01.100355+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:01.100459+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:01.100546+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:01.107319+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 [] []
[2020-08-07T22:42:01.120660+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:01.699040+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dae718"},"request_uri":"http://localhost:8000/_wdt/dae718","method":"GET"} []
[2020-08-07T22:42:03.598811+02:00] request.INFO: Matched route "unit_of_measure_new". {"route":"unit_of_measure_new","route_parameters":{"_route":"unit_of_measure_new","_controller":"App\\Controller\\UnitOfMeasureController::new"},"request_uri":"http://localhost:8000/unitofmeasure/new","method":"GET"} []
[2020-08-07T22:42:03.601266+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:03.601339+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:03.601383+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:03.623248+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:03.926387+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3a1897"},"request_uri":"http://localhost:8000/_wdt/3a1897","method":"GET"} []
[2020-08-07T22:42:09.464123+02:00] request.INFO: Matched route "unit_of_measure_new". {"route":"unit_of_measure_new","route_parameters":{"_route":"unit_of_measure_new","_controller":"App\\Controller\\UnitOfMeasureController::new"},"request_uri":"http://localhost:8000/unitofmeasure/new","method":"POST"} []
[2020-08-07T22:42:09.468543+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:09.468628+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:09.468687+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:09.468906+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:09.490254+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T22:42:09.491801+02:00] doctrine.DEBUG: INSERT INTO unit_of_measure (name) VALUES (?) {"1":"Kg"} []
[2020-08-07T22:42:09.492211+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T22:42:09.560128+02:00] request.INFO: Matched route "unit_of_measure_index". {"route":"unit_of_measure_index","route_parameters":{"_route":"unit_of_measure_index","_controller":"App\\Controller\\UnitOfMeasureController::index"},"request_uri":"http://localhost:8000/unitofmeasure/","method":"GET"} []
[2020-08-07T22:42:09.561801+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:09.561911+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:09.561985+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:09.565385+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 [] []
[2020-08-07T22:42:09.570097+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:09.899417+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"30cfb4"},"request_uri":"http://localhost:8000/_wdt/30cfb4","method":"GET"} []
[2020-08-07T22:42:11.077848+02:00] request.INFO: Matched route "unit_of_measure_new". {"route":"unit_of_measure_new","route_parameters":{"_route":"unit_of_measure_new","_controller":"App\\Controller\\UnitOfMeasureController::new"},"request_uri":"http://localhost:8000/unitofmeasure/new","method":"GET"} []
[2020-08-07T22:42:11.079483+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:11.079553+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:11.079597+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:11.091745+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:11.384232+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c5ec7a"},"request_uri":"http://localhost:8000/_wdt/c5ec7a","method":"GET"} []
[2020-08-07T22:42:31.699769+02:00] request.INFO: Matched route "unit_of_measure_new". {"route":"unit_of_measure_new","route_parameters":{"_route":"unit_of_measure_new","_controller":"App\\Controller\\UnitOfMeasureController::new"},"request_uri":"http://localhost:8000/unitofmeasure/new","method":"POST"} []
[2020-08-07T22:42:31.702896+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:31.702994+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:31.703055+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:31.703264+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:31.725718+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T22:42:31.726624+02:00] doctrine.DEBUG: INSERT INTO unit_of_measure (name) VALUES (?) {"1":"Pcs"} []
[2020-08-07T22:42:31.727127+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T22:42:31.910071+02:00] request.INFO: Matched route "unit_of_measure_index". {"route":"unit_of_measure_index","route_parameters":{"_route":"unit_of_measure_index","_controller":"App\\Controller\\UnitOfMeasureController::index"},"request_uri":"http://localhost:8000/unitofmeasure/","method":"GET"} []
[2020-08-07T22:42:31.912244+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:31.912325+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:31.912375+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:31.916382+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 [] []
[2020-08-07T22:42:31.921054+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:32.234352+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"070319"},"request_uri":"http://localhost:8000/_wdt/070319","method":"GET"} []
[2020-08-07T22:42:33.484820+02:00] request.INFO: Matched route "unit_of_measure_new". {"route":"unit_of_measure_new","route_parameters":{"_route":"unit_of_measure_new","_controller":"App\\Controller\\UnitOfMeasureController::new"},"request_uri":"http://localhost:8000/unitofmeasure/new","method":"GET"} []
[2020-08-07T22:42:33.486535+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:33.486605+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:33.486648+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:33.498557+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:33.795809+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"552f7e"},"request_uri":"http://localhost:8000/_wdt/552f7e","method":"GET"} []
[2020-08-07T22:42:41.180834+02:00] request.INFO: Matched route "unit_of_measure_new". {"route":"unit_of_measure_new","route_parameters":{"_route":"unit_of_measure_new","_controller":"App\\Controller\\UnitOfMeasureController::new"},"request_uri":"http://localhost:8000/unitofmeasure/new","method":"POST"} []
[2020-08-07T22:42:41.188506+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:41.188722+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:41.188876+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:41.189391+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:41.213454+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T22:42:41.213976+02:00] doctrine.DEBUG: INSERT INTO unit_of_measure (name) VALUES (?) {"1":"L"} []
[2020-08-07T22:42:41.214325+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T22:42:41.273913+02:00] request.INFO: Matched route "unit_of_measure_index". {"route":"unit_of_measure_index","route_parameters":{"_route":"unit_of_measure_index","_controller":"App\\Controller\\UnitOfMeasureController::index"},"request_uri":"http://localhost:8000/unitofmeasure/","method":"GET"} []
[2020-08-07T22:42:41.275970+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:41.276051+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:41.276094+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:41.279350+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 [] []
[2020-08-07T22:42:41.285730+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:41.599367+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f82b2"},"request_uri":"http://localhost:8000/_wdt/8f82b2","method":"GET"} []
[2020-08-07T22:42:50.143904+02:00] request.INFO: Matched route "unit_of_measure_new". {"route":"unit_of_measure_new","route_parameters":{"_route":"unit_of_measure_new","_controller":"App\\Controller\\UnitOfMeasureController::new"},"request_uri":"http://localhost:8000/unitofmeasure/new","method":"GET"} []
[2020-08-07T22:42:50.146913+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:50.147030+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:50.147102+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:50.161926+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:50.442444+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"707c6f"},"request_uri":"http://localhost:8000/_wdt/707c6f","method":"GET"} []
[2020-08-07T22:42:54.858084+02:00] request.INFO: Matched route "unit_of_measure_new". {"route":"unit_of_measure_new","route_parameters":{"_route":"unit_of_measure_new","_controller":"App\\Controller\\UnitOfMeasureController::new"},"request_uri":"http://localhost:8000/unitofmeasure/new","method":"POST"} []
[2020-08-07T22:42:54.860883+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:54.860989+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:54.861057+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:54.861293+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:54.876743+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T22:42:54.877317+02:00] doctrine.DEBUG: INSERT INTO unit_of_measure (name) VALUES (?) {"1":"meter"} []
[2020-08-07T22:42:54.877924+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T22:42:55.055911+02:00] request.INFO: Matched route "unit_of_measure_index". {"route":"unit_of_measure_index","route_parameters":{"_route":"unit_of_measure_index","_controller":"App\\Controller\\UnitOfMeasureController::index"},"request_uri":"http://localhost:8000/unitofmeasure/","method":"GET"} []
[2020-08-07T22:42:55.058275+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:55.058350+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:55.058393+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:55.061834+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 [] []
[2020-08-07T22:42:55.075167+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:55.378601+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"687585"},"request_uri":"http://localhost:8000/_wdt/687585","method":"GET"} []
[2020-08-07T22:42:58.531274+02:00] request.INFO: Matched route "unit_of_measure_edit". {"route":"unit_of_measure_edit","route_parameters":{"_route":"unit_of_measure_edit","_controller":"App\\Controller\\UnitOfMeasureController::edit","id":"4"},"request_uri":"http://localhost:8000/unitofmeasure/4/edit","method":"GET"} []
[2020-08-07T22:42:58.533437+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:42:58.533512+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:58.533587+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:42:58.536614+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 WHERE t0.id = ? ["4"] []
[2020-08-07T22:42:58.555245+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:42:58.909626+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f8e553"},"request_uri":"http://localhost:8000/_wdt/f8e553","method":"GET"} []
[2020-08-07T22:43:02.826903+02:00] request.INFO: Matched route "unit_of_measure_edit". {"route":"unit_of_measure_edit","route_parameters":{"_route":"unit_of_measure_edit","_controller":"App\\Controller\\UnitOfMeasureController::edit","id":"4"},"request_uri":"http://localhost:8000/unitofmeasure/4/edit","method":"POST"} []
[2020-08-07T22:43:02.830734+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:43:02.830822+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:43:02.830874+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:43:02.831053+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:43:02.834724+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 WHERE t0.id = ? ["4"] []
[2020-08-07T22:43:02.848196+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T22:43:02.848486+02:00] doctrine.DEBUG: UPDATE unit_of_measure SET name = ? WHERE id = ? ["m",4] []
[2020-08-07T22:43:02.848941+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T22:43:02.973153+02:00] request.INFO: Matched route "unit_of_measure_index". {"route":"unit_of_measure_index","route_parameters":{"_route":"unit_of_measure_index","_controller":"App\\Controller\\UnitOfMeasureController::index"},"request_uri":"http://localhost:8000/unitofmeasure/","method":"GET"} []
[2020-08-07T22:43:02.977292+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:43:02.977466+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:43:02.977604+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:43:02.984841+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 [] []
[2020-08-07T22:43:02.993213+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:43:03.305766+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e75282"},"request_uri":"http://localhost:8000/_wdt/e75282","method":"GET"} []
[2020-08-07T22:43:08.346951+02:00] request.INFO: Matched route "unit_of_measure_new". {"route":"unit_of_measure_new","route_parameters":{"_route":"unit_of_measure_new","_controller":"App\\Controller\\UnitOfMeasureController::new"},"request_uri":"http://localhost:8000/unitofmeasure/new","method":"GET"} []
[2020-08-07T22:43:08.349511+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:43:08.349604+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:43:08.349677+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:43:08.362070+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:43:08.694451+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2eef0f"},"request_uri":"http://localhost:8000/_wdt/2eef0f","method":"GET"} []
[2020-08-07T22:43:12.501996+02:00] request.INFO: Matched route "unit_of_measure_new". {"route":"unit_of_measure_new","route_parameters":{"_route":"unit_of_measure_new","_controller":"App\\Controller\\UnitOfMeasureController::new"},"request_uri":"http://localhost:8000/unitofmeasure/new","method":"POST"} []
[2020-08-07T22:43:12.505152+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:43:12.505311+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:43:12.505377+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:43:12.505615+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:43:12.523873+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T22:43:12.524564+02:00] doctrine.DEBUG: INSERT INTO unit_of_measure (name) VALUES (?) {"1":"inch"} []
[2020-08-07T22:43:12.525017+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T22:43:12.716005+02:00] request.INFO: Matched route "unit_of_measure_index". {"route":"unit_of_measure_index","route_parameters":{"_route":"unit_of_measure_index","_controller":"App\\Controller\\UnitOfMeasureController::index"},"request_uri":"http://localhost:8000/unitofmeasure/","method":"GET"} []
[2020-08-07T22:43:12.718162+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:43:12.718243+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:43:12.718294+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:43:12.721689+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 [] []
[2020-08-07T22:43:12.727204+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:43:13.027223+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ced92a"},"request_uri":"http://localhost:8000/_wdt/ced92a","method":"GET"} []
[2020-08-07T22:44:42.212203+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-07T22:44:42.213930+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.215198+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.215686+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.216015+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-08-07T22:44:42.216302+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.216958+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.217525+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.217952+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-08-07T22:44:42.218270+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.218876+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.219322+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.219642+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-08-07T22:44:42.219932+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.220452+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.220880+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.221188+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-08-07T22:44:42.221474+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.221988+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.222398+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.222712+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-08-07T22:44:42.222998+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.223549+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.224067+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.224445+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-08-07T22:44:42.224763+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.225462+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.225973+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.226385+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-08-07T22:44:42.226684+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.227390+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.228136+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.228730+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-08-07T22:44:42.229052+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.229567+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.229967+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.230268+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-08-07T22:44:42.230538+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.231056+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.231557+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.231924+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-08-07T22:44:42.232239+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.232904+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.233472+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.233825+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-08-07T22:44:42.234147+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.234762+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.235312+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.235711+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-08-07T22:44:42.236015+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'unit_of_measure' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.236554+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'unit_of_measure' */ WHERE k.table_name = 'unit_of_measure' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.237001+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'unit_of_measure' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.237315+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'unit_of_measure' [] []
[2020-08-07T22:44:42.237612+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.238291+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.238853+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.239285+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-07T22:44:42.239628+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.240203+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.240618+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.240904+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-08-07T22:44:42.244624+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-07T22:44:42.245293+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.245854+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.246223+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.246514+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-08-07T22:44:42.246791+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.247280+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.247714+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.248083+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-08-07T22:44:42.248354+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.248861+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.249230+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.249516+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-08-07T22:44:42.249819+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.250339+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.250705+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.251014+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-08-07T22:44:42.251323+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.251856+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.252212+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.252511+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-08-07T22:44:42.252783+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.253291+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.253731+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.254168+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-08-07T22:44:42.254611+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.255757+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.256439+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.256974+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-08-07T22:44:42.257396+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.260596+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.261145+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.261542+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-08-07T22:44:42.261934+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.262568+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.262991+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.263303+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-08-07T22:44:42.263625+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.264249+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.264783+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.265291+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-08-07T22:44:42.265781+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.266674+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.267187+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.267596+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-08-07T22:44:42.268025+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.268772+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.269330+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.269709+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-08-07T22:44:42.271294+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'unit_of_measure' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.272607+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'unit_of_measure' */ WHERE k.table_name = 'unit_of_measure' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.273426+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'unit_of_measure' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.274890+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'unit_of_measure' [] []
[2020-08-07T22:44:42.275509+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.277920+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.278663+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.279097+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-07T22:44:42.279424+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:44:42.279990+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:44:42.280429+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:44:42.280734+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-08-07T22:44:42.282055+02:00] doctrine.DEBUG: ALTER TABLE stock ADD unit_of_measure_id INT DEFAULT NULL [] []
[2020-08-07T22:44:43.119445+02:00] doctrine.DEBUG: ALTER TABLE stock ADD CONSTRAINT FK_4B365660DA4E2C90 FOREIGN KEY (unit_of_measure_id) REFERENCES unit_of_measure (id) [] []
[2020-08-07T22:44:44.041032+02:00] doctrine.DEBUG: CREATE INDEX IDX_4B365660DA4E2C90 ON stock (unit_of_measure_id) [] []
[2020-08-07T22:47:15.162614+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-07T22:47:15.164255+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.165495+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.165960+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.166276+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-08-07T22:47:15.166663+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.167300+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.167903+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.168311+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-08-07T22:47:15.168636+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.169252+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.169737+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.170044+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-08-07T22:47:15.170347+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.170899+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.171339+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.171678+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-08-07T22:47:15.171976+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.172544+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.172940+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.173295+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-08-07T22:47:15.173614+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.174238+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.174785+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.175182+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-08-07T22:47:15.175545+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.176224+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.176902+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.177323+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-08-07T22:47:15.177636+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.178383+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.179072+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.179558+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-08-07T22:47:15.179907+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.180638+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.181129+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.181432+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-08-07T22:47:15.181727+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.182303+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.182906+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.183359+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-08-07T22:47:15.183674+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.184278+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.184754+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.185089+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-08-07T22:47:15.185395+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.185972+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.186490+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.186867+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-08-07T22:47:15.187190+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'unit_of_measure' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.187825+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'unit_of_measure' */ WHERE k.table_name = 'unit_of_measure' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.188307+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'unit_of_measure' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.188610+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'unit_of_measure' [] []
[2020-08-07T22:47:15.188893+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.189545+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.190100+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.190544+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-07T22:47:15.190859+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.191545+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.192048+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.192374+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-08-07T22:47:15.196309+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-07T22:47:15.196983+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.197541+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.197930+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.198248+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-08-07T22:47:15.198536+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.199023+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.199421+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.199775+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-08-07T22:47:15.200050+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.200548+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.200980+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.201274+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-08-07T22:47:15.201544+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.202037+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.202393+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.202681+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-08-07T22:47:15.202951+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.203438+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.203799+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.204090+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-08-07T22:47:15.204371+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.204922+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.205400+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.205809+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-08-07T22:47:15.206142+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.207332+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.207936+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.208350+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-08-07T22:47:15.208699+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.209468+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.211596+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.212521+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-08-07T22:47:15.212875+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.213428+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.213824+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.214206+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-08-07T22:47:15.214546+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.215306+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.216011+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.216530+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-08-07T22:47:15.216927+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.217558+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.218045+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.218376+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-08-07T22:47:15.218705+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.219352+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.220015+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.220416+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-08-07T22:47:15.220773+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'unit_of_measure' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.221410+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'unit_of_measure' */ WHERE k.table_name = 'unit_of_measure' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.221927+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'unit_of_measure' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.222459+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'unit_of_measure' [] []
[2020-08-07T22:47:15.223819+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.224668+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.225231+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.225697+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-07T22:47:15.226067+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:15.228484+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:15.229006+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:15.229345+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-08-07T22:47:15.230801+02:00] doctrine.DEBUG: ALTER TABLE product ADD unit_of_measure_id INT DEFAULT NULL [] []
[2020-08-07T22:47:16.198896+02:00] doctrine.DEBUG: ALTER TABLE product ADD CONSTRAINT FK_D34A04ADDA4E2C90 FOREIGN KEY (unit_of_measure_id) REFERENCES unit_of_measure (id) [] []
[2020-08-07T22:47:17.233098+02:00] doctrine.DEBUG: CREATE INDEX IDX_D34A04ADDA4E2C90 ON product (unit_of_measure_id) [] []
[2020-08-07T22:47:48.251105+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-07T22:47:48.252866+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.254127+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.254624+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.254974+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-08-07T22:47:48.255289+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.255873+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.256381+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.256744+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-08-07T22:47:48.257070+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.257667+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.258107+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.258431+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-08-07T22:47:48.258735+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.259284+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.259698+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.260044+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-08-07T22:47:48.260345+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.260893+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.261293+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.261607+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-08-07T22:47:48.261903+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.262471+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.262940+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.263286+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-08-07T22:47:48.263621+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.264248+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.264819+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.265245+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-08-07T22:47:48.265560+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.266298+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.266967+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.267433+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-08-07T22:47:48.267773+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.268370+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.268785+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.269109+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-08-07T22:47:48.269424+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.272024+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.272526+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.272918+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-08-07T22:47:48.273210+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.273763+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.274192+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.274527+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-08-07T22:47:48.274831+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.275353+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.275836+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.276234+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-08-07T22:47:48.276569+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'unit_of_measure' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.277127+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'unit_of_measure' */ WHERE k.table_name = 'unit_of_measure' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.277539+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'unit_of_measure' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.277850+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'unit_of_measure' [] []
[2020-08-07T22:47:48.278143+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.278765+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.279275+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.279733+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-07T22:47:48.280037+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.280593+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.280969+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.281283+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-08-07T22:47:48.285252+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-07T22:47:48.286079+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.286769+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.287202+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.287571+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-08-07T22:47:48.287932+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.288502+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.288956+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.289338+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-08-07T22:47:48.289611+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.290099+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.290451+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.290750+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-08-07T22:47:48.291024+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.291558+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.291917+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.292239+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-08-07T22:47:48.292600+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.293239+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.293666+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.293987+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-08-07T22:47:48.294304+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.295001+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.295635+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.296117+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-08-07T22:47:48.296822+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.297671+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.298362+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.299005+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-08-07T22:47:48.300831+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.301943+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.303565+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.304432+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-08-07T22:47:48.304948+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.305549+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.306011+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.306338+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-08-07T22:47:48.306643+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.307260+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.307846+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.308265+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-08-07T22:47:48.308573+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.309140+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.309520+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.309960+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-08-07T22:47:48.310249+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.310773+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.311404+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.312031+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-08-07T22:47:48.312561+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'unit_of_measure' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.313433+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'unit_of_measure' */ WHERE k.table_name = 'unit_of_measure' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.314211+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'unit_of_measure' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.315872+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'unit_of_measure' [] []
[2020-08-07T22:47:48.316723+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.318813+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.319394+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.319799+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-07T22:47:48.320087+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:47:48.320666+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:47:48.321053+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:47:48.321346+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-08-07T22:47:48.322655+02:00] doctrine.DEBUG: ALTER TABLE product DROP FOREIGN KEY FK_D34A04ADDA4E2C90 [] []
[2020-08-07T22:47:48.408144+02:00] doctrine.DEBUG: DROP INDEX IDX_D34A04ADDA4E2C90 ON product [] []
[2020-08-07T22:47:48.575911+02:00] doctrine.DEBUG: ALTER TABLE product DROP unit_of_measure_id [] []
[2020-08-07T22:48:48.666231+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-07T22:48:48.667942+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.669255+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.669791+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.670153+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-08-07T22:48:48.670477+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.671011+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.671510+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.671875+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-08-07T22:48:48.672157+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.672827+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.673247+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.673611+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-08-07T22:48:48.673952+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.674589+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.675054+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.675384+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-08-07T22:48:48.675704+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.676279+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.676684+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.677008+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-08-07T22:48:48.677308+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.677939+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.678437+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.678782+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-08-07T22:48:48.679112+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.679767+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.680322+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.680746+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-08-07T22:48:48.681060+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.681841+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.682497+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.682960+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-08-07T22:48:48.683258+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.683917+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.684573+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.685019+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-08-07T22:48:48.685340+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.686000+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.686622+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.687103+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-08-07T22:48:48.687402+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.688037+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.688432+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.688738+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-08-07T22:48:48.689039+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.689626+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.690114+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.690521+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-08-07T22:48:48.690831+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'unit_of_measure' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.691374+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'unit_of_measure' */ WHERE k.table_name = 'unit_of_measure' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.691854+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'unit_of_measure' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.692182+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'unit_of_measure' [] []
[2020-08-07T22:48:48.692510+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.693412+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.693908+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.694348+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-07T22:48:48.694660+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.695309+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.695783+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.696123+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-08-07T22:48:48.699940+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-07T22:48:48.700696+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.701346+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute' */ WHERE k.table_name = 'attribute' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.701780+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.702096+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute' [] []
[2020-08-07T22:48:48.702387+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'attribute_value' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.702901+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'attribute_value' */ WHERE k.table_name = 'attribute_value' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.703390+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'attribute_value' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.703791+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'attribute_value' [] []
[2020-08-07T22:48:48.704105+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'brand' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.704655+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'brand' */ WHERE k.table_name = 'brand' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.705060+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'brand' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.705360+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'brand' [] []
[2020-08-07T22:48:48.705637+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.706135+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.706482+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.706770+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2020-08-07T22:48:48.707047+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'college' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.707579+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'college' */ WHERE k.table_name = 'college' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.707926+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'college' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.708210+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'college' [] []
[2020-08-07T22:48:48.708493+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'department' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.709027+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'department' */ WHERE k.table_name = 'department' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.710153+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'department' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.711247+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'department' [] []
[2020-08-07T22:48:48.711593+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'order' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.712283+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'order' */ WHERE k.table_name = 'order' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.712928+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'order' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.715313+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'order' [] []
[2020-08-07T22:48:48.715908+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.716668+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product' */ WHERE k.table_name = 'product' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.717303+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.717755+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product' [] []
[2020-08-07T22:48:48.718085+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'product_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.718705+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'product_type' */ WHERE k.table_name = 'product_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.719146+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'product_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.719513+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'product_type' [] []
[2020-08-07T22:48:48.719815+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'stock' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.720430+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'stock' */ WHERE k.table_name = 'stock' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.720978+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'stock' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.721391+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'stock' [] []
[2020-08-07T22:48:48.721710+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'store' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.722325+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'store' */ WHERE k.table_name = 'store' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.722750+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'store' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.723068+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'store' [] []
[2020-08-07T22:48:48.723379+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'transfer' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.724005+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'transfer' */ WHERE k.table_name = 'transfer' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.725522+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'transfer' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.726191+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'transfer' [] []
[2020-08-07T22:48:48.727453+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'unit_of_measure' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.728348+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'unit_of_measure' */ WHERE k.table_name = 'unit_of_measure' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.728781+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'unit_of_measure' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.729187+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'unit_of_measure' [] []
[2020-08-07T22:48:48.729597+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.731230+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.733033+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.733577+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-07T22:48:48.733897+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'inventory' AND TABLE_NAME = 'user_type' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-07T22:48:48.734546+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user_type' */ WHERE k.table_name = 'user_type' AND k.table_schema = 'inventory' /*!50116 AND c.constraint_schema = 'inventory' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-07T22:48:48.735015+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user_type' AND TABLE_SCHEMA = 'inventory' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-07T22:48:48.735319+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user_type' [] []
[2020-08-07T22:48:48.736726+02:00] doctrine.DEBUG: ALTER TABLE stock DROP FOREIGN KEY FK_4B365660DA4E2C90 [] []
[2020-08-07T22:48:48.832051+02:00] doctrine.DEBUG: DROP INDEX IDX_4B365660DA4E2C90 ON stock [] []
[2020-08-07T22:48:48.966486+02:00] doctrine.DEBUG: ALTER TABLE stock DROP unit_of_measure_id [] []
[2020-08-07T22:48:49.936308+02:00] doctrine.DEBUG: ALTER TABLE product ADD unit_of_measure_id INT DEFAULT NULL [] []
[2020-08-07T22:48:50.740709+02:00] doctrine.DEBUG: ALTER TABLE product ADD CONSTRAINT FK_D34A04ADDA4E2C90 FOREIGN KEY (unit_of_measure_id) REFERENCES unit_of_measure (id) [] []
[2020-08-07T22:48:51.874083+02:00] doctrine.DEBUG: CREATE INDEX IDX_D34A04ADDA4E2C90 ON product (unit_of_measure_id) [] []
[2020-08-07T22:52:24.408517+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:52:24.412597+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:52:24.412712+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:52:24.412785+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:52:24.442334+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Syntax Error] line 0, col 65: Error: Expected IdentificationVariable | ScalarExpression | AggregateExpression | FunctionDeclaration | PartialObjectExpression | "(" Subselect ")" | CaseExpression, got 'as'" at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 54 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Syntax Error] line 0, col 65: Error: Expected IdentificationVariable | ScalarExpression | AggregateExpression | FunctionDeclaration | PartialObjectExpression | \"(\" Subselect \")\" | CaseExpression, got 'as' at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:54)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT sum(s.quantity) as quantity, p.name as product, uom.name, as uom,s.id as id FROM App\\Entity\\Stock s INNER JOIN s.product p INNER JOIN p.unitOfMeasure uom GROUP BY p.id ORDER BY s.date asc at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)"} []
[2020-08-07T22:52:24.709132+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:52:24.900203+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"971463"},"request_uri":"http://localhost:8000/_wdt/971463","method":"GET"} []
[2020-08-07T22:52:31.162370+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:52:31.165058+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:52:31.165143+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:52:31.165205+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:52:31.176190+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Syntax Error] line 0, col 65: Error: Expected IdentificationVariable | ScalarExpression | AggregateExpression | FunctionDeclaration | PartialObjectExpression | "(" Subselect ")" | CaseExpression, got 'as'" at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 54 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Syntax Error] line 0, col 65: Error: Expected IdentificationVariable | ScalarExpression | AggregateExpression | FunctionDeclaration | PartialObjectExpression | \"(\" Subselect \")\" | CaseExpression, got 'as' at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:54)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT sum(s.quantity) as quantity, p.name as product, uom.name, as uom,s.id as id FROM App\\Entity\\Stock s INNER JOIN s.product p INNER JOIN p.unitOfMeasure uom GROUP BY p.id ORDER BY s.date asc at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)"} []
[2020-08-07T22:52:31.425518+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:52:31.546204+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"887f3e"},"request_uri":"http://localhost:8000/_wdt/887f3e","method":"GET"} []
[2020-08-07T22:52:49.981264+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:52:49.984665+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:52:49.984811+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:52:49.984914+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:52:49.997431+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Semantical Error] line 0, col 156 near 'uom GROUP BY': Error: 'uom' is already defined." at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 65 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Semantical Error] line 0, col 156 near 'uom GROUP BY': Error: 'uom' is already defined. at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:65)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT sum(s.quantity) as quantity, p.name as product, uom.name as uom,s.id as id FROM App\\Entity\\Stock s INNER JOIN s.product p INNER JOIN p.unitOfMeasure uom GROUP BY p.id ORDER BY s.date asc at /var/www/inventory/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)"} []
[2020-08-07T22:52:50.341020+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:52:50.464808+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"464417"},"request_uri":"http://localhost:8000/_wdt/464417","method":"GET"} []
[2020-08-07T22:53:21.220591+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:53:21.223491+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:53:21.223600+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:53:21.223670+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:53:21.233969+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T22:53:21.237858+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T22:53:21.241630+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:53:21.286517+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:53:21.620872+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ebe3c0"},"request_uri":"http://localhost:8000/_wdt/ebe3c0","method":"GET"} []
[2020-08-07T22:53:44.264961+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ced92a"},"request_uri":"http://localhost:8000/_wdt/ced92a","method":"GET"} []
[2020-08-07T22:53:48.771797+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/product/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"product_index"},"request_uri":"http://localhost:8000/product","method":"GET"} []
[2020-08-07T22:53:48.774465+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:53:48.774544+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:53:48.774589+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:53:48.778068+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:53:48.803884+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T22:53:48.805809+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:53:48.805883+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:53:48.805926+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:53:48.834897+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T22:53:48.836290+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T22:53:48.838066+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T22:53:48.843699+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T22:53:48.844484+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T22:53:48.845010+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T22:53:48.854858+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:53:49.162031+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f3827f"},"request_uri":"http://localhost:8000/_wdt/f3827f","method":"GET"} []
[2020-08-07T22:53:54.416547+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-08-07T22:53:54.420565+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:53:54.420652+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:53:54.420712+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:53:54.420933+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:53:54.426682+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-08-07T22:53:54.436996+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [4] []
[2020-08-07T22:53:54.437957+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-08-07T22:53:54.438772+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [1] []
[2020-08-07T22:53:54.441699+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T22:53:54.442395+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T22:53:54.443250+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T22:53:54.444704+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T22:53:54.445383+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T22:53:54.445850+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T22:53:54.758238+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aed593"},"request_uri":"http://localhost:8000/_wdt/aed593","method":"GET"} []
[2020-08-07T22:54:22.954464+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-08-07T22:54:22.957203+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:54:22.957289+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:54:22.957351+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:54:22.957579+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:54:22.963359+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-08-07T22:54:22.975091+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [4] []
[2020-08-07T22:54:22.975661+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-08-07T22:54:22.976123+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [1] []
[2020-08-07T22:54:22.976569+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 WHERE t0.id = ? [2] []
[2020-08-07T22:54:22.979479+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T22:54:22.980250+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T22:54:22.981553+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T22:54:22.983100+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T22:54:22.983990+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T22:54:22.984566+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T22:54:22.985196+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1 FROM unit_of_measure u0_ [] []
[2020-08-07T22:54:22.987557+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Catchable Fatal Error: Object of class App\Entity\UnitOfMeasure could not be converted to string" at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php line 57 {"exception":"[object] (ErrorException(code: 0): Catchable Fatal Error: Object of class App\\Entity\\UnitOfMeasure could not be converted to string at /var/www/inventory/vendor/symfony/doctrine-bridge/Form/Type/DoctrineType.php:57)"} []
[2020-08-07T22:54:23.139027+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1c2ba6"},"request_uri":"http://localhost:8000/_wdt/1c2ba6","method":"GET"} []
[2020-08-07T22:55:01.320389+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T22:55:01.322801+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:55:01.322872+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:55:01.322929+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:55:01.340734+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T22:55:01.341457+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T22:55:01.342160+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T22:55:01.347237+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T22:55:01.348147+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T22:55:01.348702+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T22:55:01.349169+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1 FROM unit_of_measure u0_ [] []
[2020-08-07T22:55:01.357615+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:55:01.668082+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cbe1b8"},"request_uri":"http://localhost:8000/_wdt/cbe1b8","method":"GET"} []
[2020-08-07T22:55:29.915834+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-08-07T22:55:29.918835+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:55:29.918920+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:55:29.918962+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:55:29.919114+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:55:29.924491+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-08-07T22:55:29.935255+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [4] []
[2020-08-07T22:55:29.935778+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-08-07T22:55:29.936098+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [1] []
[2020-08-07T22:55:29.936391+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 WHERE t0.id = ? [2] []
[2020-08-07T22:55:29.939436+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T22:55:29.940168+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T22:55:29.941129+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T22:55:29.942709+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T22:55:29.943415+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T22:55:29.944093+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T22:55:29.944629+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1 FROM unit_of_measure u0_ [] []
[2020-08-07T22:55:30.272547+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"073853"},"request_uri":"http://localhost:8000/_wdt/073853","method":"GET"} []
[2020-08-07T22:58:05.217411+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T22:58:05.220724+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:58:05.220817+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:58:05.220888+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:58:05.235049+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T22:58:05.235796+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T22:58:05.236706+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T22:58:05.242616+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T22:58:05.243393+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T22:58:05.244077+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T22:58:05.244654+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1 FROM unit_of_measure u0_ [] []
[2020-08-07T22:58:05.260373+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:58:05.549579+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"17a1ee"},"request_uri":"http://localhost:8000/_wdt/17a1ee","method":"GET"} []
[2020-08-07T22:58:09.468413+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-08-07T22:58:09.473487+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:58:09.473626+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:58:09.473745+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:58:09.474185+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:58:09.486078+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-08-07T22:58:09.505833+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [4] []
[2020-08-07T22:58:09.506632+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-08-07T22:58:09.507260+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [1] []
[2020-08-07T22:58:09.507921+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 WHERE t0.id = ? [2] []
[2020-08-07T22:58:09.514176+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T22:58:09.515371+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T22:58:09.517241+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T22:58:09.520860+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T22:58:09.522179+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T22:58:09.523080+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T22:58:09.523964+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1 FROM unit_of_measure u0_ [] []
[2020-08-07T22:58:09.913630+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"430355"},"request_uri":"http://localhost:8000/_wdt/430355","method":"GET"} []
[2020-08-07T22:59:24.804377+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-08-07T22:59:24.807371+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:59:24.807452+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:59:24.807560+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:59:24.807789+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:59:24.813870+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-08-07T22:59:24.823793+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [4] []
[2020-08-07T22:59:24.824268+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-08-07T22:59:24.824608+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [1] []
[2020-08-07T22:59:24.824907+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 WHERE t0.id = ? [2] []
[2020-08-07T22:59:24.828370+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T22:59:24.829047+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T22:59:24.829878+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T22:59:24.831388+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T22:59:24.832078+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T22:59:24.832542+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T22:59:24.833041+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1 FROM unit_of_measure u0_ [] []
[2020-08-07T22:59:25.127298+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"17051e"},"request_uri":"http://localhost:8000/_wdt/17051e","method":"GET"} []
[2020-08-07T22:59:34.005082+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"POST"} []
[2020-08-07T22:59:34.009672+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:59:34.009779+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:59:34.009830+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:59:34.010016+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:59:34.015314+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? LIMIT 1 ["3"] []
[2020-08-07T22:59:34.027201+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM brand t0 WHERE t0.id = ? [4] []
[2020-08-07T22:59:34.027714+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-08-07T22:59:34.028107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [1] []
[2020-08-07T22:59:34.028460+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM unit_of_measure t0 WHERE t0.id = ? [2] []
[2020-08-07T22:59:34.031005+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ WHERE b0_.id IN (?) [["4"]] []
[2020-08-07T22:59:34.032017+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ WHERE c0_.id IN (?) [["2"]] []
[2020-08-07T22:59:34.032817+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ WHERE p0_.id IN (?) [["1"]] []
[2020-08-07T22:59:34.033557+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1 FROM unit_of_measure u0_ WHERE u0_.id IN (?) [["5"]] []
[2020-08-07T22:59:34.046297+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T22:59:34.046658+02:00] doctrine.DEBUG: UPDATE product SET unit_of_measure_id = ? WHERE id = ? [5,3] []
[2020-08-07T22:59:34.047202+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T22:59:34.247733+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T22:59:34.249654+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:59:34.249731+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:59:34.249786+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:59:34.261243+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T22:59:34.262529+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T22:59:34.263593+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T22:59:34.270903+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T22:59:34.271898+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T22:59:34.272588+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T22:59:34.273248+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1 FROM unit_of_measure u0_ [] []
[2020-08-07T22:59:34.283000+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:59:34.979528+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b80540"},"request_uri":"http://localhost:8000/_wdt/b80540","method":"GET"} []
[2020-08-07T22:59:38.416080+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T22:59:38.418426+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T22:59:38.418498+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:59:38.418540+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T22:59:38.429141+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T22:59:38.432920+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T22:59:38.437331+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T22:59:38.444895+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:59:38.721324+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e7feb6"},"request_uri":"http://localhost:8000/_wdt/e7feb6","method":"GET"} []
[2020-08-07T23:00:16.961083+02:00] request.INFO: Matched route "stock_show". {"route":"stock_show","route_parameters":{"_route":"stock_show","_controller":"App\\Controller\\StockController::show","id":"2"},"request_uri":"http://localhost:8000/stock/2","method":"GET"} []
[2020-08-07T23:00:16.965702+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:00:16.965811+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:00:16.965874+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:00:16.972283+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? ["2"] []
[2020-08-07T23:00:16.981672+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:00:17.295975+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b5b976"},"request_uri":"http://localhost:8000/_wdt/b5b976","method":"GET"} []
[2020-08-07T23:00:56.501679+02:00] request.INFO: Matched route "stock_show". {"route":"stock_show","route_parameters":{"_route":"stock_show","_controller":"App\\Controller\\StockController::show","id":"2"},"request_uri":"http://localhost:8000/stock/2","method":"GET"} []
[2020-08-07T23:00:56.506264+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:00:56.506366+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:00:56.506422+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:00:56.512436+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.quantity AS quantity_2, t0.date AS date_3, t0.product_id AS product_id_4, t0.store_id AS store_id_5 FROM stock t0 WHERE t0.id = ? ["2"] []
[2020-08-07T23:00:56.519719+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:00:56.815810+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7f2bf1"},"request_uri":"http://localhost:8000/_wdt/7f2bf1","method":"GET"} []
[2020-08-07T23:01:02.423689+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e7feb6"},"request_uri":"http://localhost:8000/_wdt/e7feb6","method":"GET"} []
[2020-08-07T23:01:55.702286+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:01:55.704378+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:01:55.704502+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:01:55.704566+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:01:55.715169+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:01:55.719008+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:01:55.722878+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:01:55.734149+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:01:56.002269+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"488989"},"request_uri":"http://localhost:8000/_wdt/488989","method":"GET"} []
[2020-08-07T23:01:58.517776+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:01:58.520753+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:01:58.520841+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:01:58.520897+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:01:58.526372+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:01:58.536841+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "quantity" nor one of the methods "quantity()", "getquantity()"/"isquantity()"/"hasquantity()" or "__call()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/templates/product/show.html.twig line 21 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"quantity\" nor one of the methods \"quantity()\", \"getquantity()\"/\"isquantity()\"/\"hasquantity()\" or \"__call()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/templates/product/show.html.twig:21)"} []
[2020-08-07T23:01:58.573353+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:01:58.698670+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bd57b3"},"request_uri":"http://localhost:8000/_wdt/bd57b3","method":"GET"} []
[2020-08-07T23:03:40.592197+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:03:40.597082+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:03:40.597214+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:03:40.597283+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:03:40.604445+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:03:40.617868+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "quantity" nor one of the methods "quantity()", "getquantity()"/"isquantity()"/"hasquantity()" or "__call()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/templates/product/show.html.twig line 21 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"quantity\" nor one of the methods \"quantity()\", \"getquantity()\"/\"isquantity()\"/\"hasquantity()\" or \"__call()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/templates/product/show.html.twig:21)"} []
[2020-08-07T23:03:40.659179+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:03:40.781312+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9df0de"},"request_uri":"http://localhost:8000/_wdt/9df0de","method":"GET"} []
[2020-08-07T23:03:42.333829+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:03:42.336421+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:03:42.336531+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:03:42.336598+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:03:42.342794+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:03:42.354523+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "quantity" nor one of the methods "quantity()", "getquantity()"/"isquantity()"/"hasquantity()" or "__call()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/templates/product/show.html.twig line 21 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"quantity\" nor one of the methods \"quantity()\", \"getquantity()\"/\"isquantity()\"/\"hasquantity()\" or \"__call()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/templates/product/show.html.twig:21)"} []
[2020-08-07T23:03:42.411927+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:03:42.522524+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"caa609"},"request_uri":"http://localhost:8000/_wdt/caa609","method":"GET"} []
[2020-08-07T23:04:33.531276+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:04:33.534009+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:04:33.534187+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:04:33.534261+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:04:33.540496+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:04:48.233702+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"488989"},"request_uri":"http://localhost:8000/_wdt/488989","method":"GET"} []
[2020-08-07T23:04:52.942253+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T23:04:52.948138+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:04:52.948232+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:04:52.948295+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:04:52.963434+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T23:04:52.964352+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T23:04:52.965241+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T23:04:52.972571+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T23:04:52.973693+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T23:04:52.974537+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T23:04:52.975294+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1 FROM unit_of_measure u0_ [] []
[2020-08-07T23:04:52.985752+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:04:53.614489+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"39ef8b"},"request_uri":"http://localhost:8000/_wdt/39ef8b","method":"GET"} []
[2020-08-07T23:04:55.296135+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:04:55.299391+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:04:55.299504+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:04:55.299559+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:04:55.305868+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:04:55.317619+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "quantity" nor one of the methods "quantity()", "getquantity()"/"isquantity()"/"hasquantity()" or "__call()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/templates/product/show.html.twig line 21 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"quantity\" nor one of the methods \"quantity()\", \"getquantity()\"/\"isquantity()\"/\"hasquantity()\" or \"__call()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/templates/product/show.html.twig:21)"} []
[2020-08-07T23:04:55.365359+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:04:55.483672+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ea2e98"},"request_uri":"http://localhost:8000/_wdt/ea2e98","method":"GET"} []
[2020-08-07T23:05:25.106703+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T23:05:25.109313+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:05:25.109388+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:05:25.109431+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:05:25.121328+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T23:05:25.122030+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T23:05:25.122742+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T23:05:25.129639+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T23:05:25.130423+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T23:05:25.130931+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T23:05:25.131386+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1 FROM unit_of_measure u0_ [] []
[2020-08-07T23:05:25.139232+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:05:25.423159+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a09f3e"},"request_uri":"http://localhost:8000/_wdt/a09f3e","method":"GET"} []
[2020-08-07T23:05:27.397699+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:05:27.400135+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:05:27.400235+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:05:27.400307+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:05:27.405422+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:05:27.420300+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:05:27.422922+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "model" nor one of the methods "model()", "getmodel()"/"ismodel()"/"hasmodel()" or "__call()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/templates/product/show.html.twig line 33 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"model\" nor one of the methods \"model()\", \"getmodel()\"/\"ismodel()\"/\"hasmodel()\" or \"__call()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/templates/product/show.html.twig:33)"} []
[2020-08-07T23:05:27.466899+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:05:27.621915+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ce8db"},"request_uri":"http://localhost:8000/_wdt/2ce8db","method":"GET"} []
[2020-08-07T23:05:39.441812+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:05:39.445076+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:05:39.445196+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:05:39.445266+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:05:39.450785+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:05:39.462552+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:05:39.465198+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "serial" nor one of the methods "serial()", "getserial()"/"isserial()"/"hasserial()" or "__call()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/templates/product/show.html.twig line 37 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"serial\" nor one of the methods \"serial()\", \"getserial()\"/\"isserial()\"/\"hasserial()\" or \"__call()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/templates/product/show.html.twig:37)"} []
[2020-08-07T23:05:39.500603+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:05:39.611867+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8ddd91"},"request_uri":"http://localhost:8000/_wdt/8ddd91","method":"GET"} []
[2020-08-07T23:06:21.831377+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:06:21.834824+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:06:21.835129+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:06:21.835177+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:06:21.840324+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:06:21.854066+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:06:21.856490+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "isavailable" nor one of the methods "isavailable()", "getisavailable()"/"isisavailable()"/"hasisavailable()" or "__call()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/templates/product/show.html.twig line 41 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"isavailable\" nor one of the methods \"isavailable()\", \"getisavailable()\"/\"isisavailable()\"/\"hasisavailable()\" or \"__call()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/templates/product/show.html.twig:41)"} []
[2020-08-07T23:06:21.895235+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:06:22.023467+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b1fb2f"},"request_uri":"http://localhost:8000/_wdt/b1fb2f","method":"GET"} []
[2020-08-07T23:06:28.936014+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:06:28.938746+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:06:28.938826+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:06:28.938888+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:06:28.943514+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:06:28.955978+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:06:28.956443+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:06:28.958444+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "store" nor one of the methods "store()", "getstore()"/"isstore()"/"hasstore()" or "__call()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/templates/product/show.html.twig line 49 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"store\" nor one of the methods \"store()\", \"getstore()\"/\"isstore()\"/\"hasstore()\" or \"__call()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/templates/product/show.html.twig:49)"} []
[2020-08-07T23:06:28.992943+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:06:29.091768+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ced173"},"request_uri":"http://localhost:8000/_wdt/ced173","method":"GET"} []
[2020-08-07T23:06:43.263607+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:06:43.266564+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:06:43.266648+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:06:43.266699+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:06:43.274037+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:06:43.288604+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:06:43.289089+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:06:43.291502+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:06:43.644838+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a8fbd9"},"request_uri":"http://localhost:8000/_wdt/a8fbd9","method":"GET"} []
[2020-08-07T23:06:46.060079+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T23:06:46.062812+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:06:46.062891+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:06:46.062934+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:06:46.076548+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T23:06:46.077338+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T23:06:46.078103+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T23:06:46.083524+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T23:06:46.084914+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T23:06:46.085439+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T23:06:46.085952+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1 FROM unit_of_measure u0_ [] []
[2020-08-07T23:06:46.094924+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:06:46.425423+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"92dc0f"},"request_uri":"http://localhost:8000/_wdt/92dc0f","method":"GET"} []
[2020-08-07T23:06:55.092976+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:06:55.095370+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:06:55.095442+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:06:55.095507+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:06:55.106838+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:06:55.110091+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:06:55.114256+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:06:55.124365+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:06:55.403443+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aeac21"},"request_uri":"http://localhost:8000/_wdt/aeac21","method":"GET"} []
[2020-08-07T23:07:03.167991+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:07:03.170364+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:07:03.170456+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:07:03.170502+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:07:03.175662+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:07:03.184917+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:07:03.185352+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:07:03.187556+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:07:03.489814+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"69d283"},"request_uri":"http://localhost:8000/_wdt/69d283","method":"GET"} []
[2020-08-07T23:07:11.263783+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"3"},"request_uri":"http://localhost:8000/product/3","method":"GET"} []
[2020-08-07T23:07:11.266111+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:07:11.266183+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:07:11.266226+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:07:11.270466+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["3"] []
[2020-08-07T23:07:11.279363+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [1] []
[2020-08-07T23:07:11.279959+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-08-07T23:07:11.282154+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:07:11.588926+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9aedc7"},"request_uri":"http://localhost:8000/_wdt/9aedc7","method":"GET"} []
[2020-08-07T23:07:15.810828+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"2"},"request_uri":"http://localhost:8000/product/2","method":"GET"} []
[2020-08-07T23:07:15.814612+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:07:15.814725+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:07:15.814797+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:07:15.819710+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["2"] []
[2020-08-07T23:07:15.826980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:07:15.827503+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:07:15.829835+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:07:16.134519+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d090cf"},"request_uri":"http://localhost:8000/_wdt/d090cf","method":"GET"} []
[2020-08-07T23:07:23.031403+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:07:23.035302+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:07:23.035405+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:07:23.035507+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:07:23.042531+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:07:23.050070+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:07:23.050457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:07:23.052933+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:07:23.343935+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aed440"},"request_uri":"http://localhost:8000/_wdt/aed440","method":"GET"} []
[2020-08-07T23:07:32.249370+02:00] request.INFO: Matched route "product_index". {"route":"product_index","route_parameters":{"_route":"product_index","_controller":"App\\Controller\\ProductController::index"},"request_uri":"http://localhost:8000/product/","method":"GET"} []
[2020-08-07T23:07:32.253298+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:07:32.253392+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:07:32.253453+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:07:32.267758+02:00] doctrine.DEBUG: SELECT count(DISTINCT p0_.id) AS sclr_0 FROM product p0_ [] []
[2020-08-07T23:07:32.268670+02:00] doctrine.DEBUG: SELECT DISTINCT p0_.id AS id_0, p0_.id AS id_1 FROM product p0_ ORDER BY p0_.id ASC LIMIT 5 [] []
[2020-08-07T23:07:32.270005+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ WHERE p0_.id IN (?) ORDER BY p0_.id ASC [[1,2,3]] []
[2020-08-07T23:07:32.276969+02:00] doctrine.DEBUG: SELECT b0_.id AS id_0, b0_.name AS name_1, b0_.description AS description_2 FROM brand b0_ [] []
[2020-08-07T23:07:32.277903+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2 FROM categories c0_ [] []
[2020-08-07T23:07:32.278590+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2 FROM product_type p0_ [] []
[2020-08-07T23:07:32.279268+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.name AS name_1 FROM unit_of_measure u0_ [] []
[2020-08-07T23:07:32.289149+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:07:32.612032+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"555754"},"request_uri":"http://localhost:8000/_wdt/555754","method":"GET"} []
[2020-08-07T23:07:37.049936+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aed440"},"request_uri":"http://localhost:8000/_wdt/aed440","method":"GET"} []
[2020-08-07T23:07:43.499322+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:07:43.502112+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:07:43.502215+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:07:43.502288+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:07:43.514211+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:07:43.517771+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:07:43.522287+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:07:43.528261+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:07:43.796296+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9fdccb"},"request_uri":"http://localhost:8000/_wdt/9fdccb","method":"GET"} []
[2020-08-07T23:08:30.366894+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:08:30.369361+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:08:30.369469+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:08:30.369535+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:08:30.380333+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:08:30.383611+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:08:30.387940+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:08:30.398619+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "product" does not exist." at /var/www/inventory/templates/balance/index.html.twig line 86 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"product\" does not exist. at /var/www/inventory/templates/balance/index.html.twig:86)"} []
[2020-08-07T23:08:30.436662+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:08:30.548831+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cab7e3"},"request_uri":"http://localhost:8000/_wdt/cab7e3","method":"GET"} []
[2020-08-07T23:08:47.827802+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:08:47.830943+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:08:47.831033+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:08:47.831086+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:08:47.841942+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:08:47.846394+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:08:47.851520+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:08:47.861260+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:08:48.160591+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"451e8a"},"request_uri":"http://localhost:8000/_wdt/451e8a","method":"GET"} []
[2020-08-07T23:09:30.487677+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:09:30.490190+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:09:30.490268+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:09:30.490312+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:09:30.501705+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:09:30.505135+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:09:30.509632+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:09:30.520195+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:09:30.802857+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"52e776"},"request_uri":"http://localhost:8000/_wdt/52e776","method":"GET"} []
[2020-08-07T23:09:38.669483+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:09:38.672716+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:09:38.672819+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:09:38.672889+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:09:38.685087+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:09:38.688449+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:09:38.692606+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:09:38.703619+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:09:38.982567+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8aa3c4"},"request_uri":"http://localhost:8000/_wdt/8aa3c4","method":"GET"} []
[2020-08-07T23:10:22.527106+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:10:22.532303+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:10:22.532443+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:10:22.532532+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:10:22.546700+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:10:22.550446+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:10:22.554652+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:10:22.565116+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:10:22.857646+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2fc41d"},"request_uri":"http://localhost:8000/_wdt/2fc41d","method":"GET"} []
[2020-08-07T23:10:49.934568+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:10:49.937021+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:10:49.937096+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:10:49.937139+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:10:49.948030+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:10:49.951223+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:10:49.955880+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:10:49.966549+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:10:50.254466+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be559b"},"request_uri":"http://localhost:8000/_wdt/be559b","method":"GET"} []
[2020-08-07T23:11:11.115306+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:11:11.118351+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:11:11.118440+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:11:11.118492+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:11:11.129394+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:11:11.132618+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:11:11.136684+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:11:11.147116+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:11:11.535873+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8e418f"},"request_uri":"http://localhost:8000/_wdt/8e418f","method":"GET"} []
[2020-08-07T23:11:23.008905+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:11:23.015543+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:11:23.015683+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:11:23.015766+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:11:23.036560+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:11:23.042738+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:11:23.052357+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:11:23.072202+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:11:23.373401+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"97af14"},"request_uri":"http://localhost:8000/_wdt/97af14","method":"GET"} []
[2020-08-07T23:12:41.110574+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:12:41.113153+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:12:41.113226+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:12:41.113269+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:12:41.123982+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:12:41.127200+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:12:41.131104+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:12:41.141396+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:12:41.393748+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"600a1f"},"request_uri":"http://localhost:8000/_wdt/600a1f","method":"GET"} []
[2020-08-07T23:12:44.864516+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:12:44.868302+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:12:44.868413+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:12:44.868504+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:12:44.876095+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:12:44.886005+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:12:44.886512+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:12:44.888912+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:12:45.188025+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"82f126"},"request_uri":"http://localhost:8000/_wdt/82f126","method":"GET"} []
[2020-08-07T23:12:48.806848+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:12:48.809394+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:12:48.809474+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:12:48.809520+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:12:48.815387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:12:48.822722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:12:48.823168+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:12:48.825458+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:12:49.135071+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"95085b"},"request_uri":"http://localhost:8000/_wdt/95085b","method":"GET"} []
[2020-08-07T23:13:08.808820+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:13:08.811421+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:13:08.811511+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:13:08.811574+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:13:08.822120+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:13:08.825353+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:13:08.830044+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:13:08.840940+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:13:09.122787+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b5a95b"},"request_uri":"http://localhost:8000/_wdt/b5a95b","method":"GET"} []
[2020-08-07T23:13:12.189598+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"3"},"request_uri":"http://localhost:8000/product/3","method":"GET"} []
[2020-08-07T23:13:12.192102+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:13:12.192175+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:13:12.192218+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:13:12.198750+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["3"] []
[2020-08-07T23:13:12.206980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [1] []
[2020-08-07T23:13:12.207404+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [2] []
[2020-08-07T23:13:12.210031+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:13:12.508502+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"703690"},"request_uri":"http://localhost:8000/_wdt/703690","method":"GET"} []
[2020-08-07T23:13:28.641797+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:13:28.645189+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:13:28.645271+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:13:28.645317+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:13:28.649854+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:13:28.658479+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:13:28.658942+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:13:28.661323+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:13:28.979786+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"53cfe5"},"request_uri":"http://localhost:8000/_wdt/53cfe5","method":"GET"} []
[2020-08-07T23:13:58.445034+02:00] request.INFO: Matched route "balance". {"route":"balance","route_parameters":{"_route":"balance","_controller":"App\\Controller\\BalanceController::index"},"request_uri":"http://localhost:8000/balance","method":"GET"} []
[2020-08-07T23:13:58.447851+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:13:58.447928+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:13:58.447971+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:13:58.457576+02:00] doctrine.DEBUG: SELECT sum(s0_.quantity) AS sclr_0, p1_.name AS name_1, u2_.name AS name_2, s0_.id AS id_3, p1_.id AS id_4 FROM stock s0_ INNER JOIN product p1_ ON s0_.product_id = p1_.id INNER JOIN unit_of_measure u2_ ON p1_.unit_of_measure_id = u2_.id GROUP BY p1_.id ORDER BY s0_.date ASC [] []
[2020-08-07T23:13:58.461424+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.name AS name_1, p0_.description AS description_2, p0_.price AS price_3, p0_.brand_id AS brand_id_4, p0_.category_id AS category_id_5, p0_.product_type_id AS product_type_id_6, p0_.unit_of_measure_id AS unit_of_measure_id_7 FROM product p0_ [] []
[2020-08-07T23:13:58.465927+02:00] doctrine.DEBUG: SELECT s0_.id AS id_0, s0_.name AS name_1, s0_.description AS description_2, s0_.is_active AS is_active_3 FROM store s0_ [] []
[2020-08-07T23:13:58.475408+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:13:58.759089+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d7b79a"},"request_uri":"http://localhost:8000/_wdt/d7b79a","method":"GET"} []
[2020-08-07T23:14:03.929328+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:14:03.932719+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:14:03.932888+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:14:03.932966+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:14:03.939609+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:14:03.946610+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:14:03.946999+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:14:03.949139+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:14:04.261179+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"382f44"},"request_uri":"http://localhost:8000/_wdt/382f44","method":"GET"} []
[2020-08-07T23:14:49.061171+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:14:49.063764+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:14:49.063839+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:14:49.063902+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:14:49.069421+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:14:49.081767+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:14:49.082290+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:14:49.084280+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Neither the property "pid" nor one of the methods "pid()", "getpid()"/"ispid()"/"haspid()" or "__call()" exist and have public access in class "App\Entity\Product"." at /var/www/inventory/templates/product/show.html.twig line 41 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Neither the property \"pid\" nor one of the methods \"pid()\", \"getpid()\"/\"ispid()\"/\"haspid()\" or \"__call()\" exist and have public access in class \"App\\Entity\\Product\". at /var/www/inventory/templates/product/show.html.twig:41)"} []
[2020-08-07T23:14:49.120382+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:14:49.220642+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4dd539"},"request_uri":"http://localhost:8000/_wdt/4dd539","method":"GET"} []
[2020-08-07T23:14:58.620391+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:14:58.623728+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:14:58.623848+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:14:58.623915+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:14:58.630898+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:14:58.650448+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:14:58.651029+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:14:58.654378+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:14:59.199851+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"58d3e4"},"request_uri":"http://localhost:8000/_wdt/58d3e4","method":"GET"} []
[2020-08-07T23:15:13.727500+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:15:13.730071+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:15:13.730146+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:13.730209+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:13.735984+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:15:13.747020+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:15:13.747406+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:15:13.750393+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:15:14.029180+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eb0bc9"},"request_uri":"http://localhost:8000/_wdt/eb0bc9","method":"GET"} []
[2020-08-07T23:15:25.064604+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:15:25.067173+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:15:25.067247+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:25.067291+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:25.071752+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:15:25.079219+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:15:25.079747+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:15:25.083262+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:15:25.395032+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1e53ff"},"request_uri":"http://localhost:8000/_wdt/1e53ff","method":"GET"} []
[2020-08-07T23:15:26.429661+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:15:26.431625+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:15:26.431702+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:26.431766+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:26.436195+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:15:26.442680+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:15:26.443191+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:15:26.445628+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:15:26.733141+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"09593d"},"request_uri":"http://localhost:8000/_wdt/09593d","method":"GET"} []
[2020-08-07T23:15:28.195778+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:15:28.198387+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:15:28.198469+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:28.198534+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:28.203635+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:15:28.210892+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:15:28.211314+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:15:28.213452+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:15:28.531538+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca2b4a"},"request_uri":"http://localhost:8000/_wdt/ca2b4a","method":"GET"} []
[2020-08-07T23:15:35.578966+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"2"},"request_uri":"http://localhost:8000/product/2","method":"GET"} []
[2020-08-07T23:15:35.584761+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:15:35.584927+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:35.585012+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:35.593196+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["2"] []
[2020-08-07T23:15:35.602958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:15:35.603400+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:15:35.605913+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:15:35.924305+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6a435f"},"request_uri":"http://localhost:8000/_wdt/6a435f","method":"GET"} []
[2020-08-07T23:15:41.238619+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"2"},"request_uri":"http://localhost:8000/product/2","method":"GET"} []
[2020-08-07T23:15:41.241845+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:15:41.241929+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:41.241989+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:41.246528+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["2"] []
[2020-08-07T23:15:41.254206+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:15:41.254723+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:15:41.257560+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:15:41.547153+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ea79c4"},"request_uri":"http://localhost:8000/_wdt/ea79c4","method":"GET"} []
[2020-08-07T23:15:42.984082+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"2"},"request_uri":"http://localhost:8000/product/2","method":"GET"} []
[2020-08-07T23:15:42.986457+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:15:42.986573+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:42.986641+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:42.992547+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["2"] []
[2020-08-07T23:15:42.999856+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:15:43.000283+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:15:43.002382+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:15:43.279965+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"535e5a"},"request_uri":"http://localhost:8000/_wdt/535e5a","method":"GET"} []
[2020-08-07T23:15:51.365553+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:15:51.368657+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:15:51.368745+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:51.368802+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:51.373450+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:15:51.380920+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:15:51.381387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:15:51.383678+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:15:51.667017+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a62e2c"},"request_uri":"http://localhost:8000/_wdt/a62e2c","method":"GET"} []
[2020-08-07T23:15:52.960306+02:00] request.INFO: Matched route "product_show". {"route":"product_show","route_parameters":{"_route":"product_show","_controller":"App\\Controller\\ProductController::show","id":"1"},"request_uri":"http://localhost:8000/product/1","method":"GET"} []
[2020-08-07T23:15:52.963532+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-08-07T23:15:52.963657+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:52.963732+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\UserAuthenticator"} []
[2020-08-07T23:15:52.969969+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.price AS price_4, t0.brand_id AS brand_id_5, t0.category_id AS category_id_6, t0.product_type_id AS product_type_id_7, t0.unit_of_measure_id AS unit_of_measure_id_8 FROM product t0 WHERE t0.id = ? ["1"] []
[2020-08-07T23:15:52.978706+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM product_type t0 WHERE t0.id = ? [2] []
[2020-08-07T23:15:52.979118+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3 FROM categories t0 WHERE t0.id = ? [1] []
[2020-08-07T23:15:52.981155+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:15:53.339070+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ec171f"},"request_uri":"http://localhost:8000/_wdt/ec171f","method":"GET"} []
